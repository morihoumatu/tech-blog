[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.2.5","content-config-digest","8d1b7566f4d3c391","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://example.com\",\"compressHTML\":true,\"base\":\"/tech-blog\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_assets\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"never\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"dracula\",\"themes\":{},\"wrap\":true,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,149,150,237,238,308,309,365,366,431,432,508,509,528,529,601,602,650,651,737,738,786,787,883,884,970,971,1041,1042,1102,1103,1209,1210,1251,1252,1338,1339,1477,1478,1548,1549,1657,1658],"algorithm-basics-explained",{"id":11,"data":13,"body":18,"filePath":19,"digest":20,"rendered":21},{"title":14,"description":15,"pubDate":16,"heroImage":17},"【図解】アルゴリズムとは？初心者が知るべき基本概念","プログラミング初心者のために、アルゴリズムの基本概念をわかりやすく図解で解説します。",["Date","2025-03-04T15:00:00.000Z"],"/tech-blog/blog-placeholder-5.jpg","# 【図解】アルゴリズムとは？初心者が知るべき基本概念\n\nプログラミングを学ぶ上で避けて通れない「アルゴリズム」という言葉。「なんだか難しそう…」と感じる方も多いのではないでしょうか？この記事では、アルゴリズムとは何か、なぜ重要なのか、そして基本的なアルゴリズムについて、図解を交えてわかりやすく解説します。\n\n## アルゴリズムとは？\n\n### 簡単に言うと…\n\nアルゴリズムとは、**問題を解決するための手順や方法**のことです。料理のレシピや組み立て説明書のようなもので、ステップバイステップで目標を達成するための道筋を示します。\n\n例えば、「朝起きてから会社に行くまで」というシンプルな行動も、以下のようなアルゴリズムで表現できます：\n\n```\n1. 目覚ましが鳴ったら起きる\n2. 顔を洗う\n3. 朝食を食べる\n4. 歯を磨く\n5. 服を着替える\n6. 鞄を持つ\n7. 家を出る\n8. 駅まで歩く\n9. 電車に乗る\n10. 会社最寄り駅で降りる\n11. 会社まで歩く\n12. 会社に到着\n```\n\nコンピュータプログラミングにおけるアルゴリズムも同じ考え方です。特定の問題を解決するための、明確で順序立てられた手順の集まりなのです。\n\n### アルゴリズムの特徴\n\n良いアルゴリズムには、以下のような特徴があります：\n\n1. **明確性**：各ステップが明確で曖昧さがない\n2. **有限性**：必ず終了する（無限ループにならない）\n3. **入力**：0個以上の入力を受け取る\n4. **出力**：1個以上の出力を生成する\n5. **効率性**：リソース（時間・メモリなど）を効率的に使用する\n\n## なぜアルゴリズムが重要なのか？\n\nアルゴリズムを学ぶことには、以下のようなメリットがあります：\n\n### 1. 問題解決能力の向上\n\nアルゴリズム的思考を身につけることで、複雑な問題を小さな部分に分解し、効率的に解決する能力が養われます。これはプログラミングだけでなく、日常生活のあらゆる場面で役立ちます。\n\n### 2. 効率的なコードの作成\n\n同じ問題を解決するプログラムでも、アルゴリズムの選択によって実行速度やメモリ使用量が大きく変わります。適切なアルゴリズムを選ぶことで、より効率的なプログラムを作成できます。\n\n### 3. 技術面接での評価ポイント\n\n多くのIT企業の採用面接では、アルゴリズムの知識や問題解決能力が評価されます。基本的なアルゴリズムを理解していることは、就職・転職の際に大きなアドバンテージとなります。\n\n## アルゴリズムの表現方法\n\nアルゴリズムを表現する方法はいくつかありますが、主に以下の3つが使われます：\n\n### 1. 自然言語（日本語や英語など）\n\n最も基本的な表現方法で、普段使っている言葉でアルゴリズムを説明します。\n\n例：「配列の中から最大値を見つけるには、まず最初の要素を最大値とし、配列の各要素と比較していき、より大きな値が見つかったら最大値を更新する」\n\n### 2. フローチャート（流れ図）\n\nアルゴリズムの流れを視覚的に表現する方法です。処理の流れが一目でわかるため、理解しやすいという特徴があります。\n\n例：最大値を見つけるアルゴリズムのフローチャート\n```\n[開始] → [最初の要素を最大値とする] → [次の要素はある？] → Yes → [次の要素 > 最大値？] → Yes → [最大値を更新] → [次の要素へ]\n                                      ↓ No                   ↓ No                      ↑\n                                    [最大値を返す] ← ────────────────────────────────────\n                                      ↓\n                                    [終了]\n```\n\n### 3. 疑似コード（擬似言語）\n\nプログラミング言語に似た形式で書かれるが、特定の言語の文法に縛られない記述方法です。アルゴリズムの本質を表現しつつ、実装に近い形で記述できます。\n\n例：最大値を見つける疑似コード\n```\nfunction findMax(array):\n    if array is empty:\n        return null\n    \n    max = array[0]\n    for i from 1 to array.length - 1:\n        if array[i] > max:\n            max = array[i]\n    \n    return max\n```\n\n## 基本的なアルゴリズム\n\nここからは、プログラミング初心者が知っておくべき基本的なアルゴリズムをいくつか紹介します。\n\n### 1. 線形探索（Linear Search）\n\n配列の中から特定の値を探すシンプルなアルゴリズムです。先頭から順番に各要素をチェックしていきます。\n\n#### 図解\n\n```\n配列: [5, 2, 9, 1, 7]\n探す値: 9\n\nステップ1: 5 == 9? → No\nステップ2: 2 == 9? → No\nステップ3: 9 == 9? → Yes! 見つかりました（インデックス2）\n```\n\n#### 疑似コード\n\n```\nfunction linearSearch(array, target):\n    for i from 0 to array.length - 1:\n        if array[i] equals target:\n            return i  // 見つかった位置を返す\n    \n    return -1  // 見つからなかった\n```\n\n#### 特徴\n- **時間複雑度**: O(n) - 最悪の場合、配列の全要素を調べる必要がある\n- **空間複雑度**: O(1) - 追加のメモリをほとんど使用しない\n- **メリット**: シンプルで実装が容易、配列がソートされていなくても使える\n- **デメリット**: 大きな配列では効率が悪い\n\n### 2. 二分探索（Binary Search）\n\n**ソート済みの配列**で使える効率的な探索アルゴリズムです。配列の中央の値と探したい値を比較し、探索範囲を半分に絞っていきます。\n\n#### 図解\n\n```\nソート済み配列: [1, 3, 5, 7, 9, 11, 13]\n探す値: 7\n\nステップ1: 中央は7 (インデックス3)\n          7 == 7? → Yes! 見つかりました\n```\n\nもう少し複雑な例：\n\n```\nソート済み配列: [1, 3, 5, 7, 9, 11, 13]\n探す値: 9\n\nステップ1: 中央は7 (インデックス3)\n          9 > 7? → Yes、右半分を探索\n\nステップ2: 残りの配列 [9, 11, 13]\n          中央は11 (元の配列のインデックス5)\n          9 \u003C 11? → Yes、左半分を探索\n\nステップ3: 残りの配列 [9]\n          9 == 9? → Yes! 見つかりました（インデックス4）\n```\n\n#### 疑似コード\n\n```\nfunction binarySearch(array, target):\n    left = 0\n    right = array.length - 1\n    \n    while left \u003C= right:\n        mid = (left + right) / 2\n        \n        if array[mid] equals target:\n            return mid  // 見つかった位置を返す\n        else if array[mid] \u003C target:\n            left = mid + 1  // 右半分を探索\n        else:\n            right = mid - 1  // 左半分を探索\n    \n    return -1  // 見つからなかった\n```\n\n#### 特徴\n- **時間複雑度**: O(log n) - 各ステップで探索範囲が半分になる\n- **空間複雑度**: O(1) - 追加のメモリをほとんど使用しない\n- **メリット**: 大きな配列でも効率的に探索できる\n- **デメリット**: 配列がソートされている必要がある\n\n### 3. バブルソート（Bubble Sort）\n\n最も基本的なソートアルゴリズムの一つです。隣接する要素を比較し、必要に応じて交換することで、徐々に大きな値を「泡」のように右側に移動させていきます。\n\n#### 図解\n\n```\n配列: [5, 3, 8, 4, 2]\n\nパス1:\n[5, 3, 8, 4, 2] → 5 > 3? → Yes、交換 → [3, 5, 8, 4, 2]\n[3, 5, 8, 4, 2] → 5 > 8? → No、そのまま\n[3, 5, 8, 4, 2] → 8 > 4? → Yes、交換 → [3, 5, 4, 8, 2]\n[3, 5, 4, 8, 2] → 8 > 2? → Yes、交換 → [3, 5, 4, 2, 8]\n\nパス2:\n[3, 5, 4, 2, 8] → 3 > 5? → No、そのまま\n[3, 5, 4, 2, 8] → 5 > 4? → Yes、交換 → [3, 4, 5, 2, 8]\n[3, 4, 5, 2, 8] → 5 > 2? → Yes、交換 → [3, 4, 2, 5, 8]\n[3, 4, 2, 5, 8] → 5 > 8? → No、そのまま\n\nパス3:\n[3, 4, 2, 5, 8] → 3 > 4? → No、そのまま\n[3, 4, 2, 5, 8] → 4 > 2? → Yes、交換 → [3, 2, 4, 5, 8]\n[3, 2, 4, 5, 8] → 4 > 5? → No、そのまま\n[3, 2, 4, 5, 8] → 5 > 8? → No、そのまま\n\nパス4:\n[3, 2, 4, 5, 8] → 3 > 2? → Yes、交換 → [2, 3, 4, 5, 8]\n[2, 3, 4, 5, 8] → 3 > 4? → No、そのまま\n[2, 3, 4, 5, 8] → 4 > 5? → No、そのまま\n[2, 3, 4, 5, 8] → 5 > 8? → No、そのまま\n\nソート完了: [2, 3, 4, 5, 8]\n```\n\n#### 疑似コード\n\n```\nfunction bubbleSort(array):\n    n = array.length\n    \n    for i from 0 to n - 1:\n        for j from 0 to n - i - 1:\n            if array[j] > array[j + 1]:\n                // 要素を交換\n                swap array[j] and array[j + 1]\n    \n    return array\n```\n\n#### 特徴\n- **時間複雑度**: O(n²) - 二重ループを使用\n- **空間複雑度**: O(1) - 追加のメモリをほとんど使用しない\n- **メリット**: シンプルで実装が容易、小さな配列では効率的\n- **デメリット**: 大きな配列では非常に効率が悪い\n\n### 4. クイックソート（Quick Sort）\n\n「分割統治法」を用いた効率的なソートアルゴリズムです。ピボット（基準値）を選び、それより小さい要素と大きい要素に分割し、再帰的にソートしていきます。\n\n#### 図解\n\n```\n配列: [7, 2, 1, 6, 8, 5, 3, 4]\n\nステップ1: ピボットとして4を選択\n          4より小さい要素: [2, 1, 3]\n          4より大きい要素: [7, 6, 8, 5]\n          \nステップ2: 小さい部分をソート\n          [2, 1, 3] → ピボットとして3を選択\n          3より小さい要素: [2, 1]\n          3より大きい要素: []\n          \nステップ3: [2, 1] をソート\n          ピボットとして1を選択\n          1より小さい要素: []\n          1より大きい要素: [2]\n          \n          結果: [1, 2, 3]\n          \nステップ4: 大きい部分をソート\n          [7, 6, 8, 5] → ピボットとして5を選択\n          5より小さい要素: []\n          5より大きい要素: [7, 6, 8]\n          \nステップ5: [7, 6, 8] をソート\n          ピボットとして8を選択\n          8より小さい要素: [7, 6]\n          8より大きい要素: []\n          \nステップ6: [7, 6] をソート\n          ピボットとして6を選択\n          6より小さい要素: []\n          6より大きい要素: [7]\n          \n          結果: [5, 6, 7, 8]\n          \n最終結果: [1, 2, 3, 4, 5, 6, 7, 8]\n```\n\n#### 疑似コード\n\n```\nfunction quickSort(array, low, high):\n    if low \u003C high:\n        // ピボットを選び、配列を分割\n        pivotIndex = partition(array, low, high)\n        \n        // ピボットの左側をソート\n        quickSort(array, low, pivotIndex - 1)\n        \n        // ピボットの右側をソート\n        quickSort(array, pivotIndex + 1, high)\n    \n    return array\n\nfunction partition(array, low, high):\n    pivot = array[high]  // 最後の要素をピボットとして選択\n    i = low - 1\n    \n    for j from low to high - 1:\n        if array[j] \u003C= pivot:\n            i = i + 1\n            swap array[i] and array[j]\n    \n    swap array[i + 1] and array[high]\n    return i + 1\n```\n\n#### 特徴\n- **時間複雑度**: 平均 O(n log n)、最悪 O(n²)\n- **空間複雑度**: O(log n) - 再帰呼び出しのためのスタック領域\n- **メリット**: 平均的には非常に効率的、実用的なソートアルゴリズム\n- **デメリット**: 最悪の場合（既にソートされている配列など）は効率が悪い\n\n### 5. 再帰アルゴリズム（Recursion）\n\n再帰とは、関数が自分自身を呼び出す手法です。多くの問題を簡潔に解決できますが、理解するのが少し難しいかもしれません。\n\n#### 例：階乗の計算\n\n階乗（n!）は、1からnまでの整数の積です。例えば、5! = 5 × 4 × 3 × 2 × 1 = 120\n\n再帰を使った階乗の計算は以下のように表現できます：\n- 0! = 1 （基本ケース）\n- n! = n × (n-1)! （n > 0の場合）\n\n#### 図解\n\n```\nfactorial(5)を計算する:\n\nfactorial(5) = 5 × factorial(4)\n               = 5 × (4 × factorial(3))\n               = 5 × (4 × (3 × factorial(2)))\n               = 5 × (4 × (3 × (2 × factorial(1))))\n               = 5 × (4 × (3 × (2 × 1)))\n               = 5 × (4 × (3 × 2))\n               = 5 × (4 × 6)\n               = 5 × 24\n               = 120\n```\n\n#### 疑似コード\n\n```\nfunction factorial(n):\n    // 基本ケース\n    if n equals 0 or n equals 1:\n        return 1\n    \n    // 再帰ケース\n    return n * factorial(n - 1)\n```\n\n#### 特徴\n- **メリット**: 複雑な問題を簡潔に表現できる\n- **デメリット**: スタックオーバーフローの可能性がある、理解しにくい場合がある\n\n## アルゴリズムの効率性\n\nアルゴリズムの効率性を評価する際、主に以下の2つの観点から考えます：\n\n### 1. 時間複雑度（Time Complexity）\n\nアルゴリズムの実行時間がどのように増加するかを表します。入力サイズnに対して、O(n)、O(n²)、O(log n)などで表現します。\n\n- **O(1)**: 定数時間（入力サイズに関係なく一定）\n- **O(log n)**: 対数時間（二分探索など）\n- **O(n)**: 線形時間（線形探索など）\n- **O(n log n)**: 線形対数時間（効率的なソートアルゴリズムなど）\n- **O(n²)**: 二次時間（バブルソートなど）\n- **O(2^n)**: 指数時間（総当たり探索など）\n\n### 2. 空間複雑度（Space Complexity）\n\nアルゴリズムが使用するメモリ量がどのように増加するかを表します。\n\n- **O(1)**: 定数空間（追加のメモリをほとんど使用しない）\n- **O(n)**: 線形空間（入力サイズに比例したメモリを使用）\n- **O(n²)**: 二次空間（二次元配列など）\n\n## 実践的な例：アルゴリズムを使った問題解決\n\nここでは、アルゴリズムを使って実際の問題を解決する例を紹介します。\n\n### 例題：最頻値（モード）を求める\n\n配列の中で最も頻繁に出現する値（最頻値）を求めるアルゴリズムを考えてみましょう。\n\n#### 解法\n\n1. 各要素の出現回数を数える\n2. 最も出現回数が多い要素を見つける\n\n#### 疑似コード\n\n```\nfunction findMode(array):\n    if array is empty:\n        return null\n    \n    // 各要素の出現回数を数える\n    countMap = empty map\n    for each element in array:\n        if element exists in countMap:\n            countMap[element] = countMap[element] + 1\n        else:\n            countMap[element] = 1\n    \n    // 最頻値を見つける\n    maxCount = 0\n    mode = null\n    \n    for each (element, count) in countMap:\n        if count > maxCount:\n            maxCount = count\n            mode = element\n    \n    return mode\n```\n\n#### JavaScript実装\n\n```javascript\nfunction findMode(array) {\n  if (array.length === 0) return null;\n  \n  // 各要素の出現回数を数える\n  const countMap = {};\n  for (const element of array) {\n    countMap[element] = (countMap[element] || 0) + 1;\n  }\n  \n  // 最頻値を見つける\n  let maxCount = 0;\n  let mode = null;\n  \n  for (const element in countMap) {\n    if (countMap[element] > maxCount) {\n      maxCount = countMap[element];\n      mode = element;\n    }\n  }\n  \n  return mode;\n}\n\n// 使用例\nconst numbers = [1, 2, 3, 2, 2, 4, 5, 3, 2];\nconsole.log(findMode(numbers));  // 2\n```\n\n## アルゴリズムを学ぶためのリソース\n\nアルゴリズムをさらに学びたい方のために、おすすめの日本語リソースをいくつか紹介します：\n\n### 1. 日本語のオンラインプラットフォーム\n\n- **Paiza**: 実践的なプログラミング問題が豊富で、スキルチェックも可能\n- **AtCoder**: 競技プログラミングのコンテストが定期的に開催される\n- **ドットインストール**: 短い動画で基本的なアルゴリズムを学べる\n- **Progate**: 初心者向けのインタラクティブな学習プラットフォーム\n\n### 2. 書籍\n\n- **『アルゴリズム図鑑』** 石田保輝、宮崎修一 著\n- **『世界で闘うプログラミング力を鍛える150問』** Gayle Laakmann McDowell 著\n- **『問題解決力を鍛える！アルゴリズムとデータ構造』** 大槻兼資 著\n\n### 3. 日本語のYouTube チャンネル\n\n- **キノコード**: アルゴリズムやデータ構造を日本語でわかりやすく解説\n- **しまぶーのIT大学**: プログラミングの基礎からアルゴリズムまで幅広く解説\n- **Tomoaki Takezoe**: アルゴリズムの解説や競技プログラミングのテクニックを紹介\n- **JMOOC 放送大学**: 大学レベルのアルゴリズム講座が公開されている\n\n## まとめ\n\nこの記事では、アルゴリズムの基本概念から、代表的なアルゴリズム、そして効率性の評価方法まで幅広く解説しました。\n\nアルゴリズムは、プログラミングの基礎であり、効率的なコードを書くための重要な知識です。一度にすべてを理解しようとせず、少しずつ実践しながら身につけていくことをおすすめします。\n\n特に初心者の方は、以下のステップで学習を進めるとよいでしょう：\n\n1. 基本的なアルゴリズム（線形探索、バブルソートなど）を理解する\n2. 簡単な問題を解きながら、アルゴリズム的思考を身につける\n3. より効率的なアルゴリズム（二分探索、クイックソートなど）を学ぶ\n4. 実際のプロジェクトでアルゴリズムを活用する\n\nアルゴリズムの学習は一朝一夕にはいきませんが、基本を押さえて継続的に学ぶことで、プログラミングスキルは確実に向上します。\n\n次回は、データ構造（配列、リスト、スタック、キューなど）について詳しく解説する予定です。お楽しみに！","src/content/blog/algorithm-basics-explained.md","8bc532739e98d08b",{"html":22,"metadata":23},"\u003Ch1 id=\"図解アルゴリズムとは初心者が知るべき基本概念\">【図解】アルゴリズムとは？初心者が知るべき基本概念\u003C/h1>\n\u003Cp>プログラミングを学ぶ上で避けて通れない「アルゴリズム」という言葉。「なんだか難しそう…」と感じる方も多いのではないでしょうか？この記事では、アルゴリズムとは何か、なぜ重要なのか、そして基本的なアルゴリズムについて、図解を交えてわかりやすく解説します。\u003C/p>\n\u003Ch2 id=\"アルゴリズムとは\">アルゴリズムとは？\u003C/h2>\n\u003Ch3 id=\"簡単に言うと\">簡単に言うと…\u003C/h3>\n\u003Cp>アルゴリズムとは、\u003Cstrong>問題を解決するための手順や方法\u003C/strong>のことです。料理のレシピや組み立て説明書のようなもので、ステップバイステップで目標を達成するための道筋を示します。\u003C/p>\n\u003Cp>例えば、「朝起きてから会社に行くまで」というシンプルな行動も、以下のようなアルゴリズムで表現できます：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>1. 目覚ましが鳴ったら起きる\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>2. 顔を洗う\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>3. 朝食を食べる\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>4. 歯を磨く\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>5. 服を着替える\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>6. 鞄を持つ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>7. 家を出る\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>8. 駅まで歩く\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>9. 電車に乗る\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>10. 会社最寄り駅で降りる\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>11. 会社まで歩く\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>12. 会社に到着\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>コンピュータプログラミングにおけるアルゴリズムも同じ考え方です。特定の問題を解決するための、明確で順序立てられた手順の集まりなのです。\u003C/p>\n\u003Ch3 id=\"アルゴリズムの特徴\">アルゴリズムの特徴\u003C/h3>\n\u003Cp>良いアルゴリズムには、以下のような特徴があります：\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>明確性\u003C/strong>：各ステップが明確で曖昧さがない\u003C/li>\n\u003Cli>\u003Cstrong>有限性\u003C/strong>：必ず終了する（無限ループにならない）\u003C/li>\n\u003Cli>\u003Cstrong>入力\u003C/strong>：0個以上の入力を受け取る\u003C/li>\n\u003Cli>\u003Cstrong>出力\u003C/strong>：1個以上の出力を生成する\u003C/li>\n\u003Cli>\u003Cstrong>効率性\u003C/strong>：リソース（時間・メモリなど）を効率的に使用する\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"なぜアルゴリズムが重要なのか\">なぜアルゴリズムが重要なのか？\u003C/h2>\n\u003Cp>アルゴリズムを学ぶことには、以下のようなメリットがあります：\u003C/p>\n\u003Ch3 id=\"1-問題解決能力の向上\">1. 問題解決能力の向上\u003C/h3>\n\u003Cp>アルゴリズム的思考を身につけることで、複雑な問題を小さな部分に分解し、効率的に解決する能力が養われます。これはプログラミングだけでなく、日常生活のあらゆる場面で役立ちます。\u003C/p>\n\u003Ch3 id=\"2-効率的なコードの作成\">2. 効率的なコードの作成\u003C/h3>\n\u003Cp>同じ問題を解決するプログラムでも、アルゴリズムの選択によって実行速度やメモリ使用量が大きく変わります。適切なアルゴリズムを選ぶことで、より効率的なプログラムを作成できます。\u003C/p>\n\u003Ch3 id=\"3-技術面接での評価ポイント\">3. 技術面接での評価ポイント\u003C/h3>\n\u003Cp>多くのIT企業の採用面接では、アルゴリズムの知識や問題解決能力が評価されます。基本的なアルゴリズムを理解していることは、就職・転職の際に大きなアドバンテージとなります。\u003C/p>\n\u003Ch2 id=\"アルゴリズムの表現方法\">アルゴリズムの表現方法\u003C/h2>\n\u003Cp>アルゴリズムを表現する方法はいくつかありますが、主に以下の3つが使われます：\u003C/p>\n\u003Ch3 id=\"1-自然言語日本語や英語など\">1. 自然言語（日本語や英語など）\u003C/h3>\n\u003Cp>最も基本的な表現方法で、普段使っている言葉でアルゴリズムを説明します。\u003C/p>\n\u003Cp>例：「配列の中から最大値を見つけるには、まず最初の要素を最大値とし、配列の各要素と比較していき、より大きな値が見つかったら最大値を更新する」\u003C/p>\n\u003Ch3 id=\"2-フローチャート流れ図\">2. フローチャート（流れ図）\u003C/h3>\n\u003Cp>アルゴリズムの流れを視覚的に表現する方法です。処理の流れが一目でわかるため、理解しやすいという特徴があります。\u003C/p>\n\u003Cp>例：最大値を見つけるアルゴリズムのフローチャート\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>[開始] → [最初の要素を最大値とする] → [次の要素はある？] → Yes → [次の要素 > 最大値？] → Yes → [最大値を更新] → [次の要素へ]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>                                      ↓ No                   ↓ No                      ↑\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>                                    [最大値を返す] ← ────────────────────────────────────\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>                                      ↓\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>                                    [終了]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-疑似コード擬似言語\">3. 疑似コード（擬似言語）\u003C/h3>\n\u003Cp>プログラミング言語に似た形式で書かれるが、特定の言語の文法に縛られない記述方法です。アルゴリズムの本質を表現しつつ、実装に近い形で記述できます。\u003C/p>\n\u003Cp>例：最大値を見つける疑似コード\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>function findMax(array):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    if array is empty:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        return null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    max = array[0]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    for i from 1 to array.length - 1:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        if array[i] > max:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            max = array[i]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    return max\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"基本的なアルゴリズム\">基本的なアルゴリズム\u003C/h2>\n\u003Cp>ここからは、プログラミング初心者が知っておくべき基本的なアルゴリズムをいくつか紹介します。\u003C/p>\n\u003Ch3 id=\"1-線形探索linear-search\">1. 線形探索（Linear Search）\u003C/h3>\n\u003Cp>配列の中から特定の値を探すシンプルなアルゴリズムです。先頭から順番に各要素をチェックしていきます。\u003C/p>\n\u003Ch4 id=\"図解\">図解\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>配列: [5, 2, 9, 1, 7]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>探す値: 9\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ1: 5 == 9? → No\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ2: 2 == 9? → No\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ3: 9 == 9? → Yes! 見つかりました（インデックス2）\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"疑似コード\">疑似コード\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>function linearSearch(array, target):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    for i from 0 to array.length - 1:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        if array[i] equals target:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            return i  // 見つかった位置を返す\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    return -1  // 見つからなかった\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"特徴\">特徴\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>時間複雑度\u003C/strong>: O(n) - 最悪の場合、配列の全要素を調べる必要がある\u003C/li>\n\u003Cli>\u003Cstrong>空間複雑度\u003C/strong>: O(1) - 追加のメモリをほとんど使用しない\u003C/li>\n\u003Cli>\u003Cstrong>メリット\u003C/strong>: シンプルで実装が容易、配列がソートされていなくても使える\u003C/li>\n\u003Cli>\u003Cstrong>デメリット\u003C/strong>: 大きな配列では効率が悪い\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-二分探索binary-search\">2. 二分探索（Binary Search）\u003C/h3>\n\u003Cp>\u003Cstrong>ソート済みの配列\u003C/strong>で使える効率的な探索アルゴリズムです。配列の中央の値と探したい値を比較し、探索範囲を半分に絞っていきます。\u003C/p>\n\u003Ch4 id=\"図解-1\">図解\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>ソート済み配列: [1, 3, 5, 7, 9, 11, 13]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>探す値: 7\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ1: 中央は7 (インデックス3)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          7 == 7? → Yes! 見つかりました\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>もう少し複雑な例：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>ソート済み配列: [1, 3, 5, 7, 9, 11, 13]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>探す値: 9\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ1: 中央は7 (インデックス3)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          9 > 7? → Yes、右半分を探索\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ2: 残りの配列 [9, 11, 13]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          中央は11 (元の配列のインデックス5)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          9 &#x3C; 11? → Yes、左半分を探索\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ3: 残りの配列 [9]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          9 == 9? → Yes! 見つかりました（インデックス4）\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"疑似コード-1\">疑似コード\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>function binarySearch(array, target):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    left = 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    right = array.length - 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    while left &#x3C;= right:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        mid = (left + right) / 2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        if array[mid] equals target:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            return mid  // 見つかった位置を返す\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        else if array[mid] &#x3C; target:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            left = mid + 1  // 右半分を探索\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        else:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            right = mid - 1  // 左半分を探索\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    return -1  // 見つからなかった\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"特徴-1\">特徴\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>時間複雑度\u003C/strong>: O(log n) - 各ステップで探索範囲が半分になる\u003C/li>\n\u003Cli>\u003Cstrong>空間複雑度\u003C/strong>: O(1) - 追加のメモリをほとんど使用しない\u003C/li>\n\u003Cli>\u003Cstrong>メリット\u003C/strong>: 大きな配列でも効率的に探索できる\u003C/li>\n\u003Cli>\u003Cstrong>デメリット\u003C/strong>: 配列がソートされている必要がある\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-バブルソートbubble-sort\">3. バブルソート（Bubble Sort）\u003C/h3>\n\u003Cp>最も基本的なソートアルゴリズムの一つです。隣接する要素を比較し、必要に応じて交換することで、徐々に大きな値を「泡」のように右側に移動させていきます。\u003C/p>\n\u003Ch4 id=\"図解-2\">図解\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>配列: [5, 3, 8, 4, 2]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>パス1:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[5, 3, 8, 4, 2] → 5 > 3? → Yes、交換 → [3, 5, 8, 4, 2]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 5, 8, 4, 2] → 5 > 8? → No、そのまま\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 5, 8, 4, 2] → 8 > 4? → Yes、交換 → [3, 5, 4, 8, 2]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 5, 4, 8, 2] → 8 > 2? → Yes、交換 → [3, 5, 4, 2, 8]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>パス2:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 5, 4, 2, 8] → 3 > 5? → No、そのまま\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 5, 4, 2, 8] → 5 > 4? → Yes、交換 → [3, 4, 5, 2, 8]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 4, 5, 2, 8] → 5 > 2? → Yes、交換 → [3, 4, 2, 5, 8]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 4, 2, 5, 8] → 5 > 8? → No、そのまま\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>パス3:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 4, 2, 5, 8] → 3 > 4? → No、そのまま\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 4, 2, 5, 8] → 4 > 2? → Yes、交換 → [3, 2, 4, 5, 8]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 2, 4, 5, 8] → 4 > 5? → No、そのまま\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 2, 4, 5, 8] → 5 > 8? → No、そのまま\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>パス4:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[3, 2, 4, 5, 8] → 3 > 2? → Yes、交換 → [2, 3, 4, 5, 8]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[2, 3, 4, 5, 8] → 3 > 4? → No、そのまま\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[2, 3, 4, 5, 8] → 4 > 5? → No、そのまま\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[2, 3, 4, 5, 8] → 5 > 8? → No、そのまま\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ソート完了: [2, 3, 4, 5, 8]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"疑似コード-2\">疑似コード\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>function bubbleSort(array):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    n = array.length\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    for i from 0 to n - 1:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        for j from 0 to n - i - 1:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            if array[j] > array[j + 1]:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>                // 要素を交換\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>                swap array[j] and array[j + 1]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    return array\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"特徴-2\">特徴\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>時間複雑度\u003C/strong>: O(n²) - 二重ループを使用\u003C/li>\n\u003Cli>\u003Cstrong>空間複雑度\u003C/strong>: O(1) - 追加のメモリをほとんど使用しない\u003C/li>\n\u003Cli>\u003Cstrong>メリット\u003C/strong>: シンプルで実装が容易、小さな配列では効率的\u003C/li>\n\u003Cli>\u003Cstrong>デメリット\u003C/strong>: 大きな配列では非常に効率が悪い\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"4-クイックソートquick-sort\">4. クイックソート（Quick Sort）\u003C/h3>\n\u003Cp>「分割統治法」を用いた効率的なソートアルゴリズムです。ピボット（基準値）を選び、それより小さい要素と大きい要素に分割し、再帰的にソートしていきます。\u003C/p>\n\u003Ch4 id=\"図解-3\">図解\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>配列: [7, 2, 1, 6, 8, 5, 3, 4]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ1: ピボットとして4を選択\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          4より小さい要素: [2, 1, 3]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          4より大きい要素: [7, 6, 8, 5]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ2: 小さい部分をソート\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          [2, 1, 3] → ピボットとして3を選択\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          3より小さい要素: [2, 1]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          3より大きい要素: []\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ3: [2, 1] をソート\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          ピボットとして1を選択\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          1より小さい要素: []\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          1より大きい要素: [2]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          結果: [1, 2, 3]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ4: 大きい部分をソート\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          [7, 6, 8, 5] → ピボットとして5を選択\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          5より小さい要素: []\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          5より大きい要素: [7, 6, 8]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ5: [7, 6, 8] をソート\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          ピボットとして8を選択\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          8より小さい要素: [7, 6]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          8より大きい要素: []\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>ステップ6: [7, 6] をソート\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          ピボットとして6を選択\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          6より小さい要素: []\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          6より大きい要素: [7]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          結果: [5, 6, 7, 8]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>          \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>最終結果: [1, 2, 3, 4, 5, 6, 7, 8]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"疑似コード-3\">疑似コード\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>function quickSort(array, low, high):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    if low &#x3C; high:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        // ピボットを選び、配列を分割\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        pivotIndex = partition(array, low, high)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        // ピボットの左側をソート\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        quickSort(array, low, pivotIndex - 1)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        // ピボットの右側をソート\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        quickSort(array, pivotIndex + 1, high)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    return array\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>function partition(array, low, high):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    pivot = array[high]  // 最後の要素をピボットとして選択\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    i = low - 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    for j from low to high - 1:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        if array[j] &#x3C;= pivot:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            i = i + 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            swap array[i] and array[j]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    swap array[i + 1] and array[high]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    return i + 1\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"特徴-3\">特徴\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>時間複雑度\u003C/strong>: 平均 O(n log n)、最悪 O(n²)\u003C/li>\n\u003Cli>\u003Cstrong>空間複雑度\u003C/strong>: O(log n) - 再帰呼び出しのためのスタック領域\u003C/li>\n\u003Cli>\u003Cstrong>メリット\u003C/strong>: 平均的には非常に効率的、実用的なソートアルゴリズム\u003C/li>\n\u003Cli>\u003Cstrong>デメリット\u003C/strong>: 最悪の場合（既にソートされている配列など）は効率が悪い\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"5-再帰アルゴリズムrecursion\">5. 再帰アルゴリズム（Recursion）\u003C/h3>\n\u003Cp>再帰とは、関数が自分自身を呼び出す手法です。多くの問題を簡潔に解決できますが、理解するのが少し難しいかもしれません。\u003C/p>\n\u003Ch4 id=\"例階乗の計算\">例：階乗の計算\u003C/h4>\n\u003Cp>階乗（n!）は、1からnまでの整数の積です。例えば、5! = 5 × 4 × 3 × 2 × 1 = 120\u003C/p>\n\u003Cp>再帰を使った階乗の計算は以下のように表現できます：\u003C/p>\n\u003Cul>\n\u003Cli>0! = 1 （基本ケース）\u003C/li>\n\u003Cli>n! = n × (n-1)! （n > 0の場合）\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"図解-4\">図解\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>factorial(5)を計算する:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>factorial(5) = 5 × factorial(4)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>               = 5 × (4 × factorial(3))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>               = 5 × (4 × (3 × factorial(2)))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>               = 5 × (4 × (3 × (2 × factorial(1))))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>               = 5 × (4 × (3 × (2 × 1)))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>               = 5 × (4 × (3 × 2))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>               = 5 × (4 × 6)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>               = 5 × 24\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>               = 120\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"疑似コード-4\">疑似コード\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>function factorial(n):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    // 基本ケース\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    if n equals 0 or n equals 1:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        return 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    // 再帰ケース\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    return n * factorial(n - 1)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"特徴-4\">特徴\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>メリット\u003C/strong>: 複雑な問題を簡潔に表現できる\u003C/li>\n\u003Cli>\u003Cstrong>デメリット\u003C/strong>: スタックオーバーフローの可能性がある、理解しにくい場合がある\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"アルゴリズムの効率性\">アルゴリズムの効率性\u003C/h2>\n\u003Cp>アルゴリズムの効率性を評価する際、主に以下の2つの観点から考えます：\u003C/p>\n\u003Ch3 id=\"1-時間複雑度time-complexity\">1. 時間複雑度（Time Complexity）\u003C/h3>\n\u003Cp>アルゴリズムの実行時間がどのように増加するかを表します。入力サイズnに対して、O(n)、O(n²)、O(log n)などで表現します。\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>O(1)\u003C/strong>: 定数時間（入力サイズに関係なく一定）\u003C/li>\n\u003Cli>\u003Cstrong>O(log n)\u003C/strong>: 対数時間（二分探索など）\u003C/li>\n\u003Cli>\u003Cstrong>O(n)\u003C/strong>: 線形時間（線形探索など）\u003C/li>\n\u003Cli>\u003Cstrong>O(n log n)\u003C/strong>: 線形対数時間（効率的なソートアルゴリズムなど）\u003C/li>\n\u003Cli>\u003Cstrong>O(n²)\u003C/strong>: 二次時間（バブルソートなど）\u003C/li>\n\u003Cli>\u003Cstrong>O(2^n)\u003C/strong>: 指数時間（総当たり探索など）\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-空間複雑度space-complexity\">2. 空間複雑度（Space Complexity）\u003C/h3>\n\u003Cp>アルゴリズムが使用するメモリ量がどのように増加するかを表します。\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>O(1)\u003C/strong>: 定数空間（追加のメモリをほとんど使用しない）\u003C/li>\n\u003Cli>\u003Cstrong>O(n)\u003C/strong>: 線形空間（入力サイズに比例したメモリを使用）\u003C/li>\n\u003Cli>\u003Cstrong>O(n²)\u003C/strong>: 二次空間（二次元配列など）\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"実践的な例アルゴリズムを使った問題解決\">実践的な例：アルゴリズムを使った問題解決\u003C/h2>\n\u003Cp>ここでは、アルゴリズムを使って実際の問題を解決する例を紹介します。\u003C/p>\n\u003Ch3 id=\"例題最頻値モードを求める\">例題：最頻値（モード）を求める\u003C/h3>\n\u003Cp>配列の中で最も頻繁に出現する値（最頻値）を求めるアルゴリズムを考えてみましょう。\u003C/p>\n\u003Ch4 id=\"解法\">解法\u003C/h4>\n\u003Col>\n\u003Cli>各要素の出現回数を数える\u003C/li>\n\u003Cli>最も出現回数が多い要素を見つける\u003C/li>\n\u003C/ol>\n\u003Ch4 id=\"疑似コード-5\">疑似コード\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>function findMode(array):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    if array is empty:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        return null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    // 各要素の出現回数を数える\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    countMap = empty map\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    for each element in array:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        if element exists in countMap:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            countMap[element] = countMap[element] + 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        else:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            countMap[element] = 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    // 最頻値を見つける\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    maxCount = 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    mode = null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    for each (element, count) in countMap:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        if count > maxCount:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            maxCount = count\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            mode = element\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    return mode\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"javascript実装\">JavaScript実装\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> findMode\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">array\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (array.length \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> null\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 各要素の出現回数を数える\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> countMap \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> element \u003C/span>\u003Cspan style=\"color:#FF79C6\">of\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> array) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    countMap[element] \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (countMap[element] \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 最頻値を見つける\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> maxCount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> mode \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> null\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> element \u003C/span>\u003Cspan style=\"color:#FF79C6\">in\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> countMap) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (countMap[element] \u003C/span>\u003Cspan style=\"color:#FF79C6\">>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> maxCount) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      maxCount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> countMap[element];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      mode \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> element;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> mode;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 使用例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">findMode\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(numbers));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 2\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"アルゴリズムを学ぶためのリソース\">アルゴリズムを学ぶためのリソース\u003C/h2>\n\u003Cp>アルゴリズムをさらに学びたい方のために、おすすめの日本語リソースをいくつか紹介します：\u003C/p>\n\u003Ch3 id=\"1-日本語のオンラインプラットフォーム\">1. 日本語のオンラインプラットフォーム\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Paiza\u003C/strong>: 実践的なプログラミング問題が豊富で、スキルチェックも可能\u003C/li>\n\u003Cli>\u003Cstrong>AtCoder\u003C/strong>: 競技プログラミングのコンテストが定期的に開催される\u003C/li>\n\u003Cli>\u003Cstrong>ドットインストール\u003C/strong>: 短い動画で基本的なアルゴリズムを学べる\u003C/li>\n\u003Cli>\u003Cstrong>Progate\u003C/strong>: 初心者向けのインタラクティブな学習プラットフォーム\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-書籍\">2. 書籍\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>『アルゴリズム図鑑』\u003C/strong> 石田保輝、宮崎修一 著\u003C/li>\n\u003Cli>\u003Cstrong>『世界で闘うプログラミング力を鍛える150問』\u003C/strong> Gayle Laakmann McDowell 著\u003C/li>\n\u003Cli>\u003Cstrong>『問題解決力を鍛える！アルゴリズムとデータ構造』\u003C/strong> 大槻兼資 著\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-日本語のyoutube-チャンネル\">3. 日本語のYouTube チャンネル\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>キノコード\u003C/strong>: アルゴリズムやデータ構造を日本語でわかりやすく解説\u003C/li>\n\u003Cli>\u003Cstrong>しまぶーのIT大学\u003C/strong>: プログラミングの基礎からアルゴリズムまで幅広く解説\u003C/li>\n\u003Cli>\u003Cstrong>Tomoaki Takezoe\u003C/strong>: アルゴリズムの解説や競技プログラミングのテクニックを紹介\u003C/li>\n\u003Cli>\u003Cstrong>JMOOC 放送大学\u003C/strong>: 大学レベルのアルゴリズム講座が公開されている\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>この記事では、アルゴリズムの基本概念から、代表的なアルゴリズム、そして効率性の評価方法まで幅広く解説しました。\u003C/p>\n\u003Cp>アルゴリズムは、プログラミングの基礎であり、効率的なコードを書くための重要な知識です。一度にすべてを理解しようとせず、少しずつ実践しながら身につけていくことをおすすめします。\u003C/p>\n\u003Cp>特に初心者の方は、以下のステップで学習を進めるとよいでしょう：\u003C/p>\n\u003Col>\n\u003Cli>基本的なアルゴリズム（線形探索、バブルソートなど）を理解する\u003C/li>\n\u003Cli>簡単な問題を解きながら、アルゴリズム的思考を身につける\u003C/li>\n\u003Cli>より効率的なアルゴリズム（二分探索、クイックソートなど）を学ぶ\u003C/li>\n\u003Cli>実際のプロジェクトでアルゴリズムを活用する\u003C/li>\n\u003C/ol>\n\u003Cp>アルゴリズムの学習は一朝一夕にはいきませんが、基本を押さえて継続的に学ぶことで、プログラミングスキルは確実に向上します。\u003C/p>\n\u003Cp>次回は、データ構造（配列、リスト、スタック、キューなど）について詳しく解説する予定です。お楽しみに！\u003C/p>",{"headings":24,"imagePaths":146,"frontmatter":147},[25,28,32,36,38,41,44,47,50,52,55,58,61,63,66,69,71,73,76,78,80,82,85,87,89,91,94,96,98,100,103,106,108,110,112,114,117,120,123,126,128,130,133,135,138,141,144],{"depth":26,"slug":27,"text":14},1,"図解アルゴリズムとは初心者が知るべき基本概念",{"depth":29,"slug":30,"text":31},2,"アルゴリズムとは","アルゴリズムとは？",{"depth":33,"slug":34,"text":35},3,"簡単に言うと","簡単に言うと…",{"depth":33,"slug":37,"text":37},"アルゴリズムの特徴",{"depth":29,"slug":39,"text":40},"なぜアルゴリズムが重要なのか","なぜアルゴリズムが重要なのか？",{"depth":33,"slug":42,"text":43},"1-問題解決能力の向上","1. 問題解決能力の向上",{"depth":33,"slug":45,"text":46},"2-効率的なコードの作成","2. 効率的なコードの作成",{"depth":33,"slug":48,"text":49},"3-技術面接での評価ポイント","3. 技術面接での評価ポイント",{"depth":29,"slug":51,"text":51},"アルゴリズムの表現方法",{"depth":33,"slug":53,"text":54},"1-自然言語日本語や英語など","1. 自然言語（日本語や英語など）",{"depth":33,"slug":56,"text":57},"2-フローチャート流れ図","2. フローチャート（流れ図）",{"depth":33,"slug":59,"text":60},"3-疑似コード擬似言語","3. 疑似コード（擬似言語）",{"depth":29,"slug":62,"text":62},"基本的なアルゴリズム",{"depth":33,"slug":64,"text":65},"1-線形探索linear-search","1. 線形探索（Linear Search）",{"depth":67,"slug":68,"text":68},4,"図解",{"depth":67,"slug":70,"text":70},"疑似コード",{"depth":67,"slug":72,"text":72},"特徴",{"depth":33,"slug":74,"text":75},"2-二分探索binary-search","2. 二分探索（Binary Search）",{"depth":67,"slug":77,"text":68},"図解-1",{"depth":67,"slug":79,"text":70},"疑似コード-1",{"depth":67,"slug":81,"text":72},"特徴-1",{"depth":33,"slug":83,"text":84},"3-バブルソートbubble-sort","3. バブルソート（Bubble Sort）",{"depth":67,"slug":86,"text":68},"図解-2",{"depth":67,"slug":88,"text":70},"疑似コード-2",{"depth":67,"slug":90,"text":72},"特徴-2",{"depth":33,"slug":92,"text":93},"4-クイックソートquick-sort","4. クイックソート（Quick Sort）",{"depth":67,"slug":95,"text":68},"図解-3",{"depth":67,"slug":97,"text":70},"疑似コード-3",{"depth":67,"slug":99,"text":72},"特徴-3",{"depth":33,"slug":101,"text":102},"5-再帰アルゴリズムrecursion","5. 再帰アルゴリズム（Recursion）",{"depth":67,"slug":104,"text":105},"例階乗の計算","例：階乗の計算",{"depth":67,"slug":107,"text":68},"図解-4",{"depth":67,"slug":109,"text":70},"疑似コード-4",{"depth":67,"slug":111,"text":72},"特徴-4",{"depth":29,"slug":113,"text":113},"アルゴリズムの効率性",{"depth":33,"slug":115,"text":116},"1-時間複雑度time-complexity","1. 時間複雑度（Time Complexity）",{"depth":33,"slug":118,"text":119},"2-空間複雑度space-complexity","2. 空間複雑度（Space Complexity）",{"depth":29,"slug":121,"text":122},"実践的な例アルゴリズムを使った問題解決","実践的な例：アルゴリズムを使った問題解決",{"depth":33,"slug":124,"text":125},"例題最頻値モードを求める","例題：最頻値（モード）を求める",{"depth":67,"slug":127,"text":127},"解法",{"depth":67,"slug":129,"text":70},"疑似コード-5",{"depth":67,"slug":131,"text":132},"javascript実装","JavaScript実装",{"depth":29,"slug":134,"text":134},"アルゴリズムを学ぶためのリソース",{"depth":33,"slug":136,"text":137},"1-日本語のオンラインプラットフォーム","1. 日本語のオンラインプラットフォーム",{"depth":33,"slug":139,"text":140},"2-書籍","2. 書籍",{"depth":33,"slug":142,"text":143},"3-日本語のyoutube-チャンネル","3. 日本語のYouTube チャンネル",{"depth":29,"slug":145,"text":145},"まとめ",[],{"title":14,"description":15,"pubDate":148,"heroImage":17},"Mar 5 2025","database-sql-basics",{"id":149,"data":151,"body":156,"filePath":157,"digest":158,"rendered":159},{"title":152,"description":153,"pubDate":154,"heroImage":155},"【入門】データベースとは？SQLの基本を理解しよう","データベースの基本概念とSQLの基礎を、初心者にもわかりやすく解説します。実践的な例を交えながら、データベース操作の基本を学びましょう。",["Date","2025-03-15T15:00:00.000Z"],"/tech-blog/blog-placeholder-3.jpg","# 【入門】データベースとは？SQLの基本を理解しよう\n\nデータベースは現代のアプリケーション開発において欠かせない存在です。この記事では、データベースの基本概念とSQLの基礎について、初心者にもわかりやすく解説します。\n\n## データベースとは？\n\nデータベースとは、データを効率的に保存、管理、検索するためのシステムです。以下のような特徴があります：\n\n1. **データの永続化**\n   - データをファイルとして保存\n   - アプリケーション終了後もデータを維持\n\n2. **データの一貫性**\n   - データの整合性を保証\n   - 矛盾のない状態を維持\n\n3. **同時アクセス制御**\n   - 複数のユーザーが同時にアクセス可能\n   - データの競合を防止\n\n4. **セキュリティ管理**\n   - アクセス権限の制御\n   - データの保護\n\n## リレーショナルデータベース\n\n最も一般的なデータベースの形式は「リレーショナルデータベース」です。\n\n### 特徴\n\n1. **テーブル形式**\n   - データを行と列で表現\n   - 各列は特定の型を持つ\n\n2. **関係性の定義**\n   - テーブル間の関連付け\n   - 外部キーによる参照\n\n3. **正規化**\n   - データの重複を削減\n   - 一貫性を維持\n\n### 主要な用語\n\n- **テーブル**: データを格納する表\n- **レコード**: テーブルの1行のデータ\n- **カラム**: テーブルの列（項目）\n- **主キー**: レコードを一意に識別する値\n- **外部キー**: 他のテーブルを参照するためのキー\n\n## SQLの基本\n\nSQLは「Structured Query Language」の略で、データベースを操作するための言語です。\n\n### 1. データの取得（SELECT）\n\n```sql\n-- 基本的なSELECT文\nSELECT * FROM users;\n\n-- 特定のカラムを選択\nSELECT name, email FROM users;\n\n-- 条件付きの取得\nSELECT * FROM users WHERE age >= 20;\n\n-- 並び替え\nSELECT * FROM users ORDER BY name ASC;\n\n-- 件数制限\nSELECT * FROM users LIMIT 10;\n```\n\n### 2. データの挿入（INSERT）\n\n```sql\n-- 1件のデータを挿入\nINSERT INTO users (name, email, age)\nVALUES ('山田太郎', 'yamada@example.com', 25);\n\n-- 複数件のデータを一度に挿入\nINSERT INTO users (name, email, age) VALUES\n  ('佐藤花子', 'sato@example.com', 30),\n  ('鈴木一郎', 'suzuki@example.com', 28);\n```\n\n### 3. データの更新（UPDATE）\n\n```sql\n-- 条件に合致するレコードを更新\nUPDATE users\nSET age = 26\nWHERE name = '山田太郎';\n\n-- 複数のカラムを同時に更新\nUPDATE users\nSET \n  email = 'new.yamada@example.com',\n  updated_at = CURRENT_TIMESTAMP\nWHERE id = 1;\n```\n\n### 4. データの削除（DELETE）\n\n```sql\n-- 条件に合致するレコードを削除\nDELETE FROM users\nWHERE age \u003C 20;\n\n-- テーブルの全レコードを削除\nDELETE FROM users;\n```\n\n### 5. テーブルの作成（CREATE TABLE）\n\n```sql\nCREATE TABLE users (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  name VARCHAR(100) NOT NULL,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  age INTEGER,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n## 実践的なSQL例\n\n### 1. ユーザーと注文の関連付け\n\n```sql\n-- テーブルの作成\nCREATE TABLE users (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  name VARCHAR(100) NOT NULL,\n  email VARCHAR(255) UNIQUE NOT NULL\n);\n\nCREATE TABLE orders (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  user_id INTEGER NOT NULL,\n  product_name VARCHAR(100) NOT NULL,\n  price INTEGER NOT NULL,\n  ordered_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id)\n);\n\n-- データの挿入\nINSERT INTO users (name, email) VALUES\n  ('山田太郎', 'yamada@example.com'),\n  ('佐藤花子', 'sato@example.com');\n\nINSERT INTO orders (user_id, product_name, price) VALUES\n  (1, 'ノートPC', 80000),\n  (1, 'マウス', 5000),\n  (2, 'キーボード', 15000);\n\n-- ユーザーごとの注文一覧を取得\nSELECT \n  users.name,\n  orders.product_name,\n  orders.price,\n  orders.ordered_at\nFROM users\nJOIN orders ON users.id = orders.user_id\nORDER BY users.name, orders.ordered_at;\n```\n\n### 2. 集計クエリ\n\n```sql\n-- ユーザーごとの注文合計金額\nSELECT \n  users.name,\n  COUNT(orders.id) as order_count,\n  SUM(orders.price) as total_amount\nFROM users\nLEFT JOIN orders ON users.id = orders.user_id\nGROUP BY users.id, users.name;\n\n-- 商品カテゴリごとの売上集計\nSELECT \n  category,\n  COUNT(*) as sale_count,\n  SUM(price) as total_sales,\n  AVG(price) as avg_price\nFROM products\nJOIN orders ON products.id = orders.product_id\nGROUP BY category\nHAVING total_sales >= 100000\nORDER BY total_sales DESC;\n```\n\n### 3. サブクエリの活用\n\n```sql\n-- 平均価格より高い商品を検索\nSELECT name, price\nFROM products\nWHERE price > (\n  SELECT AVG(price) FROM products\n);\n\n-- 最も注文の多いユーザーを検索\nSELECT \n  users.name,\n  order_count.count\nFROM users\nJOIN (\n  SELECT \n    user_id,\n    COUNT(*) as count\n  FROM orders\n  GROUP BY user_id\n) order_count ON users.id = order_count.user_id\nWHERE order_count.count = (\n  SELECT COUNT(*) as count\n  FROM orders\n  GROUP BY user_id\n  ORDER BY count DESC\n  LIMIT 1\n);\n```\n\n## データベース設計の基本\n\n### 1. 正規化\n\nデータベース設計で重要な「正規化」について説明します。\n\n#### 第1正規形（1NF）\n- 各列が原子値（これ以上分割できない値）を持つ\n- 同じような項目を複数持たない\n\n```sql\n-- 悪い例\nCREATE TABLE contacts (\n  id INTEGER PRIMARY KEY,\n  name VARCHAR(100),\n  phone1 VARCHAR(20),\n  phone2 VARCHAR(20),\n  phone3 VARCHAR(20)\n);\n\n-- 良い例\nCREATE TABLE contacts (\n  id INTEGER PRIMARY KEY,\n  name VARCHAR(100)\n);\n\nCREATE TABLE contact_phones (\n  id INTEGER PRIMARY KEY,\n  contact_id INTEGER,\n  phone_number VARCHAR(20),\n  FOREIGN KEY (contact_id) REFERENCES contacts(id)\n);\n```\n\n#### 第2正規形（2NF）\n- 第1正規形を満たす\n- 部分関数従属を持たない\n\n#### 第3正規形（3NF）\n- 第2正規形を満たす\n- 推移関数従属を持たない\n\n### 2. インデックス\n\n検索性能を向上させるためのインデックスについて説明します。\n\n```sql\n-- 単一カラムのインデックス\nCREATE INDEX idx_users_email ON users(email);\n\n-- 複合インデックス\nCREATE INDEX idx_orders_user_date ON orders(user_id, ordered_at);\n\n-- ユニークインデックス\nCREATE UNIQUE INDEX idx_users_email_unique ON users(email);\n```\n\n### 3. トランザクション\n\nデータの一貫性を保つためのトランザクション処理について説明します。\n\n```sql\n-- トランザクションの基本\nBEGIN TRANSACTION;\n\nINSERT INTO orders (user_id, product_id, quantity)\nVALUES (1, 100, 2);\n\nUPDATE products\nSET stock = stock - 2\nWHERE id = 100;\n\nCOMMIT;\n\n-- エラー時のロールバック\nBEGIN TRANSACTION;\n\nINSERT INTO orders (user_id, product_id, quantity)\nVALUES (1, 100, 2);\n\nUPDATE products\nSET stock = stock - 2\nWHERE id = 100;\n\n-- 在庫が足りない場合はロールバック\nIF (SELECT stock FROM products WHERE id = 100) \u003C 0 THEN\n  ROLLBACK;\nELSE\n  COMMIT;\nEND IF;\n```\n\n## セキュリティの基本\n\n### 1. SQLインジェクション対策\n\n```sql\n-- 悪い例（SQLインジェクションの危険あり）\nconst query = `SELECT * FROM users WHERE name = '${userName}'`;\n\n-- 良い例（プリペアドステートメントを使用）\nconst query = 'SELECT * FROM users WHERE name = ?';\ndb.query(query, [userName]);\n```\n\n### 2. アクセス権限の設定\n\n```sql\n-- ユーザーの作成\nCREATE USER 'app_user'@'localhost' IDENTIFIED BY 'password';\n\n-- 権限の付与\nGRANT SELECT, INSERT ON database_name.* TO 'app_user'@'localhost';\n\n-- 権限の確認\nSHOW GRANTS FOR 'app_user'@'localhost';\n```\n\n## まとめ\n\nこの記事では、データベースとSQLの基本について解説しました：\n\n1. **データベースの基本概念**\n   - データの永続化\n   - 一貫性の保持\n   - 同時アクセス制御\n\n2. **SQLの基本操作**\n   - SELECT（データの取得）\n   - INSERT（データの挿入）\n   - UPDATE（データの更新）\n   - DELETE（データの削除）\n\n3. **データベース設計の基本**\n   - 正規化\n   - インデックス\n   - トランザクション\n\n4. **セキュリティ対策**\n   - SQLインジェクション対策\n   - アクセス権限の管理\n\nデータベースは現代のアプリケーション開発において非常に重要な要素です。基本をしっかり理解し、適切に活用することで、より堅牢なアプリケーションを開発することができます。\n\n## 次のステップ\n\nデータベースの基本を理解したら、以下の記事も参考にしてください：\n\n- [【図解】リスト（配列）と辞書（オブジェクト）の違いを解説](/blog/list-and-dictionary-explained/)\n- [プログラミング初心者が最初に学ぶべき5つの概念](/blog/programming-concepts-for-beginners/)\n- [【初心者向け】プログラミングのエラーの種類と対処法](/blog/programming-error-handling-guide/)","src/content/blog/database-sql-basics.md","9b1d5bcab8e3f78e",{"html":160,"metadata":161},"\u003Ch1 id=\"入門データベースとはsqlの基本を理解しよう\">【入門】データベースとは？SQLの基本を理解しよう\u003C/h1>\n\u003Cp>データベースは現代のアプリケーション開発において欠かせない存在です。この記事では、データベースの基本概念とSQLの基礎について、初心者にもわかりやすく解説します。\u003C/p>\n\u003Ch2 id=\"データベースとは\">データベースとは？\u003C/h2>\n\u003Cp>データベースとは、データを効率的に保存、管理、検索するためのシステムです。以下のような特徴があります：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>データの永続化\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>データをファイルとして保存\u003C/li>\n\u003Cli>アプリケーション終了後もデータを維持\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>データの一貫性\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>データの整合性を保証\u003C/li>\n\u003Cli>矛盾のない状態を維持\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>同時アクセス制御\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>複数のユーザーが同時にアクセス可能\u003C/li>\n\u003Cli>データの競合を防止\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>セキュリティ管理\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>アクセス権限の制御\u003C/li>\n\u003Cli>データの保護\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"リレーショナルデータベース\">リレーショナルデータベース\u003C/h2>\n\u003Cp>最も一般的なデータベースの形式は「リレーショナルデータベース」です。\u003C/p>\n\u003Ch3 id=\"特徴\">特徴\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>テーブル形式\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>データを行と列で表現\u003C/li>\n\u003Cli>各列は特定の型を持つ\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>関係性の定義\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>テーブル間の関連付け\u003C/li>\n\u003Cli>外部キーによる参照\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>正規化\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>データの重複を削減\u003C/li>\n\u003Cli>一貫性を維持\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"主要な用語\">主要な用語\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>テーブル\u003C/strong>: データを格納する表\u003C/li>\n\u003Cli>\u003Cstrong>レコード\u003C/strong>: テーブルの1行のデータ\u003C/li>\n\u003Cli>\u003Cstrong>カラム\u003C/strong>: テーブルの列（項目）\u003C/li>\n\u003Cli>\u003Cstrong>主キー\u003C/strong>: レコードを一意に識別する値\u003C/li>\n\u003Cli>\u003Cstrong>外部キー\u003C/strong>: 他のテーブルを参照するためのキー\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"sqlの基本\">SQLの基本\u003C/h2>\n\u003Cp>SQLは「Structured Query Language」の略で、データベースを操作するための言語です。\u003C/p>\n\u003Ch3 id=\"1-データの取得select\">1. データの取得（SELECT）\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 基本的なSELECT文\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SELECT\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#FF79C6\"> FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 特定のカラムを選択\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SELECT\u003C/span>\u003Cspan style=\"color:#FF79C6\"> name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, email \u003C/span>\u003Cspan style=\"color:#FF79C6\">FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 条件付きの取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SELECT\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#FF79C6\"> FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users \u003C/span>\u003Cspan style=\"color:#FF79C6\">WHERE\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 並び替え\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SELECT\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#FF79C6\"> FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users \u003C/span>\u003Cspan style=\"color:#FF79C6\">ORDER BY\u003C/span>\u003Cspan style=\"color:#FF79C6\"> name\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ASC\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 件数制限\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SELECT\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#FF79C6\"> FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users \u003C/span>\u003Cspan style=\"color:#FF79C6\">LIMIT\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-データの挿入insert\">2. データの挿入（INSERT）\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 1件のデータを挿入\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">INSERT INTO\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users (\u003C/span>\u003Cspan style=\"color:#FF79C6\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, email, age)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">VALUES\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">yamada@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 複数件のデータを一度に挿入\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">INSERT INTO\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users (\u003C/span>\u003Cspan style=\"color:#FF79C6\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, email, age) \u003C/span>\u003Cspan style=\"color:#FF79C6\">VALUES\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  (\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">佐藤花子\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">sato@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">30\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  (\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木一郎\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">suzuki@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">28\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-データの更新update\">3. データの更新（UPDATE）\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 条件に合致するレコードを更新\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">UPDATE\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SET\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 26\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">WHERE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> name\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 複数のカラムを同時に更新\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">UPDATE\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SET\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  email \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">new.yamada@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  updated_at \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> CURRENT_TIMESTAMP\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">WHERE\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> id \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"4-データの削除delete\">4. データの削除（DELETE）\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 条件に合致するレコードを削除\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">DELETE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">WHERE\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- テーブルの全レコードを削除\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">DELETE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"5-テーブルの作成create-table\">5. テーブルの作成（CREATE TABLE）\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">CREATE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> TABLE\u003C/span>\u003Cspan style=\"color:#50FA7B\"> users\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  id \u003C/span>\u003Cspan style=\"color:#FF79C6\">INTEGER\u003C/span>\u003Cspan style=\"color:#FF79C6\"> PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> AUTOINCREMENT,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\"> VARCHAR\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">NOT NULL\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  email \u003C/span>\u003Cspan style=\"color:#FF79C6\">VARCHAR\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">255\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">UNIQUE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  age \u003C/span>\u003Cspan style=\"color:#FF79C6\">INTEGER\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  created_at \u003C/span>\u003Cspan style=\"color:#FF79C6\">TIMESTAMP\u003C/span>\u003Cspan style=\"color:#FF79C6\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> CURRENT_TIMESTAMP\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"実践的なsql例\">実践的なSQL例\u003C/h2>\n\u003Ch3 id=\"1-ユーザーと注文の関連付け\">1. ユーザーと注文の関連付け\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- テーブルの作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">CREATE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> TABLE\u003C/span>\u003Cspan style=\"color:#50FA7B\"> users\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  id \u003C/span>\u003Cspan style=\"color:#FF79C6\">INTEGER\u003C/span>\u003Cspan style=\"color:#FF79C6\"> PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> AUTOINCREMENT,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\"> VARCHAR\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">NOT NULL\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  email \u003C/span>\u003Cspan style=\"color:#FF79C6\">VARCHAR\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">255\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">UNIQUE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> NOT NULL\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">CREATE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> TABLE\u003C/span>\u003Cspan style=\"color:#50FA7B\"> orders\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  id \u003C/span>\u003Cspan style=\"color:#FF79C6\">INTEGER\u003C/span>\u003Cspan style=\"color:#FF79C6\"> PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> AUTOINCREMENT,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  user_id \u003C/span>\u003Cspan style=\"color:#FF79C6\">INTEGER\u003C/span>\u003Cspan style=\"color:#FF79C6\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  product_name \u003C/span>\u003Cspan style=\"color:#FF79C6\">VARCHAR\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">NOT NULL\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  price \u003C/span>\u003Cspan style=\"color:#FF79C6\">INTEGER\u003C/span>\u003Cspan style=\"color:#FF79C6\"> NOT NULL\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  ordered_at \u003C/span>\u003Cspan style=\"color:#FF79C6\">TIMESTAMP\u003C/span>\u003Cspan style=\"color:#FF79C6\"> DEFAULT\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> CURRENT_TIMESTAMP,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  FOREIGN KEY\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (user_id) \u003C/span>\u003Cspan style=\"color:#FF79C6\">REFERENCES\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users(id)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- データの挿入\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">INSERT INTO\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users (\u003C/span>\u003Cspan style=\"color:#FF79C6\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, email) \u003C/span>\u003Cspan style=\"color:#FF79C6\">VALUES\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  (\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">yamada@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  (\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">佐藤花子\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">sato@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">INSERT INTO\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> orders (user_id, product_name, price) \u003C/span>\u003Cspan style=\"color:#FF79C6\">VALUES\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  (\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ノートPC\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">80000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  (\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">マウス\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">5000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  (\u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">キーボード\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">15000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- ユーザーごとの注文一覧を取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SELECT\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">  users\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">  orders\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">product_name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">  orders\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">price\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">  orders\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">ordered_at\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">JOIN\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> orders \u003C/span>\u003Cspan style=\"color:#FF79C6\">ON\u003C/span>\u003Cspan style=\"color:#BD93F9\"> users\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">id\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#BD93F9\"> orders\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">user_id\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">ORDER BY\u003C/span>\u003Cspan style=\"color:#BD93F9\"> users\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">orders\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">ordered_at\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-集計クエリ\">2. 集計クエリ\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- ユーザーごとの注文合計金額\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SELECT\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">  users\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">  COUNT\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">orders\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">id\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">as\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> order_count,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">  SUM\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">orders\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">price\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">as\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total_amount\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">LEFT JOIN\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> orders \u003C/span>\u003Cspan style=\"color:#FF79C6\">ON\u003C/span>\u003Cspan style=\"color:#BD93F9\"> users\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">id\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#BD93F9\"> orders\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">user_id\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">GROUP BY\u003C/span>\u003Cspan style=\"color:#BD93F9\"> users\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">id\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">users\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 商品カテゴリごとの売上集計\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SELECT\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  category,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">  COUNT\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">as\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sale_count,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">  SUM\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(price) \u003C/span>\u003Cspan style=\"color:#FF79C6\">as\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total_sales,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">  AVG\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(price) \u003C/span>\u003Cspan style=\"color:#FF79C6\">as\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> avg_price\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">JOIN\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> orders \u003C/span>\u003Cspan style=\"color:#FF79C6\">ON\u003C/span>\u003Cspan style=\"color:#BD93F9\"> products\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">id\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#BD93F9\"> orders\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">product_id\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">GROUP BY\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> category\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">HAVING\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total_sales \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100000\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">ORDER BY\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total_sales \u003C/span>\u003Cspan style=\"color:#FF79C6\">DESC\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-サブクエリの活用\">3. サブクエリの活用\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 平均価格より高い商品を検索\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SELECT\u003C/span>\u003Cspan style=\"color:#FF79C6\"> name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">WHERE\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> price \u003C/span>\u003Cspan style=\"color:#FF79C6\">>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  SELECT\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> AVG\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(price) \u003C/span>\u003Cspan style=\"color:#FF79C6\">FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 最も注文の多いユーザーを検索\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SELECT\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">  users\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">  order_count\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">count\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">JOIN\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  SELECT\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    user_id,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    COUNT\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">as\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> count\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> orders\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  GROUP BY\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user_id\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">) order_count \u003C/span>\u003Cspan style=\"color:#FF79C6\">ON\u003C/span>\u003Cspan style=\"color:#BD93F9\"> users\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">id\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#BD93F9\"> order_count\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">user_id\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">WHERE\u003C/span>\u003Cspan style=\"color:#BD93F9\"> order_count\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">count\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  SELECT\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> COUNT\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">as\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> count\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> orders\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  GROUP BY\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user_id\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  ORDER BY\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> count \u003C/span>\u003Cspan style=\"color:#FF79C6\">DESC\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  LIMIT\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"データベース設計の基本\">データベース設計の基本\u003C/h2>\n\u003Ch3 id=\"1-正規化\">1. 正規化\u003C/h3>\n\u003Cp>データベース設計で重要な「正規化」について説明します。\u003C/p>\n\u003Ch4 id=\"第1正規形1nf\">第1正規形（1NF）\u003C/h4>\n\u003Cul>\n\u003Cli>各列が原子値（これ以上分割できない値）を持つ\u003C/li>\n\u003Cli>同じような項目を複数持たない\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 悪い例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">CREATE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> TABLE\u003C/span>\u003Cspan style=\"color:#50FA7B\"> contacts\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  id \u003C/span>\u003Cspan style=\"color:#FF79C6\">INTEGER\u003C/span>\u003Cspan style=\"color:#FF79C6\"> PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\"> VARCHAR\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  phone1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">VARCHAR\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  phone2 \u003C/span>\u003Cspan style=\"color:#FF79C6\">VARCHAR\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  phone3 \u003C/span>\u003Cspan style=\"color:#FF79C6\">VARCHAR\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 良い例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">CREATE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> TABLE\u003C/span>\u003Cspan style=\"color:#50FA7B\"> contacts\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  id \u003C/span>\u003Cspan style=\"color:#FF79C6\">INTEGER\u003C/span>\u003Cspan style=\"color:#FF79C6\"> PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\"> VARCHAR\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">CREATE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> TABLE\u003C/span>\u003Cspan style=\"color:#50FA7B\"> contact_phones\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  id \u003C/span>\u003Cspan style=\"color:#FF79C6\">INTEGER\u003C/span>\u003Cspan style=\"color:#FF79C6\"> PRIMARY KEY\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  contact_id \u003C/span>\u003Cspan style=\"color:#FF79C6\">INTEGER\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  phone_number \u003C/span>\u003Cspan style=\"color:#FF79C6\">VARCHAR\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  FOREIGN KEY\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (contact_id) \u003C/span>\u003Cspan style=\"color:#FF79C6\">REFERENCES\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> contacts(id)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"第2正規形2nf\">第2正規形（2NF）\u003C/h4>\n\u003Cul>\n\u003Cli>第1正規形を満たす\u003C/li>\n\u003Cli>部分関数従属を持たない\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"第3正規形3nf\">第3正規形（3NF）\u003C/h4>\n\u003Cul>\n\u003Cli>第2正規形を満たす\u003C/li>\n\u003Cli>推移関数従属を持たない\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-インデックス\">2. インデックス\u003C/h3>\n\u003Cp>検索性能を向上させるためのインデックスについて説明します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 単一カラムのインデックス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">CREATE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> INDEX\u003C/span>\u003Cspan style=\"color:#50FA7B\"> idx_users_email\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ON\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users(email);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 複合インデックス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">CREATE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> INDEX\u003C/span>\u003Cspan style=\"color:#50FA7B\"> idx_orders_user_date\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ON\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> orders(user_id, ordered_at);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- ユニークインデックス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">CREATE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> UNIQUE INDEX\u003C/span>\u003Cspan style=\"color:#50FA7B\"> idx_users_email_unique\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ON\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users(email);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-トランザクション\">3. トランザクション\u003C/h3>\n\u003Cp>データの一貫性を保つためのトランザクション処理について説明します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- トランザクションの基本\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">BEGIN\u003C/span>\u003Cspan style=\"color:#FF79C6\"> TRANSACTION\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">INSERT INTO\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> orders (user_id, product_id, quantity)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">VALUES\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">UPDATE\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SET\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> stock \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> stock \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">WHERE\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> id \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">COMMIT\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- エラー時のロールバック\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">BEGIN\u003C/span>\u003Cspan style=\"color:#FF79C6\"> TRANSACTION\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">INSERT INTO\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> orders (user_id, product_id, quantity)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">VALUES\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">UPDATE\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">SET\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> stock \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> stock \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">WHERE\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> id \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 在庫が足りない場合はロールバック\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">IF\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">SELECT\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> stock \u003C/span>\u003Cspan style=\"color:#FF79C6\">FROM\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products \u003C/span>\u003Cspan style=\"color:#FF79C6\">WHERE\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> id \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#FF79C6\"> THEN\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  ROLLBACK\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">ELSE\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  COMMIT\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">END\u003C/span>\u003Cspan style=\"color:#FF79C6\"> IF\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"セキュリティの基本\">セキュリティの基本\u003C/h2>\n\u003Ch3 id=\"1-sqlインジェクション対策\">1. SQLインジェクション対策\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 悪い例（SQLインジェクションの危険あり）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">const query \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> `\u003C/span>\u003Cspan style=\"color:#F1FA8C\">SELECT * FROM users WHERE name = '${userName}'\u003C/span>\u003Cspan style=\"color:#E9F284\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 良い例（プリペアドステートメントを使用）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">const query \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">SELECT * FROM users WHERE name = ?\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">db\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#BD93F9\">query\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(query, [userName]);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-アクセス権限の設定\">2. アクセス権限の設定\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- ユーザーの作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">CREATE\u003C/span>\u003Cspan style=\"color:#FF79C6\"> USER\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> '\u003C/span>\u003Cspan style=\"color:#50FA7B\">app_user\u003C/span>\u003Cspan style=\"color:#F8F8F2\">'@\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">localhost\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> IDENTIFIED \u003C/span>\u003Cspan style=\"color:#FF79C6\">BY\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">password\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 権限の付与\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">GRANT\u003C/span>\u003Cspan style=\"color:#FF79C6\"> SELECT\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FF79C6\">INSERT\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ON\u003C/span>\u003Cspan style=\"color:#FF79C6\"> database_name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#FF79C6\"> TO\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">app_user\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">@\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">localhost\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">-- 権限の確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">SHOW GRANTS \u003C/span>\u003Cspan style=\"color:#FF79C6\">FOR\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">app_user\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">@\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">localhost\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>この記事では、データベースとSQLの基本について解説しました：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>データベースの基本概念\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>データの永続化\u003C/li>\n\u003Cli>一貫性の保持\u003C/li>\n\u003Cli>同時アクセス制御\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>SQLの基本操作\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>SELECT（データの取得）\u003C/li>\n\u003Cli>INSERT（データの挿入）\u003C/li>\n\u003Cli>UPDATE（データの更新）\u003C/li>\n\u003Cli>DELETE（データの削除）\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>データベース設計の基本\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>正規化\u003C/li>\n\u003Cli>インデックス\u003C/li>\n\u003Cli>トランザクション\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>セキュリティ対策\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>SQLインジェクション対策\u003C/li>\n\u003Cli>アクセス権限の管理\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>データベースは現代のアプリケーション開発において非常に重要な要素です。基本をしっかり理解し、適切に活用することで、より堅牢なアプリケーションを開発することができます。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>データベースの基本を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/list-and-dictionary-explained/\">【図解】リスト（配列）と辞書（オブジェクト）の違いを解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-error-handling-guide/\">【初心者向け】プログラミングのエラーの種類と対処法\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":162,"imagePaths":234,"frontmatter":235},[163,165,168,170,171,173,176,179,182,185,188,191,194,197,200,203,205,208,211,214,217,220,223,225,228,231,232],{"depth":26,"slug":164,"text":152},"入門データベースとはsqlの基本を理解しよう",{"depth":29,"slug":166,"text":167},"データベースとは","データベースとは？",{"depth":29,"slug":169,"text":169},"リレーショナルデータベース",{"depth":33,"slug":72,"text":72},{"depth":33,"slug":172,"text":172},"主要な用語",{"depth":29,"slug":174,"text":175},"sqlの基本","SQLの基本",{"depth":33,"slug":177,"text":178},"1-データの取得select","1. データの取得（SELECT）",{"depth":33,"slug":180,"text":181},"2-データの挿入insert","2. データの挿入（INSERT）",{"depth":33,"slug":183,"text":184},"3-データの更新update","3. データの更新（UPDATE）",{"depth":33,"slug":186,"text":187},"4-データの削除delete","4. データの削除（DELETE）",{"depth":33,"slug":189,"text":190},"5-テーブルの作成create-table","5. テーブルの作成（CREATE TABLE）",{"depth":29,"slug":192,"text":193},"実践的なsql例","実践的なSQL例",{"depth":33,"slug":195,"text":196},"1-ユーザーと注文の関連付け","1. ユーザーと注文の関連付け",{"depth":33,"slug":198,"text":199},"2-集計クエリ","2. 集計クエリ",{"depth":33,"slug":201,"text":202},"3-サブクエリの活用","3. サブクエリの活用",{"depth":29,"slug":204,"text":204},"データベース設計の基本",{"depth":33,"slug":206,"text":207},"1-正規化","1. 正規化",{"depth":67,"slug":209,"text":210},"第1正規形1nf","第1正規形（1NF）",{"depth":67,"slug":212,"text":213},"第2正規形2nf","第2正規形（2NF）",{"depth":67,"slug":215,"text":216},"第3正規形3nf","第3正規形（3NF）",{"depth":33,"slug":218,"text":219},"2-インデックス","2. インデックス",{"depth":33,"slug":221,"text":222},"3-トランザクション","3. トランザクション",{"depth":29,"slug":224,"text":224},"セキュリティの基本",{"depth":33,"slug":226,"text":227},"1-sqlインジェクション対策","1. SQLインジェクション対策",{"depth":33,"slug":229,"text":230},"2-アクセス権限の設定","2. アクセス権限の設定",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},"次のステップ",[],{"title":152,"description":153,"pubDate":236,"heroImage":155},"Mar 16 2025","how-to-write-better-comments",{"id":237,"data":239,"body":243,"filePath":244,"digest":245,"rendered":246},{"title":240,"description":241,"pubDate":242,"heroImage":155},"【コメントの書き方でコードが劇的にわかりやすくなる！】","プログラミングにおける効果的なコメントの書き方と、コードの可読性を向上させるベストプラクティスを解説します。",["Date","2025-03-17T15:00:00.000Z"],"# コメントの書き方でコードが劇的にわかりやすくなる！\n\nプログラミングにおいて、コメントは非常に重要な役割を果たします。適切なコメントは、コードの理解を助け、メンテナンス性を向上させ、チーム開発を円滑にします。この記事では、効果的なコメントの書き方と、実践的なテクニックについて解説します。\n\n## なぜコメントが重要なのか？\n\nコメントには以下のような重要な役割があります：\n\n1. **コードの意図を説明する**\n   - なぜその実装を選んだのか\n   - どのような問題を解決しているのか\n   - 将来の注意点は何か\n\n2. **複雑なロジックを理解しやすくする**\n   - アルゴリズムの説明\n   - ビジネスロジックの背景\n   - 計算式の意味\n\n3. **他の開発者とのコミュニケーションを助ける**\n   - コードレビューの効率化\n   - チーム内での知識共有\n   - 将来の保守作業の効率化\n\n## 良いコメントの特徴\n\n### 1. 簡潔で明確\n\n```javascript\n// 悪い例：とても長くて冗長なコメント\n// このメソッドは、ユーザーが入力したデータを受け取って、\n// そのデータをバリデーションして、問題がなければデータベースに\n// 保存するためのメソッドです。エラーがあれば例外を投げます。\n\n// 良い例：簡潔で要点を押さえたコメント\n// ユーザー入力を検証し、DBに保存。無効な入力は例外をスロー\nfunction saveUserData(userData) {\n  // ...\n}\n```\n\n### 2. コードの「なぜ」を説明する\n\n```javascript\n// 悪い例：コードの内容をそのまま説明\n// iを1増やす\ni++;\n\n// 良い例：なぜその処理が必要なのかを説明\n// 配列の次の要素に移動するためにインデックスをインクリメント\ni++;\n```\n\n### 3. 適切な粒度\n\n```javascript\n// 悪い例：細かすぎるコメント\nfunction calculateTotal(items) {\n  // 合計を0で初期化\n  let total = 0;\n  \n  // 配列をループ\n  for (let i = 0; i \u003C items.length; i++) {\n    // 現在の項目の価格を取得\n    const price = items[i].price;\n    // 合計に価格を加算\n    total += price;\n  }\n  \n  // 合計を返す\n  return total;\n}\n\n// 良い例：適切な粒度のコメント\nfunction calculateTotal(items) {\n  // 全商品の価格を合計\n  let total = 0;\n  for (let i = 0; i \u003C items.length; i++) {\n    total += items[i].price;\n  }\n  return total;\n}\n```\n\n## 効果的なコメントの種類\n\n### 1. ファイルヘッダーコメント\n\n```javascript\n/**\n * ユーザー認証モジュール\n * \n * ログイン、ログアウト、セッション管理などの\n * ユーザー認証に関する機能を提供します。\n * \n * @author 山田太郎\n * @version 1.0.0\n * @since 2024-07-10\n */\n\nclass AuthManager {\n  // ...\n}\n```\n\n### 2. 関数/メソッドのドキュメント\n\n```javascript\n/**\n * 指定された範囲内のランダムな整数を生成します。\n * \n * @param {number} min - 生成する整数の最小値（含む）\n * @param {number} max - 生成する整数の最大値（含む）\n * @returns {number} min以上max以下のランダムな整数\n * @throws {Error} minがmaxより大きい場合\n * \n * @example\n * const random = getRandomInt(1, 10);\n * console.log(random); // 1から10のランダムな整数\n */\nfunction getRandomInt(min, max) {\n  if (min > max) {\n    throw new Error('最小値は最大値以下である必要があります');\n  }\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n```\n\n### 3. 実装の注意点や警告\n\n```javascript\n// FIXME: IE11では動作しない可能性あり\n// TODO: パフォーマンス改善が必要\n// WARNING: この関数は非推奨。代わりにnewMethodを使用してください\n// HACK: 一時的な回避策。次回のリリースで修正予定\nfunction legacyMethod() {\n  // ...\n}\n```\n\n### 4. 複雑なロジックの説明\n\n```javascript\nfunction calculateShippingCost(weight, distance, isExpress) {\n  // 配送料金の計算式：\n  // 基本料金 = 重量(kg) × 100円\n  // 距離加算 = 距離(km) × 10円\n  // 速達の場合は1.5倍\n  \n  const baseRate = weight * 100;\n  const distanceRate = distance * 10;\n  const totalRate = baseRate + distanceRate;\n  \n  return isExpress ? totalRate * 1.5 : totalRate;\n}\n```\n\n## コメントを書く際の注意点\n\n### 1. 避けるべきコメント\n\n```javascript\n// 悪い例：\n\n// マジックナンバー\nconst value = 86400;  // 1日の秒数\n\n// 良い例：\nconst SECONDS_PER_DAY = 86400;  // 定数として意味のある名前をつける\n\n// 悪い例：コードの削除をコメントアウトで残す\n// function oldMethod() {\n//   // 古い実装\n// }\n\n// 良い例：バージョン管理システムを使用して履歴を管理\n```\n\n### 2. 自己文書化コード\n\nコメントを書く前に、コード自体を分かりやすくすることを考えましょう。\n\n```javascript\n// 悪い例：コメントで説明が必要な変数名\nlet x = 0;  // ユーザーの年齢\n\n// 良い例：説明的な変数名\nlet userAge = 0;\n\n// 悪い例：複雑な条件式にコメントで説明を追加\n// ユーザーが管理者で、かつアクティブで、\n// 最終ログインから30日以内の場合\nif (u.type === 'admin' && u.active && \n    (Date.now() - u.lastLogin) \u003C 30 * 24 * 60 * 60 * 1000) {\n  // ...\n}\n\n// 良い例：条件を関数として抽出\nfunction isActiveAdmin(user) {\n  const THIRTY_DAYS_IN_MS = 30 * 24 * 60 * 60 * 1000;\n  return user.type === 'admin' && \n         user.active && \n         (Date.now() - user.lastLogin) \u003C THIRTY_DAYS_IN_MS;\n}\n\nif (isActiveAdmin(user)) {\n  // ...\n}\n```\n\n### 3. コメントのメンテナンス\n\nコメントは「生きたドキュメント」として扱い、コードの変更に合わせて更新する必要があります。\n\n```javascript\n// 悪い例：古いコメントが残っている\n// ユーザーIDを検証\nfunction validateEmail(email) {  // 関数名が変更されているのにコメントが更新されていない\n  // ...\n}\n\n// 良い例：コメントとコードが一致している\n// メールアドレスの形式を検証\nfunction validateEmail(email) {\n  // ...\n}\n```\n\n## 実践的なコメントの例\n\n### 1. 設定ファイル\n\n```javascript\n// config.js\n\n/**\n * アプリケーション設定\n * \n * 環境変数から設定を読み込み、デフォルト値とマージします。\n * 本番環境では必ずすべての値を環境変数で指定してください。\n */\nconst config = {\n  // データベース設定\n  database: {\n    host: process.env.DB_HOST || 'localhost',\n    port: parseInt(process.env.DB_PORT || '5432', 10),\n    name: process.env.DB_NAME || 'myapp_dev',\n    // 本番環境ではパスワードを必ず指定\n    password: process.env.DB_PASSWORD\n  },\n  \n  // APIレート制限（リクエスト/分）\n  rateLimit: {\n    window: 60 * 1000,  // 1分間\n    max: 100           // 最大リクエスト数\n  }\n};\n```\n\n### 2. 複雑なアルゴリズム\n\n```javascript\n/**\n * クイックソートアルゴリズムの実装\n * \n * 配列を以下のステップで整列します：\n * 1. ピボット（基準値）を選択\n * 2. ピボットより小さい要素を左側に、大きい要素を右側に分割\n * 3. 左右の部分配列に対して再帰的に同じ処理を実行\n * \n * 平均計算量: O(n log n)\n * 最悪計算量: O(n²)\n */\nfunction quickSort(arr, left = 0, right = arr.length - 1) {\n  if (left \u003C right) {\n    // ピボットを配列の最後の要素として選択\n    const pivotIndex = partition(arr, left, right);\n    \n    // 左側の部分配列をソート\n    quickSort(arr, left, pivotIndex - 1);\n    \n    // 右側の部分配列をソート\n    quickSort(arr, pivotIndex + 1, right);\n  }\n  \n  return arr;\n}\n\n/**\n * 配列をピボットを基準に分割\n * \n * @param {Array} arr - 分割する配列\n * @param {number} left - 左端のインデックス\n * @param {number} right - 右端のインデックス\n * @returns {number} ピボットの最終位置\n */\nfunction partition(arr, left, right) {\n  const pivot = arr[right];\n  let i = left - 1;\n  \n  // ピボットより小さい要素を左側に移動\n  for (let j = left; j \u003C right; j++) {\n    if (arr[j] \u003C= pivot) {\n      i++;\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n  }\n  \n  // ピボットを適切な位置に配置\n  [arr[i + 1], arr[right]] = [arr[right], arr[i + 1]];\n  return i + 1;\n}\n```\n\n### 3. ビジネスロジック\n\n```javascript\n/**\n * 商品の割引価格を計算\n * \n * 割引ルール：\n * - 通常会員: 5%割引\n * - プレミアム会員: 10%割引\n * - 3000円以上の購入: さらに5%割引\n * - セール期間中: さらに10%割引\n * \n * 注意: 割引は最大で30%まで\n */\nfunction calculateDiscountedPrice(price, userType, isSalePeriod) {\n  // 会員タイプによる基本割引率\n  let discount = userType === 'premium' ? 0.10 : 0.05;\n  \n  // 購入金額による追加割引\n  if (price >= 3000) {\n    discount += 0.05;\n  }\n  \n  // セール期間中の追加割引\n  if (isSalePeriod) {\n    discount += 0.10;\n  }\n  \n  // 最大割引率の制限\n  discount = Math.min(discount, 0.30);\n  \n  // 割引価格の計算（小数点以下切り捨て）\n  return Math.floor(price * (1 - discount));\n}\n```\n\n## まとめ\n\n効果的なコメントを書くためのポイントをまとめると：\n\n1. **目的を明確に**\n   - コードの「なぜ」を説明する\n   - 複雑なロジックの背景を説明する\n   - 注意点や制約を明記する\n\n2. **適切な粒度で**\n   - 必要以上に細かくしない\n   - 重要な部分に焦点を当てる\n   - コード全体の構造を理解しやすくする\n\n3. **メンテナンス性を考慮**\n   - コードの変更に合わせて更新する\n   - 古いコメントは削除する\n   - バージョン管理システムを活用する\n\n4. **自己文書化コードを目指す**\n   - 説明的な名前を使用する\n   - 複雑な処理は関数に分割する\n   - コメントが必要ない程度にコードを明確にする\n\nコメントは、コードを理解しやすくするための重要なツールです。ただし、コメントに頼りすぎるのではなく、まずはコード自体を分かりやすくすることを心がけましょう。適切なコメントと読みやすいコードの組み合わせが、最高の可読性を生み出します。\n\n## 次のステップ\n\nコメントの書き方を理解したら、以下の記事も参考にしてください：\n\n- [プログラミング初心者が最初に学ぶべき5つの概念](/blog/programming-concepts-for-beginners/)\n- [【初心者向け】プログラミングのエラーの種類と対処法](/blog/programming-error-handling-guide/)\n- [【図解】アルゴリズムとは？初心者が知るべき基本概念](/blog/algorithm-basics-explained/)","src/content/blog/how-to-write-better-comments.md","439cdb1cde7e1f15",{"html":247,"metadata":248},"\u003Ch1 id=\"コメントの書き方でコードが劇的にわかりやすくなる\">コメントの書き方でコードが劇的にわかりやすくなる！\u003C/h1>\n\u003Cp>プログラミングにおいて、コメントは非常に重要な役割を果たします。適切なコメントは、コードの理解を助け、メンテナンス性を向上させ、チーム開発を円滑にします。この記事では、効果的なコメントの書き方と、実践的なテクニックについて解説します。\u003C/p>\n\u003Ch2 id=\"なぜコメントが重要なのか\">なぜコメントが重要なのか？\u003C/h2>\n\u003Cp>コメントには以下のような重要な役割があります：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>コードの意図を説明する\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>なぜその実装を選んだのか\u003C/li>\n\u003Cli>どのような問題を解決しているのか\u003C/li>\n\u003Cli>将来の注意点は何か\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>複雑なロジックを理解しやすくする\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>アルゴリズムの説明\u003C/li>\n\u003Cli>ビジネスロジックの背景\u003C/li>\n\u003Cli>計算式の意味\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>他の開発者とのコミュニケーションを助ける\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>コードレビューの効率化\u003C/li>\n\u003Cli>チーム内での知識共有\u003C/li>\n\u003Cli>将来の保守作業の効率化\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"良いコメントの特徴\">良いコメントの特徴\u003C/h2>\n\u003Ch3 id=\"1-簡潔で明確\">1. 簡潔で明確\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例：とても長くて冗長なコメント\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// このメソッドは、ユーザーが入力したデータを受け取って、\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// そのデータをバリデーションして、問題がなければデータベースに\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 保存するためのメソッドです。エラーがあれば例外を投げます。\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例：簡潔で要点を押さえたコメント\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ユーザー入力を検証し、DBに保存。無効な入力は例外をスロー\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> saveUserData\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">userData\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-コードのなぜを説明する\">2. コードの「なぜ」を説明する\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例：コードの内容をそのまま説明\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// iを1増やす\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例：なぜその処理が必要なのかを説明\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 配列の次の要素に移動するためにインデックスをインクリメント\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-適切な粒度\">3. 適切な粒度\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例：細かすぎるコメント\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">items\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 合計を0で初期化\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 配列をループ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> items.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 現在の項目の価格を取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> price \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> items[i].price;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 合計に価格を加算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    total \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> price;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 合計を返す\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例：適切な粒度のコメント\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">items\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 全商品の価格を合計\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> items.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    total \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> items[i].price;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"効果的なコメントの種類\">効果的なコメントの種類\u003C/h2>\n\u003Ch3 id=\"1-ファイルヘッダーコメント\">1. ファイルヘッダーコメント\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">/**\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * ユーザー認証モジュール\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * ログイン、ログアウト、セッション管理などの\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * ユーザー認証に関する機能を提供します。\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@author\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> 山田太郎\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@version\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> 1.0.0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@since\u003C/span>\u003Cspan style=\"color:#6272A4\"> 2024-07-10\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> AuthManager\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-関数メソッドのドキュメント\">2. 関数/メソッドのドキュメント\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">/**\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 指定された範囲内のランダムな整数を生成します。\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@param\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> {number}\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> min\u003C/span>\u003Cspan style=\"color:#6272A4\"> - 生成する整数の最小値（含む）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@param\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> {number}\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> max\u003C/span>\u003Cspan style=\"color:#6272A4\"> - 生成する整数の最大値（含む）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@returns\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> {number}\u003C/span>\u003Cspan style=\"color:#6272A4\"> min以上max以下のランダムな整数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@throws\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> {Error}\u003C/span>\u003Cspan style=\"color:#6272A4\"> minがmaxより大きい場合\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@example\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * const random = getRandomInt(1, 10);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * console.log(random); // 1から10のランダムな整数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getRandomInt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">min\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">max\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (min \u003C/span>\u003Cspan style=\"color:#FF79C6\">>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> max) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    throw\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">最小値は最大値以下である必要があります\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Math.\u003C/span>\u003Cspan style=\"color:#50FA7B\">floor\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(Math.\u003C/span>\u003Cspan style=\"color:#50FA7B\">random\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (max \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> min \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)) \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> min;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-実装の注意点や警告\">3. 実装の注意点や警告\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// FIXME: IE11では動作しない可能性あり\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// TODO: パフォーマンス改善が必要\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// WARNING: この関数は非推奨。代わりにnewMethodを使用してください\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// HACK: 一時的な回避策。次回のリリースで修正予定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> legacyMethod\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"4-複雑なロジックの説明\">4. 複雑なロジックの説明\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateShippingCost\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">weight\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">distance\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">isExpress\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 配送料金の計算式：\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 基本料金 = 重量(kg) × 100円\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 距離加算 = 距離(km) × 10円\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 速達の場合は1.5倍\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> baseRate \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> weight \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> distanceRate \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> distance \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> totalRate \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> baseRate \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> distanceRate;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> isExpress \u003C/span>\u003Cspan style=\"color:#FF79C6\">?\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> totalRate \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1.5\u003C/span>\u003Cspan style=\"color:#FF79C6\"> :\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> totalRate;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"コメントを書く際の注意点\">コメントを書く際の注意点\u003C/h2>\n\u003Ch3 id=\"1-避けるべきコメント\">1. 避けるべきコメント\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例：\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// マジックナンバー\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> value \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 86400\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 1日の秒数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例：\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> SECONDS_PER_DAY \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 86400\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 定数として意味のある名前をつける\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例：コードの削除をコメントアウトで残す\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// function oldMethod() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">//   // 古い実装\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例：バージョン管理システムを使用して履歴を管理\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-自己文書化コード\">2. 自己文書化コード\u003C/h3>\n\u003Cp>コメントを書く前に、コード自体を分かりやすくすることを考えましょう。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例：コメントで説明が必要な変数名\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> x \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// ユーザーの年齢\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例：説明的な変数名\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> userAge \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例：複雑な条件式にコメントで説明を追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ユーザーが管理者で、かつアクティブで、\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 最終ログインから30日以内の場合\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (u.type \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">admin\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> u.active \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    (Date.\u003C/span>\u003Cspan style=\"color:#50FA7B\">now\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> u.lastLogin) \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 30\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 24\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 60\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 60\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例：条件を関数として抽出\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> isActiveAdmin\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">user\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> THIRTY_DAYS_IN_MS \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 30\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 24\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 60\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 60\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user.type \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">admin\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">         user.active \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">         (Date.\u003C/span>\u003Cspan style=\"color:#50FA7B\">now\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user.lastLogin) \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> THIRTY_DAYS_IN_MS;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#50FA7B\">isActiveAdmin\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user)) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-コメントのメンテナンス\">3. コメントのメンテナンス\u003C/h3>\n\u003Cp>コメントは「生きたドキュメント」として扱い、コードの変更に合わせて更新する必要があります。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例：古いコメントが残っている\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ユーザーIDを検証\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> validateEmail\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">email\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 関数名が変更されているのにコメントが更新されていない\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例：コメントとコードが一致している\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// メールアドレスの形式を検証\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> validateEmail\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">email\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"実践的なコメントの例\">実践的なコメントの例\u003C/h2>\n\u003Ch3 id=\"1-設定ファイル\">1. 設定ファイル\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// config.js\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">/**\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * アプリケーション設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 環境変数から設定を読み込み、デフォルト値とマージします。\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 本番環境では必ずすべての値を環境変数で指定してください。\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> config \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // データベース設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  database\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    host\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> process.env.\u003C/span>\u003Cspan style=\"color:#BD93F9\">DB_HOST\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ||\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">localhost\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    port\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#50FA7B\"> parseInt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(process.env.\u003C/span>\u003Cspan style=\"color:#BD93F9\">DB_PORT\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ||\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">5432\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> process.env.\u003C/span>\u003Cspan style=\"color:#BD93F9\">DB_NAME\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ||\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">myapp_dev\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 本番環境ではパスワードを必ず指定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    password\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> process.env.\u003C/span>\u003Cspan style=\"color:#BD93F9\">DB_PASSWORD\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // APIレート制限（リクエスト/分）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  rateLimit\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    window\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 60\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 1分間\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    max\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#6272A4\">           // 最大リクエスト数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-複雑なアルゴリズム\">2. 複雑なアルゴリズム\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">/**\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * クイックソートアルゴリズムの実装\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 配列を以下のステップで整列します：\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 1. ピボット（基準値）を選択\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 2. ピボットより小さい要素を左側に、大きい要素を右側に分割\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 3. 左右の部分配列に対して再帰的に同じ処理を実行\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 平均計算量: O(n log n)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 最悪計算量: O(n²)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> quickSort\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">arr\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">left\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">right\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> arr.length \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (left \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> right) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // ピボットを配列の最後の要素として選択\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> pivotIndex \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> partition\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(arr, left, right);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 左側の部分配列をソート\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    quickSort\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(arr, left, pivotIndex \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 右側の部分配列をソート\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    quickSort\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(arr, pivotIndex \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, right);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> arr;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">/**\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 配列をピボットを基準に分割\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@param\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> {Array}\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> arr\u003C/span>\u003Cspan style=\"color:#6272A4\"> - 分割する配列\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@param\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> {number}\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> left\u003C/span>\u003Cspan style=\"color:#6272A4\"> - 左端のインデックス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@param\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> {number}\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> right\u003C/span>\u003Cspan style=\"color:#6272A4\"> - 右端のインデックス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003Cspan style=\"color:#FF79C6\">@returns\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> {number}\u003C/span>\u003Cspan style=\"color:#6272A4\"> ピボットの最終位置\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> partition\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">arr\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">left\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">right\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> pivot \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> arr[right];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> left \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ピボットより小さい要素を左側に移動\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> j \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> left; j \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> right; j\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (arr[j] \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> pivot) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      [arr[i], arr[j]] \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [arr[j], arr[i]];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ピボットを適切な位置に配置\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  [arr[i \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">], arr[right]] \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [arr[right], arr[i \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-ビジネスロジック\">3. ビジネスロジック\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">/**\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 商品の割引価格を計算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 割引ルール：\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * - 通常会員: 5%割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * - プレミアム会員: 10%割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * - 3000円以上の購入: さらに5%割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * - セール期間中: さらに10%割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> * 注意: 割引は最大で30%まで\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"> */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateDiscountedPrice\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">price\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">userType\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">isSalePeriod\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 会員タイプによる基本割引率\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> userType \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">premium\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ?\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.10\u003C/span>\u003Cspan style=\"color:#FF79C6\"> :\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.05\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 購入金額による追加割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (price \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.05\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // セール期間中の追加割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (isSalePeriod) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 最大割引率の制限\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Math.\u003C/span>\u003Cspan style=\"color:#50FA7B\">min\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(discount, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0.30\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 割引価格の計算（小数点以下切り捨て）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Math.\u003C/span>\u003Cspan style=\"color:#50FA7B\">floor\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(price \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#FF79C6\"> -\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> discount));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>効果的なコメントを書くためのポイントをまとめると：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>目的を明確に\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>コードの「なぜ」を説明する\u003C/li>\n\u003Cli>複雑なロジックの背景を説明する\u003C/li>\n\u003Cli>注意点や制約を明記する\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>適切な粒度で\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>必要以上に細かくしない\u003C/li>\n\u003Cli>重要な部分に焦点を当てる\u003C/li>\n\u003Cli>コード全体の構造を理解しやすくする\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>メンテナンス性を考慮\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>コードの変更に合わせて更新する\u003C/li>\n\u003Cli>古いコメントは削除する\u003C/li>\n\u003Cli>バージョン管理システムを活用する\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>自己文書化コードを目指す\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>説明的な名前を使用する\u003C/li>\n\u003Cli>複雑な処理は関数に分割する\u003C/li>\n\u003Cli>コメントが必要ない程度にコードを明確にする\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>コメントは、コードを理解しやすくするための重要なツールです。ただし、コメントに頼りすぎるのではなく、まずはコード自体を分かりやすくすることを心がけましょう。適切なコメントと読みやすいコードの組み合わせが、最高の可読性を生み出します。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>コメントの書き方を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-error-handling-guide/\">【初心者向け】プログラミングのエラーの種類と対処法\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/algorithm-basics-explained/\">【図解】アルゴリズムとは？初心者が知るべき基本概念\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":249,"imagePaths":305,"frontmatter":306},[250,253,256,258,261,264,267,269,272,275,278,281,283,286,289,292,294,297,300,303,304],{"depth":26,"slug":251,"text":252},"コメントの書き方でコードが劇的にわかりやすくなる","コメントの書き方でコードが劇的にわかりやすくなる！",{"depth":29,"slug":254,"text":255},"なぜコメントが重要なのか","なぜコメントが重要なのか？",{"depth":29,"slug":257,"text":257},"良いコメントの特徴",{"depth":33,"slug":259,"text":260},"1-簡潔で明確","1. 簡潔で明確",{"depth":33,"slug":262,"text":263},"2-コードのなぜを説明する","2. コードの「なぜ」を説明する",{"depth":33,"slug":265,"text":266},"3-適切な粒度","3. 適切な粒度",{"depth":29,"slug":268,"text":268},"効果的なコメントの種類",{"depth":33,"slug":270,"text":271},"1-ファイルヘッダーコメント","1. ファイルヘッダーコメント",{"depth":33,"slug":273,"text":274},"2-関数メソッドのドキュメント","2. 関数/メソッドのドキュメント",{"depth":33,"slug":276,"text":277},"3-実装の注意点や警告","3. 実装の注意点や警告",{"depth":33,"slug":279,"text":280},"4-複雑なロジックの説明","4. 複雑なロジックの説明",{"depth":29,"slug":282,"text":282},"コメントを書く際の注意点",{"depth":33,"slug":284,"text":285},"1-避けるべきコメント","1. 避けるべきコメント",{"depth":33,"slug":287,"text":288},"2-自己文書化コード","2. 自己文書化コード",{"depth":33,"slug":290,"text":291},"3-コメントのメンテナンス","3. コメントのメンテナンス",{"depth":29,"slug":293,"text":293},"実践的なコメントの例",{"depth":33,"slug":295,"text":296},"1-設定ファイル","1. 設定ファイル",{"depth":33,"slug":298,"text":299},"2-複雑なアルゴリズム","2. 複雑なアルゴリズム",{"depth":33,"slug":301,"text":302},"3-ビジネスロジック","3. ビジネスロジック",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":240,"description":241,"pubDate":307,"heroImage":155},"Mar 18 2025","list-and-dictionary-explained",{"id":308,"data":310,"body":314,"filePath":315,"digest":316,"rendered":317},{"title":311,"description":312,"pubDate":313,"heroImage":155},"【図解】リスト（配列）と辞書（オブジェクト）の違いを解説","プログラミングの基本的なデータ構造であるリスト（配列）と辞書（オブジェクト）の違いと使い方を、図解でわかりやすく解説します。",["Date","2025-03-12T15:00:00.000Z"],"# 【図解】リスト（配列）と辞書（オブジェクト）の違いを解説\n\nプログラミングでデータを扱う際、最も基本的なデータ構造が「リスト（配列）」と「辞書（オブジェクト）」です。この記事では、これらの違いと使い方について、図解を交えてわかりやすく解説します。\n\n## リスト（配列）とは？\n\nリストは、複数のデータを順序付けて格納するデータ構造です。本棚に本を順番に並べるようなイメージです。\n\n### リストの特徴\n\n1. **順序がある**\n   - 各要素に位置（インデックス）がある\n   - 0から始まる番号で要素にアクセスできる\n\n2. **同じ値を複数格納できる**\n   - 重複した値を持つことができる\n\n3. **要素の追加・削除が可能**\n   - リストの末尾や途中に要素を追加できる\n   - 既存の要素を削除できる\n\n### JavaScriptでのリストの例\n\n```javascript\n// リスト（配列）の作成\nlet fruits = [\"りんご\", \"バナナ\", \"オレンジ\"];\n\n// インデックスを使って要素にアクセス\nconsole.log(fruits[0]);  // \"りんご\"\nconsole.log(fruits[1]);  // \"バナナ\"\nconsole.log(fruits[2]);  // \"オレンジ\"\n\n// 要素の追加\nfruits.push(\"ぶどう\");\nconsole.log(fruits);  // [\"りんご\", \"バナナ\", \"オレンジ\", \"ぶどう\"]\n\n// 要素の削除\nfruits.pop();  // 末尾の要素を削除\nconsole.log(fruits);  // [\"りんご\", \"バナナ\", \"オレンジ\"]\n```\n\n### リストの一般的な操作\n\n```javascript\nlet numbers = [1, 2, 3, 4, 5];\n\n// 要素の追加（末尾）\nnumbers.push(6);        // [1, 2, 3, 4, 5, 6]\n\n// 要素の追加（先頭）\nnumbers.unshift(0);     // [0, 1, 2, 3, 4, 5, 6]\n\n// 要素の削除（末尾）\nnumbers.pop();          // [0, 1, 2, 3, 4, 5]\n\n// 要素の削除（先頭）\nnumbers.shift();        // [1, 2, 3, 4, 5]\n\n// 特定の位置に要素を追加/削除\nnumbers.splice(2, 0, 2.5);  // [1, 2, 2.5, 3, 4, 5]\n\n// 要素の検索\nlet index = numbers.indexOf(3);  // 3の位置（3）を取得\n```\n\n## 辞書（オブジェクト）とは？\n\n辞書は、キーと値のペアでデータを格納するデータ構造です。実際の辞書のように、単語（キー）とその意味（値）が対応しているイメージです。\n\n### 辞書の特徴\n\n1. **キーと値のペア**\n   - 各データにキー（名前）が付いている\n   - キーを使って値にアクセスする\n\n2. **キーは一意**\n   - 同じキーを複数持つことはできない\n   - 値は重複可能\n\n3. **順序は保証されない**\n   - データの格納順序は重要ではない\n\n### JavaScriptでの辞書の例\n\n```javascript\n// 辞書（オブジェクト）の作成\nlet person = {\n  name: \"山田太郎\",\n  age: 25,\n  city: \"東京\"\n};\n\n// キーを使って値にアクセス\nconsole.log(person.name);   // \"山田太郎\"\nconsole.log(person[\"age\"]); // 25\n\n// 値の更新\nperson.age = 26;\nperson[\"city\"] = \"大阪\";\n\n// 新しいキーと値の追加\nperson.email = \"yamada@example.com\";\n\nconsole.log(person);\n// {\n//   name: \"山田太郎\",\n//   age: 26,\n//   city: \"大阪\",\n//   email: \"yamada@example.com\"\n// }\n```\n\n### 辞書の一般的な操作\n\n```javascript\nlet user = {\n  id: 1,\n  name: \"鈴木一郎\",\n  isAdmin: false\n};\n\n// プロパティの存在確認\nconsole.log(\"name\" in user);              // true\nconsole.log(user.hasOwnProperty(\"age\"));  // false\n\n// キーの一覧を取得\nconsole.log(Object.keys(user));    // [\"id\", \"name\", \"isAdmin\"]\n\n// 値の一覧を取得\nconsole.log(Object.values(user));  // [1, \"鈴木一郎\", false]\n\n// キーと値のペアを取得\nconsole.log(Object.entries(user)); \n// [[\"id\", 1], [\"name\", \"鈴木一郎\"], [\"isAdmin\", false]]\n\n// プロパティの削除\ndelete user.isAdmin;\n```\n\n## リストと辞書の使い分け\n\n### リストを使うべき場合\n\n1. **順序が重要な場合**\n   ```javascript\n   // 順位表\n   let rankings = [\"金メダル\", \"銀メダル\", \"銅メダル\"];\n   \n   // 手順\n   let steps = [\"材料を用意\", \"混ぜる\", \"焼く\", \"盛り付け\"];\n   ```\n\n2. **同じ型のデータをまとめて処理する場合**\n   ```javascript\n   // 数値の配列を処理\n   let scores = [85, 90, 75, 88];\n   let total = scores.reduce((sum, score) => sum + score, 0);\n   let average = total / scores.length;\n   ```\n\n3. **データを順番に処理する場合**\n   ```javascript\n   // 配列の各要素を処理\n   let names = [\"田中\", \"鈴木\", \"佐藤\"];\n   names.forEach((name, index) => {\n     console.log(`${index + 1}番目: ${name}`);\n   });\n   ```\n\n### 辞書を使うべき場合\n\n1. **データに名前（キー）を付けたい場合**\n   ```javascript\n   // ユーザー情報\n   let user = {\n     id: \"user123\",\n     name: \"山本花子\",\n     email: \"yamamoto@example.com\",\n     age: 28\n   };\n   ```\n\n2. **複数の関連データをまとめたい場合**\n   ```javascript\n   // 商品情報\n   let product = {\n     name: \"スマートフォン\",\n     price: 50000,\n     stock: 100,\n     manufacturer: \"TechCo\",\n     specifications: {\n       color: \"ブラック\",\n       weight: \"180g\",\n       size: \"6.1インチ\"\n     }\n   };\n   ```\n\n3. **キーと値の対応関係が重要な場合**\n   ```javascript\n   // 都道府県コード\n   let prefectureCodes = {\n     \"東京\": \"13\",\n     \"大阪\": \"27\",\n     \"京都\": \"26\",\n     \"神奈川\": \"14\"\n   };\n   ```\n\n## 実践的な例\n\n### 1. 学生管理システム\n\n```javascript\n// リストとオブジェクトの組み合わせ\nlet students = [\n  {\n    id: \"001\",\n    name: \"山田太郎\",\n    scores: {\n      math: 85,\n      english: 90,\n      science: 78\n    }\n  },\n  {\n    id: \"002\",\n    name: \"鈴木花子\",\n    scores: {\n      math: 92,\n      english: 85,\n      science: 90\n    }\n  }\n];\n\n// 成績の平均値を計算する関数\nfunction calculateAverage(student) {\n  const scores = Object.values(student.scores);\n  const total = scores.reduce((sum, score) => sum + score, 0);\n  return total / scores.length;\n}\n\n// 各学生の平均点を表示\nstudents.forEach(student => {\n  const average = calculateAverage(student);\n  console.log(`${student.name}の平均点: ${average}`);\n});\n```\n\n### 2. 買い物カートシステム\n\n```javascript\n// 商品マスタ（辞書）\nconst products = {\n  \"A001\": { name: \"コーヒー\", price: 300 },\n  \"A002\": { name: \"紅茶\", price: 250 },\n  \"A003\": { name: \"緑茶\", price: 200 }\n};\n\n// カートの内容（リスト）\nlet cart = [\n  { productId: \"A001\", quantity: 2 },\n  { productId: \"A003\", quantity: 1 }\n];\n\n// 合計金額を計算する関数\nfunction calculateTotal(cart) {\n  return cart.reduce((total, item) => {\n    const product = products[item.productId];\n    return total + (product.price * item.quantity);\n  }, 0);\n}\n\n// カートの内容を表示する関数\nfunction displayCart(cart) {\n  console.log(\"=== カートの内容 ===\");\n  cart.forEach(item => {\n    const product = products[item.productId];\n    console.log(`${product.name}: ${item.quantity}個 (${product.price * item.quantity}円)`);\n  });\n  console.log(`合計: ${calculateTotal(cart)}円`);\n}\n\ndisplayCart(cart);\n```\n\n### 3. タスク管理システム\n\n```javascript\n// タスクの状態を管理する辞書\nconst taskStatus = {\n  \"TODO\": \"未着手\",\n  \"IN_PROGRESS\": \"進行中\",\n  \"DONE\": \"完了\"\n};\n\n// タスクのリスト\nlet tasks = [\n  {\n    id: 1,\n    title: \"企画書作成\",\n    status: \"IN_PROGRESS\",\n    assignee: \"田中\",\n    dueDate: \"2024-08-01\"\n  },\n  {\n    id: 2,\n    title: \"ミーティング\",\n    status: \"TODO\",\n    assignee: \"鈴木\",\n    dueDate: \"2024-08-02\"\n  },\n  {\n    id: 3,\n    title: \"報告書提出\",\n    status: \"DONE\",\n    assignee: \"佐藤\",\n    dueDate: \"2024-07-31\"\n  }\n];\n\n// タスクの状態でフィルタリングする関数\nfunction filterTasksByStatus(tasks, status) {\n  return tasks.filter(task => task.status === status);\n}\n\n// 担当者ごとのタスク数を集計する関数\nfunction countTasksByAssignee(tasks) {\n  return tasks.reduce((counts, task) => {\n    counts[task.assignee] = (counts[task.assignee] || 0) + 1;\n    return counts;\n  }, {});\n}\n\n// 結果を表示\nconsole.log(\"進行中のタスク:\", filterTasksByStatus(tasks, \"IN_PROGRESS\"));\nconsole.log(\"担当者別タスク数:\", countTasksByAssignee(tasks));\n```\n\n## まとめ\n\nリスト（配列）と辞書（オブジェクト）の主な違いは：\n\n1. **データの格納方法**\n   - リスト：順序付けられた要素の集まり\n   - 辞書：キーと値のペアの集まり\n\n2. **アクセス方法**\n   - リスト：インデックス（数値）でアクセス\n   - 辞書：キー（文字列など）でアクセス\n\n3. **使用シーン**\n   - リスト：順序が重要な場合、同じ型のデータをまとめる場合\n   - 辞書：データに名前を付けたい場合、関連データをまとめたい場合\n\n適切なデータ構造を選択することで、より効率的で読みやすいコードを書くことができます。\n\n## 次のステップ\n\nデータ構造の基本を理解したら、以下の記事も参考にしてください：\n\n- [変数・データ型・関数とは？初心者向けに超わかりやすく解説](/blog/programming-basics-for-beginners/)\n- [プログラミング初心者が最初に学ぶべき5つの概念](/blog/programming-concepts-for-beginners/)\n- [【図解】アルゴリズムとは？初心者が知るべき基本概念](/blog/algorithm-basics-explained/)","src/content/blog/list-and-dictionary-explained.md","858318477049dcca",{"html":318,"metadata":319},"\u003Ch1 id=\"図解リスト配列と辞書オブジェクトの違いを解説\">【図解】リスト（配列）と辞書（オブジェクト）の違いを解説\u003C/h1>\n\u003Cp>プログラミングでデータを扱う際、最も基本的なデータ構造が「リスト（配列）」と「辞書（オブジェクト）」です。この記事では、これらの違いと使い方について、図解を交えてわかりやすく解説します。\u003C/p>\n\u003Ch2 id=\"リスト配列とは\">リスト（配列）とは？\u003C/h2>\n\u003Cp>リストは、複数のデータを順序付けて格納するデータ構造です。本棚に本を順番に並べるようなイメージです。\u003C/p>\n\u003Ch3 id=\"リストの特徴\">リストの特徴\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>順序がある\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>各要素に位置（インデックス）がある\u003C/li>\n\u003Cli>0から始まる番号で要素にアクセスできる\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>同じ値を複数格納できる\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>重複した値を持つことができる\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>要素の追加・削除が可能\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>リストの末尾や途中に要素を追加できる\u003C/li>\n\u003Cli>既存の要素を削除できる\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"javascriptでのリストの例\">JavaScriptでのリストの例\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// リスト（配列）の作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> fruits \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">りんご\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">バナナ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">オレンジ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// インデックスを使って要素にアクセス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(fruits[\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"りんご\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(fruits[\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"バナナ\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(fruits[\u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"オレンジ\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 要素の追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">fruits.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ぶどう\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(fruits);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// [\"りんご\", \"バナナ\", \"オレンジ\", \"ぶどう\"]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 要素の削除\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">fruits.\u003C/span>\u003Cspan style=\"color:#50FA7B\">pop\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 末尾の要素を削除\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(fruits);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// [\"りんご\", \"バナナ\", \"オレンジ\"]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"リストの一般的な操作\">リストの一般的な操作\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 要素の追加（末尾）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">numbers.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">6\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);        \u003C/span>\u003Cspan style=\"color:#6272A4\">// [1, 2, 3, 4, 5, 6]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 要素の追加（先頭）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">numbers.\u003C/span>\u003Cspan style=\"color:#50FA7B\">unshift\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);     \u003C/span>\u003Cspan style=\"color:#6272A4\">// [0, 1, 2, 3, 4, 5, 6]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 要素の削除（末尾）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">numbers.\u003C/span>\u003Cspan style=\"color:#50FA7B\">pop\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();          \u003C/span>\u003Cspan style=\"color:#6272A4\">// [0, 1, 2, 3, 4, 5]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 要素の削除（先頭）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">numbers.\u003C/span>\u003Cspan style=\"color:#50FA7B\">shift\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();        \u003C/span>\u003Cspan style=\"color:#6272A4\">// [1, 2, 3, 4, 5]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 特定の位置に要素を追加/削除\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">numbers.\u003C/span>\u003Cspan style=\"color:#50FA7B\">splice\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2.5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// [1, 2, 2.5, 3, 4, 5]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 要素の検索\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> index \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers.\u003C/span>\u003Cspan style=\"color:#50FA7B\">indexOf\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 3の位置（3）を取得\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"辞書オブジェクトとは\">辞書（オブジェクト）とは？\u003C/h2>\n\u003Cp>辞書は、キーと値のペアでデータを格納するデータ構造です。実際の辞書のように、単語（キー）とその意味（値）が対応しているイメージです。\u003C/p>\n\u003Ch3 id=\"辞書の特徴\">辞書の特徴\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>キーと値のペア\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>各データにキー（名前）が付いている\u003C/li>\n\u003Cli>キーを使って値にアクセスする\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>キーは一意\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>同じキーを複数持つことはできない\u003C/li>\n\u003Cli>値は重複可能\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>順序は保証されない\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>データの格納順序は重要ではない\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"javascriptでの辞書の例\">JavaScriptでの辞書の例\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 辞書（オブジェクト）の作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> person \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  age\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  city\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">東京\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// キーを使って値にアクセス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(person.name);   \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"山田太郎\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(person[\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">age\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]); \u003C/span>\u003Cspan style=\"color:#6272A4\">// 25\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 値の更新\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">person.age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 26\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">person[\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">city\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">大阪\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 新しいキーと値の追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">person.email \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">yamada@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(person);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">//   name: \"山田太郎\",\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">//   age: 26,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">//   city: \"大阪\",\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">//   email: \"yamada@example.com\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// }\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"辞書の一般的な操作\">辞書の一般的な操作\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木一郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  isAdmin\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// プロパティの存在確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">name\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\"> in\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user);              \u003C/span>\u003Cspan style=\"color:#6272A4\">// true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user.\u003C/span>\u003Cspan style=\"color:#50FA7B\">hasOwnProperty\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">age\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// キーの一覧を取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(Object.\u003C/span>\u003Cspan style=\"color:#50FA7B\">keys\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user));    \u003C/span>\u003Cspan style=\"color:#6272A4\">// [\"id\", \"name\", \"isAdmin\"]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 値の一覧を取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(Object.\u003C/span>\u003Cspan style=\"color:#50FA7B\">values\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// [1, \"鈴木一郎\", false]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// キーと値のペアを取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(Object.\u003C/span>\u003Cspan style=\"color:#50FA7B\">entries\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user)); \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// [[\"id\", 1], [\"name\", \"鈴木一郎\"], [\"isAdmin\", false]]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// プロパティの削除\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">delete\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user.isAdmin;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"リストと辞書の使い分け\">リストと辞書の使い分け\u003C/h2>\n\u003Ch3 id=\"リストを使うべき場合\">リストを使うべき場合\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>順序が重要な場合\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 順位表\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> rankings \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">金メダル\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">銀メダル\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">銅メダル\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 手順\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> steps \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">材料を用意\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">混ぜる\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">焼く\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">盛り付け\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>同じ型のデータをまとめて処理する場合\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 数値の配列を処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">85\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">90\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">75\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">88\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores.\u003C/span>\u003Cspan style=\"color:#50FA7B\">reduce\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">sum\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">score\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> score, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> average \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores.length;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>データを順番に処理する場合\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 配列の各要素を処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> names \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">佐藤\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">names.\u003C/span>\u003Cspan style=\"color:#50FA7B\">forEach\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">index\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">index\u003C/span>\u003Cspan style=\"color:#FF79C6\"> +\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">番目: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"辞書を使うべき場合\">辞書を使うべき場合\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>データに名前（キー）を付けたい場合\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ユーザー情報\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">user123\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山本花子\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  email\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">yamamoto@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  age\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 28\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>複数の関連データをまとめたい場合\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 商品情報\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> product \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">スマートフォン\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 50000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  stock\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  manufacturer\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">TechCo\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  specifications\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ブラック\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    weight\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">180g\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    size\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">6.1インチ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>キーと値の対応関係が重要な場合\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 都道府県コード\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> prefectureCodes \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">  \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">東京\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">13\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">  \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">大阪\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">27\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">  \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">京都\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">26\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">  \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">神奈川\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">14\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"実践的な例\">実践的な例\u003C/h2>\n\u003Ch3 id=\"1-学生管理システム\">1. 学生管理システム\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// リストとオブジェクトの組み合わせ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> students \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">001\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    scores\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      math\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 85\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      english\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 90\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      science\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 78\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">002\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木花子\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    scores\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      math\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 92\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      english\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 85\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      science\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 90\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 成績の平均値を計算する関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateAverage\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">student\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Object.\u003C/span>\u003Cspan style=\"color:#50FA7B\">values\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(student.scores);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores.\u003C/span>\u003Cspan style=\"color:#50FA7B\">reduce\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">sum\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">score\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> score, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores.length;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 各学生の平均点を表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">students.\u003C/span>\u003Cspan style=\"color:#50FA7B\">forEach\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">student\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> average \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateAverage\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(student);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">student.name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">の平均点: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">average\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-買い物カートシステム\">2. 買い物カートシステム\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 商品マスタ（辞書）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">  \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">A001\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> { name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">コーヒー\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 300\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">  \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">A002\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> { name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">紅茶\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 250\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">  \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">A003\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> { name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">緑茶\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 200\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// カートの内容（リスト）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> cart \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { productId\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">A001\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, quantity\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { productId\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">A003\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, quantity\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 合計金額を計算する関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">cart\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> cart.\u003C/span>\u003Cspan style=\"color:#50FA7B\">reduce\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">total\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">item\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> product \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products[item.productId];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (product.price \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> item.quantity);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// カートの内容を表示する関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> displayCart\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">cart\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">=== カートの内容 ===\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  cart.\u003C/span>\u003Cspan style=\"color:#50FA7B\">forEach\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">item\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> product \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products[item.productId];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">product.name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">item.quantity\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">個 (\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">product.price\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> item.quantity\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">円)`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`合計: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#50FA7B\">calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(cart)\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">円`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">displayCart\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(cart);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-タスク管理システム\">3. タスク管理システム\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// タスクの状態を管理する辞書\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskStatus \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">  \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">TODO\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">未着手\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">  \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">IN_PROGRESS\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">進行中\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">  \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">DONE\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">完了\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// タスクのリスト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> tasks \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    title\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">企画書作成\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    status\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">IN_PROGRESS\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    assignee\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    dueDate\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">2024-08-01\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    title\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ミーティング\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    status\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">TODO\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    assignee\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    dueDate\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">2024-08-02\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    title\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">報告書提出\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    status\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">DONE\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    assignee\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">佐藤\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    dueDate\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">2024-07-31\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// タスクの状態でフィルタリングする関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> filterTasksByStatus\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">tasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">filter\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">task\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> task.status \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> status);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 担当者ごとのタスク数を集計する関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> countTasksByAssignee\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">tasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">reduce\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">counts\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">task\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    counts[task.assignee] \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (counts[task.assignee] \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> counts;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }, {});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 結果を表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">進行中のタスク:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#50FA7B\">filterTasksByStatus\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(tasks, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">IN_PROGRESS\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">担当者別タスク数:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#50FA7B\">countTasksByAssignee\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(tasks));\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>リスト（配列）と辞書（オブジェクト）の主な違いは：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>データの格納方法\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>リスト：順序付けられた要素の集まり\u003C/li>\n\u003Cli>辞書：キーと値のペアの集まり\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>アクセス方法\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>リスト：インデックス（数値）でアクセス\u003C/li>\n\u003Cli>辞書：キー（文字列など）でアクセス\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>使用シーン\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>リスト：順序が重要な場合、同じ型のデータをまとめる場合\u003C/li>\n\u003Cli>辞書：データに名前を付けたい場合、関連データをまとめたい場合\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>適切なデータ構造を選択することで、より効率的で読みやすいコードを書くことができます。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>データ構造の基本を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/programming-basics-for-beginners/\">変数・データ型・関数とは？初心者向けに超わかりやすく解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/algorithm-basics-explained/\">【図解】アルゴリズムとは？初心者が知るべき基本概念\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":320,"imagePaths":362,"frontmatter":363},[321,323,326,328,331,333,336,338,341,343,345,347,349,351,354,357,360,361],{"depth":26,"slug":322,"text":311},"図解リスト配列と辞書オブジェクトの違いを解説",{"depth":29,"slug":324,"text":325},"リスト配列とは","リスト（配列）とは？",{"depth":33,"slug":327,"text":327},"リストの特徴",{"depth":33,"slug":329,"text":330},"javascriptでのリストの例","JavaScriptでのリストの例",{"depth":33,"slug":332,"text":332},"リストの一般的な操作",{"depth":29,"slug":334,"text":335},"辞書オブジェクトとは","辞書（オブジェクト）とは？",{"depth":33,"slug":337,"text":337},"辞書の特徴",{"depth":33,"slug":339,"text":340},"javascriptでの辞書の例","JavaScriptでの辞書の例",{"depth":33,"slug":342,"text":342},"辞書の一般的な操作",{"depth":29,"slug":344,"text":344},"リストと辞書の使い分け",{"depth":33,"slug":346,"text":346},"リストを使うべき場合",{"depth":33,"slug":348,"text":348},"辞書を使うべき場合",{"depth":29,"slug":350,"text":350},"実践的な例",{"depth":33,"slug":352,"text":353},"1-学生管理システム","1. 学生管理システム",{"depth":33,"slug":355,"text":356},"2-買い物カートシステム","2. 買い物カートシステム",{"depth":33,"slug":358,"text":359},"3-タスク管理システム","3. タスク管理システム",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":311,"description":312,"pubDate":364,"heroImage":155},"Mar 13 2025","if-for-difference-explained",{"id":365,"data":367,"body":372,"filePath":373,"digest":374,"rendered":375},{"title":368,"description":369,"pubDate":370,"heroImage":371},"【初心者向け】if文とfor文の違いをわかりやすく解説","プログラミング初心者のために、if文とfor文の基本的な違いと使い方を具体例を交えてわかりやすく解説します。",["Date","2025-03-02T15:00:00.000Z"],"/tech-blog/blog-placeholder-2.jpg","# 【初心者向け】if文とfor文の違いをわかりやすく解説\n\nプログラミングを学び始めると必ず出会う「if文」と「for文」。これらは最も基本的な制御構文ですが、初心者の方にとっては混乱しやすいポイントでもあります。この記事では、if文とfor文の違いを具体例を交えてわかりやすく解説します。\n\n## if文とfor文の基本的な違い\n\nまず、if文とfor文の基本的な違いを簡潔に説明します：\n\n- **if文**：「条件分岐」のための構文。特定の条件が満たされたときだけ、処理を実行します。\n- **for文**：「繰り返し」のための構文。同じ処理を決められた回数だけ繰り返し実行します。\n\nつまり、if文は「もし〜なら、これをする」という判断を行い、for文は「これを〜回繰り返す」という反復を行います。\n\n## if文の基本\n\n### if文の構文\n\nif文の基本的な構文は以下のようになります：\n\n```javascript\nif (条件) {\n  // 条件が true のときに実行される処理\n} else if (別の条件) {\n  // 最初の条件が false で、別の条件が true のときに実行される処理\n} else {\n  // すべての条件が false のときに実行される処理\n}\n```\n\n### if文の具体例\n\n例えば、ユーザーの年齢に応じて異なるメッセージを表示するプログラムを考えてみましょう：\n\n```javascript\nlet age = 25;\n\nif (age \u003C 20) {\n  console.log(\"未成年です。\");\n} else if (age \u003C 65) {\n  console.log(\"成人です。\");\n} else {\n  console.log(\"シニアです。\");\n}\n// 出力: 成人です。\n```\n\nこの例では：\n1. まず `age \u003C 20` という条件をチェック（falseなので次へ）\n2. 次に `age \u003C 65` という条件をチェック（trueなので対応する処理を実行）\n3. 「成人です。」というメッセージが表示される\n\n### if文のよくある使い方\n\nif文は以下のようなシチュエーションでよく使われます：\n\n1. **ユーザー入力の検証**\n   ```javascript\n   let userInput = \"\"; // ユーザーが何も入力しなかった場合\n   \n   if (userInput === \"\") {\n     console.log(\"入力が必要です。\");\n   } else {\n     console.log(\"入力を受け付けました。\");\n   }\n   ```\n\n2. **権限チェック**\n   ```javascript\n   let isAdmin = false;\n   \n   if (isAdmin) {\n     console.log(\"管理者メニューを表示\");\n   } else {\n     console.log(\"一般ユーザーメニューを表示\");\n   }\n   ```\n\n3. **エラーハンドリング**\n   ```javascript\n   let success = false;\n   \n   if (success) {\n     console.log(\"処理が成功しました。\");\n   } else {\n     console.log(\"エラーが発生しました。\");\n   }\n   ```\n\n## for文の基本\n\n### for文の構文\n\nfor文の基本的な構文は以下のようになります：\n\n```javascript\nfor (初期化; 条件; 更新) {\n  // 条件が true の間、繰り返し実行される処理\n}\n```\n\n各部分の役割は：\n- **初期化**：ループの開始前に1回だけ実行される（通常はカウンター変数の初期化）\n- **条件**：各繰り返しの前にチェックされ、trueならループを続行、falseなら終了\n- **更新**：各繰り返しの最後に実行される（通常はカウンター変数の更新）\n\n### for文の具体例\n\n1から5までの数字を順番に表示するプログラムを考えてみましょう：\n\n```javascript\nfor (let i = 1; i \u003C= 5; i++) {\n  console.log(i);\n}\n// 出力:\n// 1\n// 2\n// 3\n// 4\n// 5\n```\n\nこの例では：\n1. `let i = 1` でカウンター変数を初期化\n2. `i \u003C= 5` という条件をチェック（trueなのでループ内の処理を実行）\n3. `console.log(i)` で現在の i の値を表示\n4. `i++` で i の値を1増やす\n5. 再び条件をチェックして、trueなら3と4を繰り返す\n6. i が6になると条件がfalseになり、ループが終了\n\n### for文のよくある使い方\n\nfor文は以下のようなシチュエーションでよく使われます：\n\n1. **配列の要素を処理する**\n   ```javascript\n   let fruits = [\"りんご\", \"バナナ\", \"オレンジ\"];\n   \n   for (let i = 0; i \u003C fruits.length; i++) {\n     console.log(fruits[i]);\n   }\n   // 出力:\n   // りんご\n   // バナナ\n   // オレンジ\n   ```\n\n2. **特定回数の処理を実行する**\n   ```javascript\n   for (let i = 0; i \u003C 3; i++) {\n     console.log(\"この処理は3回実行されます。\");\n   }\n   ```\n\n3. **テーブルや表を生成する**\n   ```javascript\n   let table = \"\";\n   \n   for (let i = 1; i \u003C= 3; i++) {\n     for (let j = 1; j \u003C= 3; j++) {\n       table += i * j + \"\\t\";\n     }\n     table += \"\\n\";\n   }\n   \n   console.log(table);\n   // 出力:\n   // 1    2    3    \n   // 2    4    6    \n   // 3    6    9    \n   ```\n\n## if文とfor文の違いを理解するための具体例\n\n### 例1：成績判定プログラム\n\nクラスの生徒の点数を処理するプログラムを考えてみましょう。if文は各生徒の成績を判定し、for文はクラス全員の点数を処理します。\n\n```javascript\n// 生徒の点数リスト\nlet scores = [85, 45, 92, 78, 60];\n\n// for文を使って全生徒の点数を処理\nfor (let i = 0; i \u003C scores.length; i++) {\n  let score = scores[i];\n  \n  // if文を使って各生徒の成績を判定\n  if (score >= 90) {\n    console.log(`生徒${i+1}の点数は${score}点で、評価はAです。`);\n  } else if (score >= 80) {\n    console.log(`生徒${i+1}の点数は${score}点で、評価はBです。`);\n  } else if (score >= 70) {\n    console.log(`生徒${i+1}の点数は${score}点で、評価はCです。`);\n  } else if (score >= 60) {\n    console.log(`生徒${i+1}の点数は${score}点で、評価はDです。`);\n  } else {\n    console.log(`生徒${i+1}の点数は${score}点で、評価はFです。`);\n  }\n}\n// 出力:\n// 生徒1の点数は85点で、評価はBです。\n// 生徒2の点数は45点で、評価はFです。\n// 生徒3の点数は92点で、評価はAです。\n// 生徒4の点数は78点で、評価はCです。\n// 生徒5の点数は60点で、評価はDです。\n```\n\nこの例では：\n- **for文**：生徒の点数リスト全体をループ処理\n- **if文**：各生徒の点数に応じて適切な評価を判定\n\n### 例2：パスワード検証プログラム\n\nユーザーが入力したパスワードが条件を満たしているかチェックするプログラムを考えてみましょう。\n\n```javascript\nlet password = \"Abc123!\";\nlet isValid = true;\nlet errorMessage = \"\";\n\n// パスワードの長さをチェック\nif (password.length \u003C 8) {\n  isValid = false;\n  errorMessage = \"パスワードは8文字以上必要です。\";\n} else {\n  // 各文字をチェックするためのフラグ\n  let hasUpperCase = false;\n  let hasLowerCase = false;\n  let hasNumber = false;\n  let hasSpecial = false;\n  \n  // for文を使って各文字をチェック\n  for (let i = 0; i \u003C password.length; i++) {\n    let char = password[i];\n    \n    if (char >= 'A' && char \u003C= 'Z') {\n      hasUpperCase = true;\n    } else if (char >= 'a' && char \u003C= 'z') {\n      hasLowerCase = true;\n    } else if (char >= '0' && char \u003C= '9') {\n      hasNumber = true;\n    } else {\n      hasSpecial = true;\n    }\n  }\n  \n  // 各条件をチェック\n  if (!hasUpperCase) {\n    isValid = false;\n    errorMessage = \"大文字が含まれていません。\";\n  } else if (!hasLowerCase) {\n    isValid = false;\n    errorMessage = \"小文字が含まれていません。\";\n  } else if (!hasNumber) {\n    isValid = false;\n    errorMessage = \"数字が含まれていません。\";\n  } else if (!hasSpecial) {\n    isValid = false;\n    errorMessage = \"特殊文字が含まれていません。\";\n  }\n}\n\n// 結果を表示\nif (isValid) {\n  console.log(\"パスワードは有効です。\");\n} else {\n  console.log(\"パスワードが無効です: \" + errorMessage);\n}\n// 出力: パスワードが無効です: パスワードは8文字以上必要です。\n```\n\nこの例では：\n- **if文**：パスワードの長さや各種条件を満たしているかの判定\n- **for文**：パスワードの各文字を順番にチェック\n\n## if文とfor文を組み合わせる際のよくある間違い\n\n初心者がよく混乱するポイントとして、if文とfor文の組み合わせ方があります。以下によくある間違いと修正例を示します。\n\n### 間違い1：条件分岐と繰り返しの混同\n\n```javascript\n// 間違った例\nlet number = 5;\nif (number \u003C 10) {\n  for (let i = 0; i \u003C number; i++) {\n    console.log(i);\n  }\n}\n```\n\nこの例では問題ありませんが、初心者は「number \u003C 10」という条件を繰り返しの条件と混同してしまうことがあります。\n\n### 間違い2：ループ内での条件変更\n\n```javascript\n// 間違った例\nfor (let i = 0; i \u003C 10; i++) {\n  if (i === 5) {\n    i = 10; // ループを「抜ける」つもりで書いている\n  }\n  console.log(i);\n}\n\n// 正しい例（ループを抜ける場合）\nfor (let i = 0; i \u003C 10; i++) {\n  if (i === 5) {\n    break; // breakを使ってループを抜ける\n  }\n  console.log(i);\n}\n```\n\n### 間違い3：不要なループ\n\n```javascript\n// 非効率な例\nlet age = 25;\nfor (let i = 0; i \u003C 1; i++) { // 1回しか実行されないループは不要\n  if (age >= 20) {\n    console.log(\"成人です。\");\n  } else {\n    console.log(\"未成年です。\");\n  }\n}\n\n// 正しい例\nlet age = 25;\nif (age >= 20) {\n  console.log(\"成人です。\");\n} else {\n  console.log(\"未成年です。\");\n}\n```\n\n## if文とfor文の使い分け方\n\nif文とfor文をいつ使うべきかを判断するためのガイドラインを紹介します：\n\n### if文を使うべき場合\n\n1. **条件に基づいて処理を分岐させたいとき**\n   - ユーザーの入力が有効かどうかをチェックする\n   - 年齢に応じて異なるメッセージを表示する\n   - ログイン状態に応じて表示内容を変える\n\n2. **エラーハンドリングを行いたいとき**\n   - ファイルが存在するかチェックしてから開く\n   - ネットワーク接続が成功したかどうかを確認する\n\n3. **特定の条件を満たす場合のみ処理を実行したいとき**\n   - 管理者のみが特定の機能を使えるようにする\n   - 残高が十分ある場合のみ取引を実行する\n\n### for文を使うべき場合\n\n1. **同じ処理を複数回実行したいとき**\n   - 1から10までの数字を表示する\n   - 特定のメッセージを5回表示する\n\n2. **配列やリストの各要素に対して処理を行いたいとき**\n   - ユーザーリストの全員に通知を送る\n   - 商品リストの各アイテムを表示する\n\n3. **特定の回数または条件を満たすまで処理を繰り返したいとき**\n   - ファイルの各行を読み込む\n   - ユーザーが正しい入力をするまで繰り返し質問する\n\n## 実践的な例：ショッピングカートプログラム\n\n最後に、if文とfor文を組み合わせた実践的な例として、シンプルなショッピングカートプログラムを見てみましょう。\n\n```javascript\n// 商品データ\nconst products = [\n  { id: 1, name: \"Tシャツ\", price: 2500, stock: 10 },\n  { id: 2, name: \"ジーンズ\", price: 5000, stock: 5 },\n  { id: 3, name: \"スニーカー\", price: 8000, stock: 3 },\n  { id: 4, name: \"帽子\", price: 1500, stock: 0 }\n];\n\n// ショッピングカート\nconst cart = [\n  { productId: 1, quantity: 2 },\n  { productId: 3, quantity: 1 }\n];\n\n// 合計金額を計算する関数\nfunction calculateTotal() {\n  let total = 0;\n  \n  // for文: カート内の各商品をループ\n  for (let i = 0; i \u003C cart.length; i++) {\n    const cartItem = cart[i];\n    \n    // for文: 商品データから対応する商品を検索\n    for (let j = 0; j \u003C products.length; j++) {\n      const product = products[j];\n      \n      // if文: 商品IDが一致するかチェック\n      if (cartItem.productId === product.id) {\n        // if文: 在庫があるかチェック\n        if (product.stock >= cartItem.quantity) {\n          // 在庫がある場合は金額を加算\n          total += product.price * cartItem.quantity;\n          console.log(`${product.name} x ${cartItem.quantity}: ${product.price * cartItem.quantity}円`);\n        } else if (product.stock > 0) {\n          // 在庫が足りない場合は利用可能な分だけ加算\n          total += product.price * product.stock;\n          console.log(`${product.name} x ${product.stock}（在庫不足）: ${product.price * product.stock}円`);\n        } else {\n          // 在庫がない場合はメッセージを表示\n          console.log(`${product.name}: 在庫切れ`);\n        }\n        break; // 商品が見つかったらループを抜ける\n      }\n    }\n  }\n  \n  return total;\n}\n\n// 合計金額を計算して表示\nconst totalAmount = calculateTotal();\nconsole.log(`合計金額: ${totalAmount}円`);\n\n// 出力:\n// Tシャツ x 2: 5000円\n// スニーカー x 1: 8000円\n// 合計金額: 13000円\n```\n\nこの例では：\n- **外側のfor文**：ショッピングカート内の各商品をループ\n- **内側のfor文**：商品データから対応する商品を検索\n- **if文（商品ID）**：カート内の商品と商品データを照合\n- **if文（在庫チェック）**：商品の在庫状況に応じて処理を分岐\n\n## まとめ\n\nこの記事では、if文とfor文の基本的な違いと使い方について解説しました。\n\n- **if文**は条件分岐のための構文で、「もし〜なら、これをする」という判断を行います。\n- **for文**は繰り返しのための構文で、「これを〜回繰り返す」という反復を行います。\n\n両者は異なる目的を持ちますが、組み合わせることで複雑な処理を実現できます。プログラミングを学ぶ上で、これらの基本的な制御構文を理解することは非常に重要です。\n\n実際のコードを書く際は、「条件によって処理を変えたいのか」それとも「同じ処理を繰り返したいのか」を考えて、適切な構文を選択しましょう。練習を重ねるうちに、自然と使い分けられるようになります。\n\n次回は、配列やオブジェクトの操作方法について詳しく解説する予定です。お楽しみに！","src/content/blog/if-for-difference-explained.md","2252ad0683a7c786",{"html":376,"metadata":377},"\u003Ch1 id=\"初心者向けif文とfor文の違いをわかりやすく解説\">【初心者向け】if文とfor文の違いをわかりやすく解説\u003C/h1>\n\u003Cp>プログラミングを学び始めると必ず出会う「if文」と「for文」。これらは最も基本的な制御構文ですが、初心者の方にとっては混乱しやすいポイントでもあります。この記事では、if文とfor文の違いを具体例を交えてわかりやすく解説します。\u003C/p>\n\u003Ch2 id=\"if文とfor文の基本的な違い\">if文とfor文の基本的な違い\u003C/h2>\n\u003Cp>まず、if文とfor文の基本的な違いを簡潔に説明します：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>if文\u003C/strong>：「条件分岐」のための構文。特定の条件が満たされたときだけ、処理を実行します。\u003C/li>\n\u003Cli>\u003Cstrong>for文\u003C/strong>：「繰り返し」のための構文。同じ処理を決められた回数だけ繰り返し実行します。\u003C/li>\n\u003C/ul>\n\u003Cp>つまり、if文は「もし〜なら、これをする」という判断を行い、for文は「これを〜回繰り返す」という反復を行います。\u003C/p>\n\u003Ch2 id=\"if文の基本\">if文の基本\u003C/h2>\n\u003Ch3 id=\"if文の構文\">if文の構文\u003C/h3>\n\u003Cp>if文の基本的な構文は以下のようになります：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (条件) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 条件が true のときに実行される処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (別の条件) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 最初の条件が false で、別の条件が true のときに実行される処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // すべての条件が false のときに実行される処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"if文の具体例\">if文の具体例\u003C/h3>\n\u003Cp>例えば、ユーザーの年齢に応じて異なるメッセージを表示するプログラムを考えてみましょう：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (age \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">未成年です。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (age \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 65\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">成人です。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">シニアです。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力: 成人です。\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>この例では：\u003C/p>\n\u003Col>\n\u003Cli>まず \u003Ccode>age &#x3C; 20\u003C/code> という条件をチェック（falseなので次へ）\u003C/li>\n\u003Cli>次に \u003Ccode>age &#x3C; 65\u003C/code> という条件をチェック（trueなので対応する処理を実行）\u003C/li>\n\u003Cli>「成人です。」というメッセージが表示される\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"if文のよくある使い方\">if文のよくある使い方\u003C/h3>\n\u003Cp>if文は以下のようなシチュエーションでよく使われます：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>ユーザー入力の検証\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> userInput \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; \u003C/span>\u003Cspan style=\"color:#6272A4\">// ユーザーが何も入力しなかった場合\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (userInput \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">入力が必要です。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">入力を受け付けました。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>権限チェック\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> isAdmin \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (isAdmin) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">管理者メニューを表示\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">一般ユーザーメニューを表示\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>エラーハンドリング\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> success \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (success) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">処理が成功しました。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">エラーが発生しました。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"for文の基本\">for文の基本\u003C/h2>\n\u003Ch3 id=\"for文の構文\">for文の構文\u003C/h3>\n\u003Cp>for文の基本的な構文は以下のようになります：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (初期化; 条件; 更新) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 条件が true の間、繰り返し実行される処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>各部分の役割は：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>初期化\u003C/strong>：ループの開始前に1回だけ実行される（通常はカウンター変数の初期化）\u003C/li>\n\u003Cli>\u003Cstrong>条件\u003C/strong>：各繰り返しの前にチェックされ、trueならループを続行、falseなら終了\u003C/li>\n\u003Cli>\u003Cstrong>更新\u003C/strong>：各繰り返しの最後に実行される（通常はカウンター変数の更新）\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"for文の具体例\">for文の具体例\u003C/h3>\n\u003Cp>1から5までの数字を順番に表示するプログラムを考えてみましょう：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(i);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 3\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 4\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 5\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>この例では：\u003C/p>\n\u003Col>\n\u003Cli>\u003Ccode>let i = 1\u003C/code> でカウンター変数を初期化\u003C/li>\n\u003Cli>\u003Ccode>i &#x3C;= 5\u003C/code> という条件をチェック（trueなのでループ内の処理を実行）\u003C/li>\n\u003Cli>\u003Ccode>console.log(i)\u003C/code> で現在の i の値を表示\u003C/li>\n\u003Cli>\u003Ccode>i++\u003C/code> で i の値を1増やす\u003C/li>\n\u003Cli>再び条件をチェックして、trueなら3と4を繰り返す\u003C/li>\n\u003Cli>i が6になると条件がfalseになり、ループが終了\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"for文のよくある使い方\">for文のよくある使い方\u003C/h3>\n\u003Cp>for文は以下のようなシチュエーションでよく使われます：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>配列の要素を処理する\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> fruits \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">りんご\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">バナナ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">オレンジ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> fruits.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(fruits[i]);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// りんご\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// バナナ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// オレンジ\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>特定回数の処理を実行する\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">この処理は3回実行されます。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>テーブルや表を生成する\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> table \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> j \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; j \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; j\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    table \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> j \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#FF79C6\">\\t\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  table \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#FF79C6\">\\n\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(table);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 1    2    3    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 2    4    6    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 3    6    9    \u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"if文とfor文の違いを理解するための具体例\">if文とfor文の違いを理解するための具体例\u003C/h2>\n\u003Ch3 id=\"例1成績判定プログラム\">例1：成績判定プログラム\u003C/h3>\n\u003Cp>クラスの生徒の点数を処理するプログラムを考えてみましょう。if文は各生徒の成績を判定し、for文はクラス全員の点数を処理します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 生徒の点数リスト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">85\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">45\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">92\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">78\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">60\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// for文を使って全生徒の点数を処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> score \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores[i];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // if文を使って各生徒の成績を判定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 90\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`生徒\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">の点数は\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">score\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">点で、評価はAです。`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 80\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`生徒\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">の点数は\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">score\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">点で、評価はBです。`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 70\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`生徒\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">の点数は\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">score\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">点で、評価はCです。`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 60\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`生徒\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">の点数は\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">score\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">点で、評価はDです。`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`生徒\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">の点数は\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">score\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">点で、評価はFです。`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 生徒1の点数は85点で、評価はBです。\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 生徒2の点数は45点で、評価はFです。\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 生徒3の点数は92点で、評価はAです。\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 生徒4の点数は78点で、評価はCです。\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 生徒5の点数は60点で、評価はDです。\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>この例では：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>for文\u003C/strong>：生徒の点数リスト全体をループ処理\u003C/li>\n\u003Cli>\u003Cstrong>if文\u003C/strong>：各生徒の点数に応じて適切な評価を判定\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"例2パスワード検証プログラム\">例2：パスワード検証プログラム\u003C/h3>\n\u003Cp>ユーザーが入力したパスワードが条件を満たしているかチェックするプログラムを考えてみましょう。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> password \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Abc123!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> isValid \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> errorMessage \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// パスワードの長さをチェック\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (password.length \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 8\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  isValid \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  errorMessage \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">パスワードは8文字以上必要です。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 各文字をチェックするためのフラグ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> hasUpperCase \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> hasLowerCase \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> hasNumber \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> hasSpecial \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // for文を使って各文字をチェック\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> password.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> char \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> password[i];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (char \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">A\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> char \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Z\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      hasUpperCase \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (char \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">a\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> char \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">z\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      hasLowerCase \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (char \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">0\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> char \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">9\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      hasNumber \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      hasSpecial \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 各条件をチェック\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">hasUpperCase) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    isValid \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    errorMessage \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">大文字が含まれていません。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">hasLowerCase) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    isValid \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    errorMessage \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">小文字が含まれていません。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">hasNumber) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    isValid \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    errorMessage \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">数字が含まれていません。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">hasSpecial) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    isValid \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    errorMessage \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">特殊文字が含まれていません。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 結果を表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (isValid) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">パスワードは有効です。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">パスワードが無効です: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\"> +\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> errorMessage);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力: パスワードが無効です: パスワードは8文字以上必要です。\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>この例では：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>if文\u003C/strong>：パスワードの長さや各種条件を満たしているかの判定\u003C/li>\n\u003Cli>\u003Cstrong>for文\u003C/strong>：パスワードの各文字を順番にチェック\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"if文とfor文を組み合わせる際のよくある間違い\">if文とfor文を組み合わせる際のよくある間違い\u003C/h2>\n\u003Cp>初心者がよく混乱するポイントとして、if文とfor文の組み合わせ方があります。以下によくある間違いと修正例を示します。\u003C/p>\n\u003Ch3 id=\"間違い1条件分岐と繰り返しの混同\">間違い1：条件分岐と繰り返しの混同\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 間違った例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> number \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (number \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> number; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(i);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>この例では問題ありませんが、初心者は「number &#x3C; 10」という条件を繰り返しの条件と混同してしまうことがあります。\u003C/p>\n\u003Ch3 id=\"間違い2ループ内での条件変更\">間違い2：ループ内での条件変更\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 間違った例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (i \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; \u003C/span>\u003Cspan style=\"color:#6272A4\">// ループを「抜ける」つもりで書いている\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(i);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい例（ループを抜ける場合）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (i \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; \u003C/span>\u003Cspan style=\"color:#6272A4\">// breakを使ってループを抜ける\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(i);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"間違い3不要なループ\">間違い3：不要なループ\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 非効率な例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) { \u003C/span>\u003Cspan style=\"color:#6272A4\">// 1回しか実行されないループは不要\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">成人です。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">未成年です。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">成人です。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">未成年です。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"if文とfor文の使い分け方\">if文とfor文の使い分け方\u003C/h2>\n\u003Cp>if文とfor文をいつ使うべきかを判断するためのガイドラインを紹介します：\u003C/p>\n\u003Ch3 id=\"if文を使うべき場合\">if文を使うべき場合\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>条件に基づいて処理を分岐させたいとき\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>ユーザーの入力が有効かどうかをチェックする\u003C/li>\n\u003Cli>年齢に応じて異なるメッセージを表示する\u003C/li>\n\u003Cli>ログイン状態に応じて表示内容を変える\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>エラーハンドリングを行いたいとき\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>ファイルが存在するかチェックしてから開く\u003C/li>\n\u003Cli>ネットワーク接続が成功したかどうかを確認する\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>特定の条件を満たす場合のみ処理を実行したいとき\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>管理者のみが特定の機能を使えるようにする\u003C/li>\n\u003Cli>残高が十分ある場合のみ取引を実行する\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"for文を使うべき場合\">for文を使うべき場合\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>同じ処理を複数回実行したいとき\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>1から10までの数字を表示する\u003C/li>\n\u003Cli>特定のメッセージを5回表示する\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>配列やリストの各要素に対して処理を行いたいとき\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>ユーザーリストの全員に通知を送る\u003C/li>\n\u003Cli>商品リストの各アイテムを表示する\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>特定の回数または条件を満たすまで処理を繰り返したいとき\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>ファイルの各行を読み込む\u003C/li>\n\u003Cli>ユーザーが正しい入力をするまで繰り返し質問する\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"実践的な例ショッピングカートプログラム\">実践的な例：ショッピングカートプログラム\u003C/h2>\n\u003Cp>最後に、if文とfor文を組み合わせた実践的な例として、シンプルなショッピングカートプログラムを見てみましょう。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 商品データ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Tシャツ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2500\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, stock\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ジーンズ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, stock\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">スニーカー\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 8000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, stock\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">帽子\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1500\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, stock\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ショッピングカート\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> cart \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { productId\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, quantity\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { productId\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, quantity\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 合計金額を計算する関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // for文: カート内の各商品をループ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> cart.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> cartItem \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> cart[i];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // for文: 商品データから対応する商品を検索\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> j \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; j \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products.length; j\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">      const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> product \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products[j];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">      // if文: 商品IDが一致するかチェック\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">      if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (cartItem.productId \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> product.id) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // if文: 在庫があるかチェック\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (product.stock \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> cartItem.quantity) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">          // 在庫がある場合は金額を加算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">          total \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> product.price \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> cartItem.quantity;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">          console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">product.name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> x \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">cartItem.quantity\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">product.price\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> cartItem.quantity\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">円`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (product.stock \u003C/span>\u003Cspan style=\"color:#FF79C6\">>\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">          // 在庫が足りない場合は利用可能な分だけ加算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">          total \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> product.price \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> product.stock;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">          console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">product.name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> x \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">product.stock\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">（在庫不足）: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">product.price\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> product.stock\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">円`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">          // 在庫がない場合はメッセージを表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">          console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">product.name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">: 在庫切れ`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; \u003C/span>\u003Cspan style=\"color:#6272A4\">// 商品が見つかったらループを抜ける\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 合計金額を計算して表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> totalAmount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`合計金額: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">totalAmount\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">円`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// Tシャツ x 2: 5000円\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// スニーカー x 1: 8000円\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 合計金額: 13000円\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>この例では：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>外側のfor文\u003C/strong>：ショッピングカート内の各商品をループ\u003C/li>\n\u003Cli>\u003Cstrong>内側のfor文\u003C/strong>：商品データから対応する商品を検索\u003C/li>\n\u003Cli>\u003Cstrong>if文（商品ID）\u003C/strong>：カート内の商品と商品データを照合\u003C/li>\n\u003Cli>\u003Cstrong>if文（在庫チェック）\u003C/strong>：商品の在庫状況に応じて処理を分岐\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>この記事では、if文とfor文の基本的な違いと使い方について解説しました。\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>if文\u003C/strong>は条件分岐のための構文で、「もし〜なら、これをする」という判断を行います。\u003C/li>\n\u003Cli>\u003Cstrong>for文\u003C/strong>は繰り返しのための構文で、「これを〜回繰り返す」という反復を行います。\u003C/li>\n\u003C/ul>\n\u003Cp>両者は異なる目的を持ちますが、組み合わせることで複雑な処理を実現できます。プログラミングを学ぶ上で、これらの基本的な制御構文を理解することは非常に重要です。\u003C/p>\n\u003Cp>実際のコードを書く際は、「条件によって処理を変えたいのか」それとも「同じ処理を繰り返したいのか」を考えて、適切な構文を選択しましょう。練習を重ねるうちに、自然と使い分けられるようになります。\u003C/p>\n\u003Cp>次回は、配列やオブジェクトの操作方法について詳しく解説する予定です。お楽しみに！\u003C/p>",{"headings":378,"imagePaths":428,"frontmatter":429},[379,381,383,385,387,389,391,393,395,397,399,401,404,407,409,412,415,418,420,422,424,427],{"depth":26,"slug":380,"text":368},"初心者向けif文とfor文の違いをわかりやすく解説",{"depth":29,"slug":382,"text":382},"if文とfor文の基本的な違い",{"depth":29,"slug":384,"text":384},"if文の基本",{"depth":33,"slug":386,"text":386},"if文の構文",{"depth":33,"slug":388,"text":388},"if文の具体例",{"depth":33,"slug":390,"text":390},"if文のよくある使い方",{"depth":29,"slug":392,"text":392},"for文の基本",{"depth":33,"slug":394,"text":394},"for文の構文",{"depth":33,"slug":396,"text":396},"for文の具体例",{"depth":33,"slug":398,"text":398},"for文のよくある使い方",{"depth":29,"slug":400,"text":400},"if文とfor文の違いを理解するための具体例",{"depth":33,"slug":402,"text":403},"例1成績判定プログラム","例1：成績判定プログラム",{"depth":33,"slug":405,"text":406},"例2パスワード検証プログラム","例2：パスワード検証プログラム",{"depth":29,"slug":408,"text":408},"if文とfor文を組み合わせる際のよくある間違い",{"depth":33,"slug":410,"text":411},"間違い1条件分岐と繰り返しの混同","間違い1：条件分岐と繰り返しの混同",{"depth":33,"slug":413,"text":414},"間違い2ループ内での条件変更","間違い2：ループ内での条件変更",{"depth":33,"slug":416,"text":417},"間違い3不要なループ","間違い3：不要なループ",{"depth":29,"slug":419,"text":419},"if文とfor文の使い分け方",{"depth":33,"slug":421,"text":421},"if文を使うべき場合",{"depth":33,"slug":423,"text":423},"for文を使うべき場合",{"depth":29,"slug":425,"text":426},"実践的な例ショッピングカートプログラム","実践的な例：ショッピングカートプログラム",{"depth":29,"slug":145,"text":145},[],{"title":368,"description":369,"pubDate":430,"heroImage":371},"Mar 3 2025","if-statement-guide",{"id":431,"data":433,"body":437,"filePath":438,"digest":439,"rendered":440},{"title":434,"description":435,"pubDate":436,"heroImage":155},"【入門】条件分岐(if文)を理解してロジックを組み立てよう","プログラミングの基本中の基本、if文による条件分岐の使い方を初心者向けにわかりやすく解説します。",["Date","2025-03-10T15:00:00.000Z"],"# 【入門】条件分岐(if文)を理解してロジックを組み立てよう\n\nプログラミングにおいて、条件に応じて処理を変えることは非常に重要です。この記事では、条件分岐の基本となるif文について、初心者にもわかりやすく解説します。\n\n## if文とは？\n\nif文は、「もし〜なら、これをする」という条件分岐を実現するための構文です。日常生活でも私たちは常に条件分岐を行っています：\n\n- もし雨が降っているなら、傘を持っていく\n- もし財布を忘れたなら、家に取りに戻る\n- もし電車が遅れているなら、別のルートを検討する\n\nこれらと同じように、プログラムでも状況に応じて異なる処理を行いたい場合にif文を使用します。\n\n## if文の基本構文\n\nJavaScriptを例に、if文の基本的な書き方を見ていきましょう。\n\n### 1. 単純なif文\n\n```javascript\nif (条件) {\n    // 条件が真(true)の場合に実行される処理\n}\n```\n\n具体例：\n```javascript\nlet age = 20;\n\nif (age >= 20) {\n    console.log(\"成人です\");\n}\n```\n\n### 2. if-else文\n\n```javascript\nif (条件) {\n    // 条件が真(true)の場合に実行される処理\n} else {\n    // 条件が偽(false)の場合に実行される処理\n}\n```\n\n具体例：\n```javascript\nlet age = 18;\n\nif (age >= 20) {\n    console.log(\"成人です\");\n} else {\n    console.log(\"未成年です\");\n}\n```\n\n### 3. if-else if-else文\n\n```javascript\nif (条件1) {\n    // 条件1が真の場合の処理\n} else if (条件2) {\n    // 条件2が真の場合の処理\n} else {\n    // どの条件も満たさない場合の処理\n}\n```\n\n具体例：\n```javascript\nlet score = 85;\n\nif (score >= 90) {\n    console.log(\"評価：A\");\n} else if (score >= 80) {\n    console.log(\"評価：B\");\n} else if (score >= 70) {\n    console.log(\"評価：C\");\n} else {\n    console.log(\"評価：D\");\n}\n```\n\n## 条件式の書き方\n\n### 1. 比較演算子\n\n```javascript\n// 等しい\nif (x === y) {}\n\n// 等しくない\nif (x !== y) {}\n\n// より大きい\nif (x > y) {}\n\n// より小さい\nif (x \u003C y) {}\n\n// 以上\nif (x >= y) {}\n\n// 以下\nif (x \u003C= y) {}\n```\n\n### 2. 論理演算子\n\n```javascript\n// AND演算子（&&）：両方の条件が真\nif (age >= 20 && hasLicense) {\n    console.log(\"運転できます\");\n}\n\n// OR演算子（||）：どちらかの条件が真\nif (isHoliday || isWeekend) {\n    console.log(\"お休みです\");\n}\n\n// NOT演算子（!）：条件の否定\nif (!isWorking) {\n    console.log(\"仕事していません\");\n}\n```\n\n## 実践的な例\n\n### 1. ユーザー認証\n\n```javascript\nfunction checkLogin(username, password) {\n    if (username === \"\") {\n        return \"ユーザー名を入力してください\";\n    }\n    \n    if (password === \"\") {\n        return \"パスワードを入力してください\";\n    }\n    \n    if (username === \"admin\" && password === \"12345\") {\n        return \"ログイン成功！\";\n    } else {\n        return \"ユーザー名またはパスワードが間違っています\";\n    }\n}\n\nconsole.log(checkLogin(\"admin\", \"12345\")); // \"ログイン成功！\"\nconsole.log(checkLogin(\"admin\", \"wrong\")); // \"ユーザー名またはパスワードが間違っています\"\n```\n\n### 2. 商品の割引計算\n\n```javascript\nfunction calculateDiscount(price, quantity, isPremiumMember) {\n    let discount = 0;\n    \n    // 数量割引\n    if (quantity >= 10) {\n        discount = 0.1; // 10個以上で10%割引\n    } else if (quantity >= 5) {\n        discount = 0.05; // 5個以上で5%割引\n    }\n    \n    // プレミアム会員割引\n    if (isPremiumMember) {\n        discount += 0.05; // さらに5%追加割引\n    }\n    \n    // 最大割引率は20%まで\n    if (discount > 0.2) {\n        discount = 0.2;\n    }\n    \n    const finalPrice = price * quantity * (1 - discount);\n    return finalPrice;\n}\n\nconsole.log(calculateDiscount(1000, 6, true));  // 5700 (10%割引)\nconsole.log(calculateDiscount(1000, 3, false)); // 3000 (割引なし)\n```\n\n### 3. 成績判定\n\n```javascript\nfunction evaluateGrade(score) {\n    if (typeof score !== \"number\") {\n        return \"点数は数値で入力してください\";\n    }\n    \n    if (score \u003C 0 || score > 100) {\n        return \"点数は0から100の間で入力してください\";\n    }\n    \n    let grade;\n    let message;\n    \n    if (score >= 90) {\n        grade = \"A\";\n        message = \"素晴らしい成績です！\";\n    } else if (score >= 80) {\n        grade = \"B\";\n        message = \"良い成績です！\";\n    } else if (score >= 70) {\n        grade = \"C\";\n        message = \"合格です\";\n    } else if (score >= 60) {\n        grade = \"D\";\n        message = \"もう少し頑張りましょう\";\n    } else {\n        grade = \"F\";\n        message = \"不合格です。再挑戦してください\";\n    }\n    \n    return `評価：${grade} - ${message}`;\n}\n\nconsole.log(evaluateGrade(95));  // \"評価：A - 素晴らしい成績です！\"\nconsole.log(evaluateGrade(75));  // \"評価：C - 合格です\"\nconsole.log(evaluateGrade(50));  // \"評価：F - 不合格です。再挑戦してください\"\n```\n\n## よくある間違いと注意点\n\n### 1. 等価演算子の使い分け\n\n```javascript\n// 悪い例（型の変換が行われる）\nif (x == \"5\") {}\n\n// 良い例（型も含めて比較）\nif (x === \"5\") {}\n```\n\n### 2. ブロックの省略\n\n```javascript\n// 悪い例（バグの原因になりやすい）\nif (condition)\n    doSomething();\n    doSomethingElse(); // このコードは常に実行される\n\n// 良い例\nif (condition) {\n    doSomething();\n    doSomethingElse();\n}\n```\n\n### 3. 複雑な条件のネスト\n\n```javascript\n// 悪い例（ネストが深い）\nif (condition1) {\n    if (condition2) {\n        if (condition3) {\n            // 処理\n        }\n    }\n}\n\n// 良い例（早期リターン）\nif (!condition1) return;\nif (!condition2) return;\nif (!condition3) return;\n// 処理\n```\n\n## 条件分岐をシンプルに書くテクニック\n\n### 1. 三項演算子\n\nシンプルな条件分岐は三項演算子を使うと1行で書けます。\n\n```javascript\n// if文を使った場合\nlet message;\nif (age >= 20) {\n    message = \"成人\";\n} else {\n    message = \"未成年\";\n}\n\n// 三項演算子を使った場合\nlet message = age >= 20 ? \"成人\" : \"未成年\";\n```\n\n### 2. オブジェクトを使ったマッピング\n\n多くのif-elseを使う代わりに、オブジェクトでマッピングする方法もあります。\n\n```javascript\n// if文を使った場合\nfunction getDayName(dayNumber) {\n    if (dayNumber === 0) return \"日曜日\";\n    if (dayNumber === 1) return \"月曜日\";\n    if (dayNumber === 2) return \"火曜日\";\n    if (dayNumber === 3) return \"水曜日\";\n    if (dayNumber === 4) return \"木曜日\";\n    if (dayNumber === 5) return \"金曜日\";\n    if (dayNumber === 6) return \"土曜日\";\n    return \"不正な値です\";\n}\n\n// オブジェクトを使った場合\nconst dayNames = {\n    0: \"日曜日\",\n    1: \"月曜日\",\n    2: \"火曜日\",\n    3: \"水曜日\",\n    4: \"木曜日\",\n    5: \"金曜日\",\n    6: \"土曜日\"\n};\n\nfunction getDayName(dayNumber) {\n    return dayNames[dayNumber] || \"不正な値です\";\n}\n```\n\n### 3. 早期リターンパターン\n\n条件のネストを避けるために、条件を満たさない場合は早めにリターンする方法です。\n\n```javascript\n// ネストが深い例\nfunction processUser(user) {\n    if (user) {\n        if (user.isActive) {\n            if (user.hasPermission) {\n                // 処理\n                return \"処理成功\";\n            } else {\n                return \"権限がありません\";\n            }\n        } else {\n            return \"アカウントが無効です\";\n        }\n    } else {\n        return \"ユーザーが見つかりません\";\n    }\n}\n\n// 早期リターンを使った例\nfunction processUser(user) {\n    if (!user) return \"ユーザーが見つかりません\";\n    if (!user.isActive) return \"アカウントが無効です\";\n    if (!user.hasPermission) return \"権限がありません\";\n    \n    // 処理\n    return \"処理成功\";\n}\n```\n\n## 実践的な例：ショッピングカートの実装\n\n以下は、if文を使用したショッピングカートの実装例です：\n\n```javascript\nclass ShoppingCart {\n    constructor() {\n        this.items = [];\n        this.totalPrice = 0;\n    }\n    \n    addItem(item) {\n        // 入力値の検証\n        if (!item.name || !item.price) {\n            throw new Error(\"商品名と価格は必須です\");\n        }\n        \n        if (item.price \u003C 0) {\n            throw new Error(\"価格は0以上である必要があります\");\n        }\n        \n        // 既存の商品かチェック\n        const existingItem = this.items.find(i => i.name === item.name);\n        if (existingItem) {\n            existingItem.quantity += 1;\n        } else {\n            this.items.push({\n                ...item,\n                quantity: 1\n            });\n        }\n        \n        this.calculateTotal();\n    }\n    \n    removeItem(itemName) {\n        const index = this.items.findIndex(item => item.name === itemName);\n        if (index === -1) {\n            throw new Error(\"指定された商品が見つかりません\");\n        }\n        \n        this.items.splice(index, 1);\n        this.calculateTotal();\n    }\n    \n    calculateTotal() {\n        let total = 0;\n        \n        this.items.forEach(item => {\n            let price = item.price * item.quantity;\n            \n            // 数量割引の適用\n            if (item.quantity >= 5) {\n                price *= 0.9; // 5個以上で10%割引\n            }\n            \n            total += price;\n        });\n        \n        // 合計金額による割引\n        if (total >= 10000) {\n            total *= 0.95; // 10000円以上で5%割引\n        }\n        \n        this.totalPrice = Math.floor(total); // 小数点以下切り捨て\n    }\n    \n    getTotal() {\n        return this.totalPrice;\n    }\n    \n    getSummary() {\n        if (this.items.length === 0) {\n            return \"カートは空です\";\n        }\n        \n        let summary = \"カートの中身:\\n\";\n        this.items.forEach(item => {\n            summary += `${item.name}: ${item.price}円 × ${item.quantity}個\\n`;\n        });\n        summary += `合計: ${this.totalPrice}円`;\n        \n        return summary;\n    }\n}\n\n// 使用例\nconst cart = new ShoppingCart();\n\ntry {\n    cart.addItem({ name: \"りんご\", price: 200 });\n    cart.addItem({ name: \"りんご\", price: 200 });\n    cart.addItem({ name: \"バナナ\", price: 100 });\n    \n    console.log(cart.getSummary());\n    // 出力:\n    // カートの中身:\n    // りんご: 200円 × 2個\n    // バナナ: 100円 × 1個\n    // 合計: 500円\n    \n} catch (error) {\n    console.error(\"エラーが発生しました:\", error.message);\n}\n```\n\n## まとめ\n\nif文による条件分岐は、プログラミングの基本中の基本です。以下のポイントを押さえておきましょう：\n\n1. **基本構文を理解する**\n   - 単純なif文\n   - if-else文\n   - if-else if-else文\n\n2. **条件式の書き方を学ぶ**\n   - 比較演算子の使い方\n   - 論理演算子の使い方\n   - 複合条件の作り方\n\n3. **実践的なテクニックを身につける**\n   - 三項演算子の活用\n   - オブジェクトによるマッピング\n   - 早期リターンパターン\n\n条件分岐は、プログラムの流れを制御する重要な要素です。基本をしっかり理解し、実践を重ねることで、より効率的で読みやすいコードが書けるようになります。\n\n## 次のステップ\n\n条件分岐の基本を理解したら、以下の記事も参考にしてください：\n\n- [【基礎から学ぶ】関数の作り方と使い方を徹底解説](/blog/function-basics-guide/)\n- [プログラミング初心者が最初に学ぶべき5つの概念](/blog/programming-concepts-for-beginners/)\n- [【図解】アルゴリズムとは？初心者が知るべき基本概念](/blog/algorithm-basics-explained/)","src/content/blog/if-statement-guide.md","da3db6b1de0b31c2",{"html":441,"metadata":442},"\u003Ch1 id=\"入門条件分岐if文を理解してロジックを組み立てよう\">【入門】条件分岐(if文)を理解してロジックを組み立てよう\u003C/h1>\n\u003Cp>プログラミングにおいて、条件に応じて処理を変えることは非常に重要です。この記事では、条件分岐の基本となるif文について、初心者にもわかりやすく解説します。\u003C/p>\n\u003Ch2 id=\"if文とは\">if文とは？\u003C/h2>\n\u003Cp>if文は、「もし〜なら、これをする」という条件分岐を実現するための構文です。日常生活でも私たちは常に条件分岐を行っています：\u003C/p>\n\u003Cul>\n\u003Cli>もし雨が降っているなら、傘を持っていく\u003C/li>\n\u003Cli>もし財布を忘れたなら、家に取りに戻る\u003C/li>\n\u003Cli>もし電車が遅れているなら、別のルートを検討する\u003C/li>\n\u003C/ul>\n\u003Cp>これらと同じように、プログラムでも状況に応じて異なる処理を行いたい場合にif文を使用します。\u003C/p>\n\u003Ch2 id=\"if文の基本構文\">if文の基本構文\u003C/h2>\n\u003Cp>JavaScriptを例に、if文の基本的な書き方を見ていきましょう。\u003C/p>\n\u003Ch3 id=\"1-単純なif文\">1. 単純なif文\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (条件) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 条件が真(true)の場合に実行される処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>具体例：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">成人です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-if-else文\">2. if-else文\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (条件) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 条件が真(true)の場合に実行される処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 条件が偽(false)の場合に実行される処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>具体例：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 18\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">成人です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">未成年です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-if-else-if-else文\">3. if-else if-else文\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (条件1) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 条件1が真の場合の処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (条件2) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 条件2が真の場合の処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // どの条件も満たさない場合の処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>具体例：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> score \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 85\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 90\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">評価：A\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 80\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">評価：B\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 70\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">評価：C\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">評価：D\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"条件式の書き方\">条件式の書き方\u003C/h2>\n\u003Ch3 id=\"1-比較演算子\">1. 比較演算子\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 等しい\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (x \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> y) {}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 等しくない\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (x \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> y) {}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// より大きい\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (x \u003C/span>\u003Cspan style=\"color:#FF79C6\">>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> y) {}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// より小さい\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (x \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> y) {}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 以上\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (x \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> y) {}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 以下\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (x \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> y) {}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-論理演算子\">2. 論理演算子\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// AND演算子（&#x26;&#x26;）：両方の条件が真\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#FF79C6\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> hasLicense) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">運転できます\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// OR演算子（||）：どちらかの条件が真\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (isHoliday \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> isWeekend) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">お休みです\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// NOT演算子（!）：条件の否定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">isWorking) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">仕事していません\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"実践的な例\">実践的な例\u003C/h2>\n\u003Ch3 id=\"1-ユーザー認証\">1. ユーザー認証\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> checkLogin\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">username\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">password\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (username \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ユーザー名を入力してください\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (password \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">パスワードを入力してください\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (username \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">admin\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> password \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">12345\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ログイン成功！\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ユーザー名またはパスワードが間違っています\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">checkLogin\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">admin\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">12345\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)); \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"ログイン成功！\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">checkLogin\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">admin\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">wrong\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)); \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"ユーザー名またはパスワードが間違っています\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-商品の割引計算\">2. 商品の割引計算\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateDiscount\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">price\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">quantity\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">isPremiumMember\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 数量割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (quantity \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; \u003C/span>\u003Cspan style=\"color:#6272A4\">// 10個以上で10%割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (quantity \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.05\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; \u003C/span>\u003Cspan style=\"color:#6272A4\">// 5個以上で5%割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // プレミアム会員割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (isPremiumMember) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.05\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; \u003C/span>\u003Cspan style=\"color:#6272A4\">// さらに5%追加割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 最大割引率は20%まで\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">>\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> finalPrice \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> price \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> quantity \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#FF79C6\"> -\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> discount);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> finalPrice;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">calculateDiscount\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">1000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">6\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 5700 (10%割引)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">calculateDiscount\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">1000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)); \u003C/span>\u003Cspan style=\"color:#6272A4\">// 3000 (割引なし)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-成績判定\">3. 成績判定\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> evaluateGrade\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">score\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">typeof\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> score \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">number\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">点数は数値で入力してください\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ||\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">点数は0から100の間で入力してください\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> grade;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 90\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        grade \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">A\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">素晴らしい成績です！\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 80\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        grade \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">B\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">良い成績です！\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 70\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        grade \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">C\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">合格です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 60\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        grade \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">D\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">もう少し頑張りましょう\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        grade \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">F\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">不合格です。再挑戦してください\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `評価：\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">grade\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> - \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">message\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">evaluateGrade\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">95\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"評価：A - 素晴らしい成績です！\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">evaluateGrade\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">75\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"評価：C - 合格です\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">evaluateGrade\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">50\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"評価：F - 不合格です。再挑戦してください\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"よくある間違いと注意点\">よくある間違いと注意点\u003C/h2>\n\u003Ch3 id=\"1-等価演算子の使い分け\">1. 等価演算子の使い分け\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例（型の変換が行われる）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (x \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">5\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例（型も含めて比較）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (x \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">5\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-ブロックの省略\">2. ブロックの省略\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例（バグの原因になりやすい）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (condition)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    doSomething\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    doSomethingElse\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(); \u003C/span>\u003Cspan style=\"color:#6272A4\">// このコードは常に実行される\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (condition) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    doSomething\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    doSomethingElse\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-複雑な条件のネスト\">3. 複雑な条件のネスト\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例（ネストが深い）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (condition1) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (condition2) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (condition3) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // 処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例（早期リターン）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">condition1) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">condition2) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">condition3) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 処理\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"条件分岐をシンプルに書くテクニック\">条件分岐をシンプルに書くテクニック\u003C/h2>\n\u003Ch3 id=\"1-三項演算子\">1. 三項演算子\u003C/h3>\n\u003Cp>シンプルな条件分岐は三項演算子を使うと1行で書けます。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// if文を使った場合\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">成人\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">未成年\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 三項演算子を使った場合\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ?\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">成人\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\"> :\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">未成年\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-オブジェクトを使ったマッピング\">2. オブジェクトを使ったマッピング\u003C/h3>\n\u003Cp>多くのif-elseを使う代わりに、オブジェクトでマッピングする方法もあります。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// if文を使った場合\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getDayName\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">dayNumber\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (dayNumber \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">日曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (dayNumber \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">月曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (dayNumber \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">火曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (dayNumber \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">水曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (dayNumber \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">木曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (dayNumber \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">金曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (dayNumber \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 6\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">土曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">不正な値です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// オブジェクトを使った場合\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> dayNames \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">    0\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">日曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">    1\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">月曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">    2\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">火曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">    3\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">水曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">    4\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">木曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">    5\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">金曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">    6\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">土曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getDayName\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">dayNumber\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> dayNames[dayNumber] \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">不正な値です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-早期リターンパターン\">3. 早期リターンパターン\u003C/h3>\n\u003Cp>条件のネストを避けるために、条件を満たさない場合は早めにリターンする方法です。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ネストが深い例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> processUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">user\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (user) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (user.isActive) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (user.hasPermission) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">                // 処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">処理成功\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">権限がありません\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">アカウントが無効です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ユーザーが見つかりません\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 早期リターンを使った例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> processUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">user\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">user) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ユーザーが見つかりません\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">user.isActive) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">アカウントが無効です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">user.hasPermission) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">権限がありません\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">処理成功\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"実践的な例ショッピングカートの実装\">実践的な例：ショッピングカートの実装\u003C/h2>\n\u003Cp>以下は、if文を使用したショッピングカートの実装例です：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> ShoppingCart\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    constructor\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.items \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.totalPrice \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    addItem\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">item\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // 入力値の検証\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">item.name \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#FF79C6\"> !\u003C/span>\u003Cspan style=\"color:#F8F8F2\">item.price) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            throw\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">商品名と価格は必須です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (item.price \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            throw\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">価格は0以上である必要があります\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // 既存の商品かチェック\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> existingItem \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.items.\u003C/span>\u003Cspan style=\"color:#50FA7B\">find\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i.name \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> item.name);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (existingItem) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            existingItem.quantity \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.items.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                ...\u003C/span>\u003Cspan style=\"color:#F8F8F2\">item,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                quantity\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    removeItem\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">itemName\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> index \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.items.\u003C/span>\u003Cspan style=\"color:#50FA7B\">findIndex\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">item\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> item.name \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> itemName);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (index \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#FF79C6\"> -\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            throw\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">指定された商品が見つかりません\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.items.\u003C/span>\u003Cspan style=\"color:#50FA7B\">splice\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(index, \u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.items.\u003C/span>\u003Cspan style=\"color:#50FA7B\">forEach\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">item\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> price \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> item.price \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> item.quantity;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // 数量割引の適用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (item.quantity \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                price \u003C/span>\u003Cspan style=\"color:#FF79C6\">*=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.9\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; \u003C/span>\u003Cspan style=\"color:#6272A4\">// 5個以上で10%割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            total \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> price;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // 合計金額による割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (total \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            total \u003C/span>\u003Cspan style=\"color:#FF79C6\">*=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.95\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; \u003C/span>\u003Cspan style=\"color:#6272A4\">// 10000円以上で5%割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.totalPrice \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Math.\u003C/span>\u003Cspan style=\"color:#50FA7B\">floor\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(total); \u003C/span>\u003Cspan style=\"color:#6272A4\">// 小数点以下切り捨て\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    getTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.totalPrice;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    getSummary\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.items.length \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">カートは空です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> summary \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">カートの中身:\u003C/span>\u003Cspan style=\"color:#FF79C6\">\\n\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.items.\u003C/span>\u003Cspan style=\"color:#50FA7B\">forEach\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">item\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            summary \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">item.name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">item.price\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">円 × \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">item.quantity\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">個\u003C/span>\u003Cspan style=\"color:#FF79C6\">\\n\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        summary \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `合計: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.totalPrice\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">円`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> summary;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 使用例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> cart \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> ShoppingCart\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">try\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    cart.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addItem\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">りんご\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 200\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    cart.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addItem\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">りんご\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 200\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    cart.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addItem\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">バナナ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(cart.\u003C/span>\u003Cspan style=\"color:#50FA7B\">getSummary\u003C/span>\u003Cspan style=\"color:#F8F8F2\">());\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 出力:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // カートの中身:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // りんご: 200円 × 2個\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // バナナ: 100円 × 1個\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 合計: 500円\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">エラーが発生しました:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, error.message);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>if文による条件分岐は、プログラミングの基本中の基本です。以下のポイントを押さえておきましょう：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>基本構文を理解する\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>単純なif文\u003C/li>\n\u003Cli>if-else文\u003C/li>\n\u003Cli>if-else if-else文\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>条件式の書き方を学ぶ\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>比較演算子の使い方\u003C/li>\n\u003Cli>論理演算子の使い方\u003C/li>\n\u003Cli>複合条件の作り方\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>実践的なテクニックを身につける\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>三項演算子の活用\u003C/li>\n\u003Cli>オブジェクトによるマッピング\u003C/li>\n\u003Cli>早期リターンパターン\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>条件分岐は、プログラムの流れを制御する重要な要素です。基本をしっかり理解し、実践を重ねることで、より効率的で読みやすいコードが書けるようになります。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>条件分岐の基本を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/function-basics-guide/\">【基礎から学ぶ】関数の作り方と使い方を徹底解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/algorithm-basics-explained/\">【図解】アルゴリズムとは？初心者が知るべき基本概念\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":443,"imagePaths":505,"frontmatter":506},[444,446,449,451,454,457,460,462,465,468,469,472,475,478,480,483,486,489,491,494,497,500,503,504],{"depth":26,"slug":445,"text":434},"入門条件分岐if文を理解してロジックを組み立てよう",{"depth":29,"slug":447,"text":448},"if文とは","if文とは？",{"depth":29,"slug":450,"text":450},"if文の基本構文",{"depth":33,"slug":452,"text":453},"1-単純なif文","1. 単純なif文",{"depth":33,"slug":455,"text":456},"2-if-else文","2. if-else文",{"depth":33,"slug":458,"text":459},"3-if-else-if-else文","3. if-else if-else文",{"depth":29,"slug":461,"text":461},"条件式の書き方",{"depth":33,"slug":463,"text":464},"1-比較演算子","1. 比較演算子",{"depth":33,"slug":466,"text":467},"2-論理演算子","2. 論理演算子",{"depth":29,"slug":350,"text":350},{"depth":33,"slug":470,"text":471},"1-ユーザー認証","1. ユーザー認証",{"depth":33,"slug":473,"text":474},"2-商品の割引計算","2. 商品の割引計算",{"depth":33,"slug":476,"text":477},"3-成績判定","3. 成績判定",{"depth":29,"slug":479,"text":479},"よくある間違いと注意点",{"depth":33,"slug":481,"text":482},"1-等価演算子の使い分け","1. 等価演算子の使い分け",{"depth":33,"slug":484,"text":485},"2-ブロックの省略","2. ブロックの省略",{"depth":33,"slug":487,"text":488},"3-複雑な条件のネスト","3. 複雑な条件のネスト",{"depth":29,"slug":490,"text":490},"条件分岐をシンプルに書くテクニック",{"depth":33,"slug":492,"text":493},"1-三項演算子","1. 三項演算子",{"depth":33,"slug":495,"text":496},"2-オブジェクトを使ったマッピング","2. オブジェクトを使ったマッピング",{"depth":33,"slug":498,"text":499},"3-早期リターンパターン","3. 早期リターンパターン",{"depth":29,"slug":501,"text":502},"実践的な例ショッピングカートの実装","実践的な例：ショッピングカートの実装",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":434,"description":435,"pubDate":507,"heroImage":155},"Mar 11 2025","object-oriented-programming-basics",{"id":508,"data":510,"body":515,"filePath":516,"digest":517,"rendered":518},{"title":511,"description":512,"pubDate":513,"heroImage":514},"オブジェクト指向って何？初心者向けに超ざっくり解説","プログラミング初心者のために、オブジェクト指向プログラミングの基本概念をわかりやすく解説します。",["Date","2025-03-03T15:00:00.000Z"],"/tech-blog/blog-placeholder-4.jpg","[前半部分は同じなので省略...]\n\n### 3. ポリモーフィズム（Polymorphism）\n\nポリモーフィズムとは、**異なるオブジェクトに対して共通のインターフェース（メソッド）を提供し、統一的な方法でアクセスできるようにすること**です。これにより、コードの再利用性が高まり、より柔軟なプログラミングが可能になります。\n\n例えば、さまざまな形状の面積を計算する場合：\n\n```javascript\n// 親クラス（共通のインターフェースを定義）\nclass Shape {\n  calculateArea() {\n    // 基本的な実装（子クラスで具体的な計算方法を提供）\n    return 0;\n  }\n}\n\n// 子クラス\nclass Circle extends Shape {\n  constructor(radius) {\n    super();\n    this.radius = radius;\n  }\n  \n  calculateArea() {\n    return Math.PI * this.radius * this.radius;\n  }\n}\n\n// 子クラス\nclass Rectangle extends Shape {\n  constructor(width, height) {\n    super();\n    this.width = width;\n    this.height = height;\n  }\n  \n  calculateArea() {\n    return this.width * this.height;\n  }\n}\n\n// 使用例\nconst shapes = [\n  new Circle(5),\n  new Rectangle(4, 6)\n];\n\n// 共通のインターフェース（calculateArea）を通じて\n// 各図形の面積を計算できる\nshapes.forEach(shape => {\n  console.log(`面積: ${shape.calculateArea()}`);\n});\n// 出力:\n// 面積: 78.53981633974483\n// 面積: 24\n```\n\nこの例では、`Shape`クラスが`calculateArea`という共通のインターフェースを定義し、`Circle`と`Rectangle`がそれぞれ独自の計算方法を提供しています。利用する側は、具体的なクラスの違いを意識することなく、同じインターフェースを通じて面積を計算できます。\n\nこれがポリモーフィズムの本質で、共通のインターフェースを通じて異なるオブジェクトを統一的に扱えることが重要なポイントです。\n\n[残りの部分は同じなので省略...]","src/content/blog/object-oriented-programming-basics.md","75efb9904fe88a94",{"html":519,"metadata":520},"\u003Cp>[前半部分は同じなので省略…]\u003C/p>\n\u003Ch3 id=\"3-ポリモーフィズムpolymorphism\">3. ポリモーフィズム（Polymorphism）\u003C/h3>\n\u003Cp>ポリモーフィズムとは、\u003Cstrong>異なるオブジェクトに対して共通のインターフェース（メソッド）を提供し、統一的な方法でアクセスできるようにすること\u003C/strong>です。これにより、コードの再利用性が高まり、より柔軟なプログラミングが可能になります。\u003C/p>\n\u003Cp>例えば、さまざまな形状の面積を計算する場合：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 親クラス（共通のインターフェースを定義）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> Shape\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  calculateArea\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 基本的な実装（子クラスで具体的な計算方法を提供）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 子クラス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> Circle\u003C/span>\u003Cspan style=\"color:#FF79C6\"> extends\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> Shape\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  constructor\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">radius\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    super\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.radius \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> radius;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  calculateArea\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Math.\u003C/span>\u003Cspan style=\"color:#BD93F9\">PI\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.radius \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.radius;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 子クラス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> Rectangle\u003C/span>\u003Cspan style=\"color:#FF79C6\"> extends\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> Shape\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  constructor\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">width\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">height\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    super\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.width \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> width;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.height \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> height;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  calculateArea\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.width \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.height;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 使用例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> shapes \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6;font-weight:bold\">  new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Circle\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6;font-weight:bold\">  new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Rectangle\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">6\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 共通のインターフェース（calculateArea）を通じて\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 各図形の面積を計算できる\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">shapes.\u003C/span>\u003Cspan style=\"color:#50FA7B\">forEach\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">shape\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`面積: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">shape.\u003C/span>\u003Cspan style=\"color:#50FA7B\">calculateArea\u003C/span>\u003Cspan style=\"color:#F8F8F2\">()\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 面積: 78.53981633974483\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 面積: 24\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>この例では、\u003Ccode>Shape\u003C/code>クラスが\u003Ccode>calculateArea\u003C/code>という共通のインターフェースを定義し、\u003Ccode>Circle\u003C/code>と\u003Ccode>Rectangle\u003C/code>がそれぞれ独自の計算方法を提供しています。利用する側は、具体的なクラスの違いを意識することなく、同じインターフェースを通じて面積を計算できます。\u003C/p>\n\u003Cp>これがポリモーフィズムの本質で、共通のインターフェースを通じて異なるオブジェクトを統一的に扱えることが重要なポイントです。\u003C/p>\n\u003Cp>[残りの部分は同じなので省略…]\u003C/p>",{"headings":521,"imagePaths":525,"frontmatter":526},[522],{"depth":33,"slug":523,"text":524},"3-ポリモーフィズムpolymorphism","3. ポリモーフィズム（Polymorphism）",[],{"title":511,"description":512,"pubDate":527,"heroImage":514},"Mar 4 2025","programming-concepts-for-beginners",{"id":528,"data":530,"body":535,"filePath":536,"digest":537,"rendered":538},{"title":531,"description":532,"pubDate":533,"heroImage":534},"プログラミング初心者が最初に学ぶべき5つの概念","プログラミングを始めたばかりの方が最初に理解すべき重要な5つの概念を解説します。",["Date","2025-02-28T15:00:00.000Z"],"/tech-blog/blog-placeholder-1.jpg","# プログラミング初心者が最初に学ぶべき5つの概念\n\nプログラミングを始めたばかりの方にとって、何から学べばいいのか迷うことが多いと思います。この記事では、プログラミング初心者が最初に理解しておくべき5つの重要な概念について解説します。これらの基礎をしっかり押さえることで、その後の学習がスムーズに進むでしょう。\n\n## 1. アルゴリズムの基本\n\n### アルゴリズムとは？\n\nアルゴリズムとは、問題を解決するための手順や方法のことです。料理のレシピや組み立て説明書のようなもので、ステップバイステップで目標を達成するための道筋を示します。\n\n### なぜ重要なのか？\n\nプログラミングの本質は「問題解決」です。アルゴリズム的思考を身につけることで、複雑な問題を小さな部分に分解し、効率的に解決する能力が養われます。\n\n### 簡単な例\n\n例えば、「1から10までの数字の合計を求める」というシンプルな問題を考えてみましょう。\n\n```javascript\n// アルゴリズム：\n// 1. 合計を保存する変数を0で初期化する\n// 2. 1から10まで順番に処理する\n// 3. 各数字を合計に加える\n// 4. 最終的な合計を表示する\n\nlet sum = 0;\nfor (let i = 1; i \u003C= 10; i++) {\n  sum += i;\n}\nconsole.log(\"合計: \" + sum);  // 合計: 55\n```\n\n## 2. 変数とデータ型\n\n### 変数とは？\n\n変数は、データを一時的に保存するための「箱」です。名前をつけて値を格納し、後で参照したり変更したりできます。\n\n### 主なデータ型\n\n- **数値型（Number）**: 整数や小数点を含む数値\n- **文字列型（String）**: テキストデータ\n- **論理型（Boolean）**: `true`または`false`の値\n- **配列（Array）**: 複数の値をまとめて管理するリスト\n- **オブジェクト（Object）**: 関連するデータと機能をまとめたもの\n\n### 例\n\n```javascript\n// 変数の宣言と代入\nlet age = 25;                 // 数値型\nlet name = \"鈴木一郎\";         // 文字列型\nlet isStudent = true;         // 論理型\nlet hobbies = [\"読書\", \"旅行\", \"料理\"];  // 配列\nlet person = {                // オブジェクト\n  name: \"佐藤花子\",\n  age: 30,\n  isMarried: false\n};\n```\n\n## 3. 制御構造\n\n制御構造は、プログラムの実行の流れを制御するための仕組みです。主に以下の3つがあります。\n\n### 条件分岐（if文、switch文）\n\n条件に応じて異なる処理を実行します。\n\n```javascript\n// if文の例\nlet time = 14;\n\nif (time \u003C 12) {\n  console.log(\"おはようございます！\");\n} else if (time \u003C 18) {\n  console.log(\"こんにちは！\");\n} else {\n  console.log(\"こんばんは！\");\n}\n// 出力: こんにちは！\n\n// switch文の例\nlet day = \"月曜日\";\n\nswitch (day) {\n  case \"土曜日\":\n  case \"日曜日\":\n    console.log(\"週末です！\");\n    break;\n  default:\n    console.log(\"平日です。\");\n    break;\n}\n// 出力: 平日です。\n```\n\n### ループ（for文、while文）\n\n同じ処理を繰り返し実行します。\n\n```javascript\n// for文の例\nfor (let i = 0; i \u003C 5; i++) {\n  console.log(`${i}回目のループ`);\n}\n\n// while文の例\nlet count = 0;\nwhile (count \u003C 3) {\n  console.log(`カウント: ${count}`);\n  count++;\n}\n```\n\n### 関数\n\n特定の処理をまとめて名前をつけ、必要なときに呼び出せるようにします。\n\n```javascript\n// 関数の定義\nfunction greet(name) {\n  return `こんにちは、${name}さん！`;\n}\n\n// 関数の呼び出し\nlet message = greet(\"田中\");\nconsole.log(message);  // こんにちは、田中さん！\n```\n\n## 4. データ構造\n\nデータ構造は、データを効率的に格納・操作するための仕組みです。初心者が最初に学ぶべき基本的なデータ構造は以下の通りです。\n\n### 配列（Array）\n\n同じ型のデータを順序付けて格納します。インデックス（添え字）を使って各要素にアクセスできます。\n\n```javascript\n// 配列の作成\nlet fruits = [\"りんご\", \"バナナ\", \"オレンジ\"];\n\n// 要素へのアクセス\nconsole.log(fruits[0]);  // りんご\n\n// 要素の追加\nfruits.push(\"ぶどう\");\nconsole.log(fruits);  // [\"りんご\", \"バナナ\", \"オレンジ\", \"ぶどう\"]\n\n// 配列の長さ\nconsole.log(fruits.length);  // 4\n```\n\n### オブジェクト（Object）\n\nキーと値のペアでデータを格納します。関連するデータをまとめて管理するのに適しています。\n\n```javascript\n// オブジェクトの作成\nlet student = {\n  id: 1,\n  name: \"山田太郎\",\n  grade: 3,\n  subjects: [\"数学\", \"英語\", \"理科\"]\n};\n\n// プロパティへのアクセス\nconsole.log(student.name);  // 山田太郎\nconsole.log(student[\"grade\"]);  // 3\n\n// プロパティの追加\nstudent.score = 85;\n```\n\n### マップとセット（Map, Set）\n\nより高度なデータ構造として、ES6から導入されたMapとSetもあります。\n\n```javascript\n// Mapの例（キーと値のペアを管理）\nlet userRoles = new Map();\nuserRoles.set(\"user123\", \"admin\");\nuserRoles.set(\"user456\", \"editor\");\n\n// Setの例（重複のない値のコレクション）\nlet uniqueNumbers = new Set([1, 2, 3, 3, 4, 4, 5]);\nconsole.log([...uniqueNumbers]);  // [1, 2, 3, 4, 5]\n```\n\n## 5. デバッグの基本\n\nプログラミングでは、エラーや不具合（バグ）は避けられません。効率的にバグを見つけて修正する「デバッグ」のスキルは非常に重要です。\n\n### コンソールログを使ったデバッグ\n\n最も基本的なデバッグ方法は、`console.log()`を使って変数の値や処理の流れを確認することです。\n\n```javascript\nfunction calculateTotal(price, quantity) {\n  console.log(\"Price:\", price);\n  console.log(\"Quantity:\", quantity);\n  \n  let subtotal = price * quantity;\n  console.log(\"Subtotal:\", subtotal);\n  \n  let tax = subtotal * 0.1;\n  console.log(\"Tax:\", tax);\n  \n  let total = subtotal + tax;\n  console.log(\"Total:\", total);\n  \n  return total;\n}\n\nlet finalPrice = calculateTotal(1000, 3);\n```\n\n### エラーメッセージを理解する\n\nエラーメッセージは、問題の原因を特定するための重要な手がかりです。エラーの種類、発生場所、原因を読み取る習慣をつけましょう。\n\n一般的なエラーの例：\n- **SyntaxError**: 文法エラー（括弧の閉じ忘れなど）\n- **ReferenceError**: 存在しない変数を参照した\n- **TypeError**: 不適切な操作を行った（数値に文字列のメソッドを使うなど）\n\n### デバッガーを使う\n\n多くの開発環境やブラウザには、コードを一時停止して変数の状態を確認できるデバッガーが組み込まれています。\n\n```javascript\nfunction complexCalculation(a, b) {\n  let result = 0;\n  \n  // デバッガーを設置（ブラウザの開発者ツールで実行時に一時停止する）\n  debugger;\n  \n  for (let i = 0; i \u003C a; i++) {\n    result += i * b;\n  }\n  \n  return result;\n}\n```\n\n## 実践的な例：これらの概念を組み合わせる\n\n以下は、これまで説明した5つの概念を組み合わせた簡単なプログラム例です。\n\n```javascript\n// 学生の成績を管理するプログラム\n\n// 1. データ構造（配列とオブジェクト）を使用\nconst students = [\n  { id: 1, name: \"佐藤\", scores: [85, 90, 78] },\n  { id: 2, name: \"鈴木\", scores: [92, 86, 90] },\n  { id: 3, name: \"田中\", scores: [76, 80, 84] }\n];\n\n// 2. 関数を定義（平均点を計算）\nfunction calculateAverage(scores) {\n  // デバッグ用のログ\n  console.log(\"Calculating average for scores:\", scores);\n  \n  // 変数を初期化\n  let sum = 0;\n  \n  // ループを使用して合計を計算\n  for (let i = 0; i \u003C scores.length; i++) {\n    sum += scores[i];\n  }\n  \n  // 平均を計算して返す\n  return sum / scores.length;\n}\n\n// 3. 条件分岐を使用して成績を評価\nfunction getGrade(average) {\n  if (average >= 90) {\n    return \"A\";\n  } else if (average >= 80) {\n    return \"B\";\n  } else if (average >= 70) {\n    return \"C\";\n  } else {\n    return \"D\";\n  }\n}\n\n// 4. メイン処理（アルゴリズム）\nfunction processStudentResults() {\n  // 結果を格納する新しい配列を作成\n  const results = [];\n  \n  // 各学生のデータを処理\n  for (let i = 0; i \u003C students.length; i++) {\n    const student = students[i];\n    const average = calculateAverage(student.scores);\n    const grade = getGrade(average);\n    \n    // 結果をオブジェクトとして配列に追加\n    results.push({\n      id: student.id,\n      name: student.name,\n      average: average.toFixed(1),\n      grade: grade\n    });\n  }\n  \n  return results;\n}\n\n// プログラムを実行\nconst studentResults = processStudentResults();\n\n// 結果を表示\nconsole.log(\"===== 学生成績一覧 =====\");\nstudentResults.forEach(student => {\n  console.log(`${student.name}: 平均点 ${student.average}点、評価 ${student.grade}`);\n});\n```\n\n## まとめ\n\nこの記事では、プログラミング初心者が最初に学ぶべき5つの重要な概念について解説しました：\n\n1. **アルゴリズムの基本**: 問題解決のための手順\n2. **変数とデータ型**: データを保存・操作するための仕組み\n3. **制御構造**: プログラムの流れを制御する方法\n4. **データ構造**: データを効率的に管理する仕組み\n5. **デバッグの基本**: エラーを見つけて修正する方法\n\nこれらの概念は、どのプログラミング言語を学ぶ場合でも基礎となるものです。一度にすべてを完璧に理解しようとせず、少しずつ実践しながら身につけていくことをおすすめします。\n\nプログラミングは継続的な学習が必要な分野ですが、基礎をしっかり固めることで、より複雑な概念や技術も理解しやすくなります。ぜひ、この記事で紹介した概念を意識しながら、プログラミングの学習を進めてみてください。\n\n次回は、より実践的なプロジェクトの作り方について解説する予定です。お楽しみに！","src/content/blog/programming-concepts-for-beginners.md","500f92ff1160cfc7",{"html":539,"metadata":540},"\u003Ch1 id=\"プログラミング初心者が最初に学ぶべき5つの概念\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/h1>\n\u003Cp>プログラミングを始めたばかりの方にとって、何から学べばいいのか迷うことが多いと思います。この記事では、プログラミング初心者が最初に理解しておくべき5つの重要な概念について解説します。これらの基礎をしっかり押さえることで、その後の学習がスムーズに進むでしょう。\u003C/p>\n\u003Ch2 id=\"1-アルゴリズムの基本\">1. アルゴリズムの基本\u003C/h2>\n\u003Ch3 id=\"アルゴリズムとは\">アルゴリズムとは？\u003C/h3>\n\u003Cp>アルゴリズムとは、問題を解決するための手順や方法のことです。料理のレシピや組み立て説明書のようなもので、ステップバイステップで目標を達成するための道筋を示します。\u003C/p>\n\u003Ch3 id=\"なぜ重要なのか\">なぜ重要なのか？\u003C/h3>\n\u003Cp>プログラミングの本質は「問題解決」です。アルゴリズム的思考を身につけることで、複雑な問題を小さな部分に分解し、効率的に解決する能力が養われます。\u003C/p>\n\u003Ch3 id=\"簡単な例\">簡単な例\u003C/h3>\n\u003Cp>例えば、「1から10までの数字の合計を求める」というシンプルな問題を考えてみましょう。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// アルゴリズム：\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 1. 合計を保存する変数を0で初期化する\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 2. 1から10まで順番に処理する\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 3. 各数字を合計に加える\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 4. 最終的な合計を表示する\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">合計: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\"> +\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 合計: 55\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"2-変数とデータ型\">2. 変数とデータ型\u003C/h2>\n\u003Ch3 id=\"変数とは\">変数とは？\u003C/h3>\n\u003Cp>変数は、データを一時的に保存するための「箱」です。名前をつけて値を格納し、後で参照したり変更したりできます。\u003C/p>\n\u003Ch3 id=\"主なデータ型\">主なデータ型\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>数値型（Number）\u003C/strong>: 整数や小数点を含む数値\u003C/li>\n\u003Cli>\u003Cstrong>文字列型（String）\u003C/strong>: テキストデータ\u003C/li>\n\u003Cli>\u003Cstrong>論理型（Boolean）\u003C/strong>: \u003Ccode>true\u003C/code>または\u003Ccode>false\u003C/code>の値\u003C/li>\n\u003Cli>\u003Cstrong>配列（Array）\u003C/strong>: 複数の値をまとめて管理するリスト\u003C/li>\n\u003Cli>\u003Cstrong>オブジェクト（Object）\u003C/strong>: 関連するデータと機能をまとめたもの\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"例\">例\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 変数の宣言と代入\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;                 \u003C/span>\u003Cspan style=\"color:#6272A4\">// 数値型\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木一郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;         \u003C/span>\u003Cspan style=\"color:#6272A4\">// 文字列型\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> isStudent \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;         \u003C/span>\u003Cspan style=\"color:#6272A4\">// 論理型\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> hobbies \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">読書\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">旅行\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">料理\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 配列\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> person \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {                \u003C/span>\u003Cspan style=\"color:#6272A4\">// オブジェクト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">佐藤花子\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  age\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 30\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  isMarried\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"3-制御構造\">3. 制御構造\u003C/h2>\n\u003Cp>制御構造は、プログラムの実行の流れを制御するための仕組みです。主に以下の3つがあります。\u003C/p>\n\u003Ch3 id=\"条件分岐if文switch文\">条件分岐（if文、switch文）\u003C/h3>\n\u003Cp>条件に応じて異なる処理を実行します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// if文の例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> time \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 14\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (time \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 12\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">おはようございます！\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (time \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 18\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">こんにちは！\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">こんばんは！\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力: こんにちは！\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// switch文の例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> day \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">月曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">switch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (day) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  case\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">土曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  case\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">日曜日\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">週末です！\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  default\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">平日です。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力: 平日です。\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"ループfor文while文\">ループ（for文、while文）\u003C/h3>\n\u003Cp>同じ処理を繰り返し実行します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// for文の例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">回目のループ`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// while文の例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> count \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (count \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`カウント: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">count\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  count\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"関数\">関数\u003C/h3>\n\u003Cp>特定の処理をまとめて名前をつけ、必要なときに呼び出せるようにします。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 関数の定義\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `こんにちは、\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">さん！`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 関数の呼び出し\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(message);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// こんにちは、田中さん！\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"4-データ構造\">4. データ構造\u003C/h2>\n\u003Cp>データ構造は、データを効率的に格納・操作するための仕組みです。初心者が最初に学ぶべき基本的なデータ構造は以下の通りです。\u003C/p>\n\u003Ch3 id=\"配列array\">配列（Array）\u003C/h3>\n\u003Cp>同じ型のデータを順序付けて格納します。インデックス（添え字）を使って各要素にアクセスできます。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 配列の作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> fruits \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">りんご\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">バナナ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">オレンジ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 要素へのアクセス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(fruits[\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// りんご\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 要素の追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">fruits.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ぶどう\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(fruits);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// [\"りんご\", \"バナナ\", \"オレンジ\", \"ぶどう\"]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 配列の長さ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(fruits.length);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 4\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"オブジェクトobject\">オブジェクト（Object）\u003C/h3>\n\u003Cp>キーと値のペアでデータを格納します。関連するデータをまとめて管理するのに適しています。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// オブジェクトの作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> student \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  grade\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  subjects\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">数学\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">英語\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">理科\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// プロパティへのアクセス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(student.name);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 山田太郎\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(student[\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">grade\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 3\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// プロパティの追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">student.score \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 85\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"マップとセットmap-set\">マップとセット（Map, Set）\u003C/h3>\n\u003Cp>より高度なデータ構造として、ES6から導入されたMapとSetもあります。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// Mapの例（キーと値のペアを管理）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> userRoles \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Map\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">userRoles.\u003C/span>\u003Cspan style=\"color:#50FA7B\">set\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">user123\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">admin\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">userRoles.\u003C/span>\u003Cspan style=\"color:#50FA7B\">set\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">user456\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">editor\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// Setの例（重複のない値のコレクション）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> uniqueNumbers \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Set\u003C/span>\u003Cspan style=\"color:#F8F8F2\">([\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">([\u003C/span>\u003Cspan style=\"color:#FF79C6\">...\u003C/span>\u003Cspan style=\"color:#F8F8F2\">uniqueNumbers]);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// [1, 2, 3, 4, 5]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"5-デバッグの基本\">5. デバッグの基本\u003C/h2>\n\u003Cp>プログラミングでは、エラーや不具合（バグ）は避けられません。効率的にバグを見つけて修正する「デバッグ」のスキルは非常に重要です。\u003C/p>\n\u003Ch3 id=\"コンソールログを使ったデバッグ\">コンソールログを使ったデバッグ\u003C/h3>\n\u003Cp>最も基本的なデバッグ方法は、\u003Ccode>console.log()\u003C/code>を使って変数の値や処理の流れを確認することです。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">price\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">quantity\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Price:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Quantity:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, quantity);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> subtotal \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> price \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> quantity;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Subtotal:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, subtotal);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> tax \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> subtotal \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Tax:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, tax);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> subtotal \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> tax;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Total:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, total);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> finalPrice \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">1000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"エラーメッセージを理解する\">エラーメッセージを理解する\u003C/h3>\n\u003Cp>エラーメッセージは、問題の原因を特定するための重要な手がかりです。エラーの種類、発生場所、原因を読み取る習慣をつけましょう。\u003C/p>\n\u003Cp>一般的なエラーの例：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>SyntaxError\u003C/strong>: 文法エラー（括弧の閉じ忘れなど）\u003C/li>\n\u003Cli>\u003Cstrong>ReferenceError\u003C/strong>: 存在しない変数を参照した\u003C/li>\n\u003Cli>\u003Cstrong>TypeError\u003C/strong>: 不適切な操作を行った（数値に文字列のメソッドを使うなど）\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"デバッガーを使う\">デバッガーを使う\u003C/h3>\n\u003Cp>多くの開発環境やブラウザには、コードを一時停止して変数の状態を確認できるデバッガーが組み込まれています。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> complexCalculation\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // デバッガーを設置（ブラウザの開発者ツールで実行時に一時停止する）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  debugger\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    result \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"実践的な例これらの概念を組み合わせる\">実践的な例：これらの概念を組み合わせる\u003C/h2>\n\u003Cp>以下は、これまで説明した5つの概念を組み合わせた簡単なプログラム例です。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 学生の成績を管理するプログラム\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 1. データ構造（配列とオブジェクト）を使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> students \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">佐藤\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, scores\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">85\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">90\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">78\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, scores\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">92\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">86\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">90\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, scores\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">76\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">80\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">84\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 2. 関数を定義（平均点を計算）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateAverage\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">scores\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // デバッグ用のログ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Calculating average for scores:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, scores);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 変数を初期化\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ループを使用して合計を計算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores[i];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 平均を計算して返す\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores.length;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 3. 条件分岐を使用して成績を評価\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getGrade\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">average\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (average \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 90\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">A\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (average \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 80\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">B\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (average \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 70\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">C\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">D\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 4. メイン処理（アルゴリズム）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> processStudentResults\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 結果を格納する新しい配列を作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> results \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 各学生のデータを処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> students.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> student \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> students[i];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> average \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateAverage\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(student.scores);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> grade \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getGrade\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(average);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 結果をオブジェクトとして配列に追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    results.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> student.id,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> student.name,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      average\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> average.\u003C/span>\u003Cspan style=\"color:#50FA7B\">toFixed\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      grade\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> grade\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> results;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// プログラムを実行\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> studentResults \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> processStudentResults\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 結果を表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">===== 学生成績一覧 =====\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">studentResults.\u003C/span>\u003Cspan style=\"color:#50FA7B\">forEach\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">student\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">student.name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">: 平均点 \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">student.average\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">点、評価 \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">student.grade\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>この記事では、プログラミング初心者が最初に学ぶべき5つの重要な概念について解説しました：\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>アルゴリズムの基本\u003C/strong>: 問題解決のための手順\u003C/li>\n\u003Cli>\u003Cstrong>変数とデータ型\u003C/strong>: データを保存・操作するための仕組み\u003C/li>\n\u003Cli>\u003Cstrong>制御構造\u003C/strong>: プログラムの流れを制御する方法\u003C/li>\n\u003Cli>\u003Cstrong>データ構造\u003C/strong>: データを効率的に管理する仕組み\u003C/li>\n\u003Cli>\u003Cstrong>デバッグの基本\u003C/strong>: エラーを見つけて修正する方法\u003C/li>\n\u003C/ol>\n\u003Cp>これらの概念は、どのプログラミング言語を学ぶ場合でも基礎となるものです。一度にすべてを完璧に理解しようとせず、少しずつ実践しながら身につけていくことをおすすめします。\u003C/p>\n\u003Cp>プログラミングは継続的な学習が必要な分野ですが、基礎をしっかり固めることで、より複雑な概念や技術も理解しやすくなります。ぜひ、この記事で紹介した概念を意識しながら、プログラミングの学習を進めてみてください。\u003C/p>\n\u003Cp>次回は、より実践的なプロジェクトの作り方について解説する予定です。お楽しみに！\u003C/p>",{"headings":541,"imagePaths":598,"frontmatter":599},[542,543,546,547,550,552,555,558,560,562,565,568,571,573,576,579,582,585,588,590,592,594,597],{"depth":26,"slug":531,"text":531},{"depth":29,"slug":544,"text":545},"1-アルゴリズムの基本","1. アルゴリズムの基本",{"depth":33,"slug":30,"text":31},{"depth":33,"slug":548,"text":549},"なぜ重要なのか","なぜ重要なのか？",{"depth":33,"slug":551,"text":551},"簡単な例",{"depth":29,"slug":553,"text":554},"2-変数とデータ型","2. 変数とデータ型",{"depth":33,"slug":556,"text":557},"変数とは","変数とは？",{"depth":33,"slug":559,"text":559},"主なデータ型",{"depth":33,"slug":561,"text":561},"例",{"depth":29,"slug":563,"text":564},"3-制御構造","3. 制御構造",{"depth":33,"slug":566,"text":567},"条件分岐if文switch文","条件分岐（if文、switch文）",{"depth":33,"slug":569,"text":570},"ループfor文while文","ループ（for文、while文）",{"depth":33,"slug":572,"text":572},"関数",{"depth":29,"slug":574,"text":575},"4-データ構造","4. データ構造",{"depth":33,"slug":577,"text":578},"配列array","配列（Array）",{"depth":33,"slug":580,"text":581},"オブジェクトobject","オブジェクト（Object）",{"depth":33,"slug":583,"text":584},"マップとセットmap-set","マップとセット（Map, Set）",{"depth":29,"slug":586,"text":587},"5-デバッグの基本","5. デバッグの基本",{"depth":33,"slug":589,"text":589},"コンソールログを使ったデバッグ",{"depth":33,"slug":591,"text":591},"エラーメッセージを理解する",{"depth":33,"slug":593,"text":593},"デバッガーを使う",{"depth":29,"slug":595,"text":596},"実践的な例これらの概念を組み合わせる","実践的な例：これらの概念を組み合わせる",{"depth":29,"slug":145,"text":145},[],{"title":531,"description":532,"pubDate":600,"heroImage":534},"Mar 1 2025","programming-basics-for-beginners",{"id":601,"data":603,"body":607,"filePath":608,"digest":609,"rendered":610},{"title":604,"description":605,"pubDate":606,"heroImage":155},"変数・データ型・関数とは？初心者向けに超わかりやすく解説","プログラミングの基礎概念である変数、データ型、関数について初心者にもわかりやすく解説します。",["Date","2025-03-01T15:00:00.000Z"],"# 変数・データ型・関数とは？初心者向けに超わかりやすく解説\n\nプログラミングを始めたばかりの方にとって、「変数」「データ型」「関数」という言葉は少し難しく感じるかもしれません。しかし、これらはプログラミングの基礎中の基礎であり、しっかり理解することでプログラミングの世界がぐっと広がります。この記事では、これらの概念をできるだけわかりやすく解説していきます。\n\n## 変数とは？\n\n### 変数の基本概念\n\n変数とは、簡単に言うと「データを入れる箱」です。例えば、あなたが計算をするとき、途中の結果を紙に書いておくことがありますよね。プログラミングでの変数は、そのメモ書きのようなものです。\n\n```javascript\n// 変数の宣言と代入\nlet age = 25;\nlet name = \"田中太郎\";\n```\n\n上記の例では、`age`という名前の箱に`25`という数値を、`name`という箱に`\"田中太郎\"`という文字列を入れています。\n\n### 変数の命名規則\n\n変数の名前（識別子）には、いくつかのルールがあります：\n\n- 英字、数字、アンダースコア（_）、ドル記号（$）を使用できる\n- 最初の文字は数字にできない\n- 大文字と小文字は区別される（`name`と`Name`は別の変数）\n- 予約語（JavaScriptで特別な意味を持つ単語）は使用できない\n\n```javascript\n// 良い例\nlet userName = \"山田花子\";\nlet user_age = 30;\n\n// 悪い例\nlet 1user = \"鈴木一郎\";  // 数字から始まっている\nlet if = \"条件\";  // 予約語を使用している\n```\n\n### 変数の宣言方法\n\nJavaScriptでは、変数を宣言するのに主に3つの方法があります：\n\n1. **let**: 再代入可能な変数を宣言\n2. **const**: 再代入不可能な定数を宣言\n3. **var**: 古い宣言方法（現在はあまり使用されない）\n\n```javascript\n// let - 値の変更が可能\nlet score = 80;\nscore = 90;  // OK\n\n// const - 値の変更が不可能\nconst PI = 3.14159;\n// PI = 3.14;  // エラー！\n\n// var - 古い宣言方法\nvar oldVariable = \"古い方法\";\n```\n\n## データ型とは？\n\nデータ型とは、変数に格納されるデータの種類のことです。主なデータ型には以下のようなものがあります：\n\n### 基本データ型（プリミティブ型）\n\n1. **数値型（Number）**\n   - 整数や小数点を含む数値\n   ```javascript\n   let age = 25;\n   let height = 175.5;\n   ```\n\n2. **文字列型（String）**\n   - テキストデータ\n   ```javascript\n   let name = \"佐藤健太\";\n   let message = '今日は良い天気ですね。';\n   ```\n\n3. **論理型（Boolean）**\n   - `true`または`false`の値\n   ```javascript\n   let isStudent = true;\n   let hasLicense = false;\n   ```\n\n4. **未定義（undefined）**\n   - 値が割り当てられていない変数\n   ```javascript\n   let something;\n   console.log(something);  // undefined\n   ```\n\n5. **null**\n   - 意図的に「値がない」ことを表す\n   ```javascript\n   let empty = null;\n   ```\n\n### 複合データ型（オブジェクト型）\n\n1. **オブジェクト（Object）**\n   - 複数の値をプロパティとして持つ\n   ```javascript\n   let person = {\n     name: \"山本美咲\",\n     age: 28,\n     isMarried: false\n   };\n   ```\n\n2. **配列（Array）**\n   - 複数の値を順序付けて格納\n   ```javascript\n   let fruits = [\"りんご\", \"バナナ\", \"オレンジ\"];\n   ```\n\n3. **関数（Function）**\n   - 実行可能なコードブロック\n   ```javascript\n   function greet() {\n     return \"こんにちは\";\n   }\n   ```\n\n4. **日付（Date）**\n   - 日時を表す\n   ```javascript\n   let today = new Date();\n   ```\n\n5. **正規表現（RegExp）**\n   - パターンマッチングに使用\n   ```javascript\n   let pattern = /[a-z]+/;\n   ```\n\n### データ型の確認方法\n\n変数のデータ型を確認するには、`typeof`演算子を使用します：\n\n```javascript\nlet num = 42;\nlet text = \"こんにちは\";\nlet isActive = true;\n\nconsole.log(typeof num);      // \"number\"\nconsole.log(typeof text);     // \"string\"\nconsole.log(typeof isActive); // \"boolean\"\n```\n\n## 関数とは？\n\n関数とは、特定のタスクを実行するためのコードブロックです。料理のレシピのようなもので、一度定義しておけば何度でも使い回すことができます。\n\n### 関数の基本構造\n\n```javascript\n// 関数の定義\nfunction greet(name) {\n  return \"こんにちは、\" + name + \"さん！\";\n}\n\n// 関数の呼び出し\nlet message = greet(\"鈴木\");\nconsole.log(message);  // \"こんにちは、鈴木さん！\"\n```\n\n上記の例では：\n- `function`キーワードで関数を定義\n- `greet`は関数名\n- `name`はパラメータ（引数）\n- `return`で結果を返す\n- 関数名と括弧`()`で関数を呼び出す\n\n### 関数の種類\n\nJavaScriptでは、関数を定義するいくつかの方法があります：\n\n1. **関数宣言**\n   ```javascript\n   function add(a, b) {\n     return a + b;\n   }\n   ```\n\n2. **関数式**\n   ```javascript\n   const multiply = function(a, b) {\n     return a * b;\n   };\n   ```\n\n3. **アロー関数（ES6以降）**\n   ```javascript\n   const divide = (a, b) => {\n     return a / b;\n   };\n   \n   // 1行で書ける場合はさらに短く\n   const subtract = (a, b) => a - b;\n   ```\n\n### 関数のスコープ\n\n関数内で宣言された変数は、その関数の外からはアクセスできません。これを「スコープ」と呼びます。\n\n```javascript\nfunction calculateArea() {\n  let width = 10;\n  let height = 5;\n  let area = width * height;\n  return area;\n}\n\nlet result = calculateArea();\nconsole.log(result);  // 50\n\n// console.log(width);  // エラー！width は関数の外からアクセスできない\n```\n\n## 実践例：変数・データ型・関数を使ったプログラム\n\n以下は、これまで学んだ概念を組み合わせた簡単なプログラム例です：\n\n```javascript\n// 学生の情報を管理するプログラム\n\n// 変数とデータ型の使用\nconst CLASS_NAME = \"3年A組\";  // 定数（変更不可）\nlet totalStudents = 30;       // 数値型\nlet classTeacher = \"佐藤先生\"; // 文字列型\nlet isActive = true;          // 論理型\n\n// 学生オブジェクト（複合データ型）\nlet student = {\n  id: 1,\n  name: \"山田太郎\",\n  age: 15,\n  scores: {\n    math: 85,\n    english: 70,\n    science: 90\n  }\n};\n\n// 関数の定義\nfunction calculateAverage(scores) {\n  let total = scores.math + scores.english + scores.science;\n  return total / 3;\n}\n\nfunction getStudentSummary(student) {\n  let average = calculateAverage(student.scores);\n  return `${student.name}さんの平均点は${average}点です。`;\n}\n\n// プログラムの実行\nconsole.log(`クラス: ${CLASS_NAME}`);\nconsole.log(`担任: ${classTeacher}`);\nconsole.log(`生徒数: ${totalStudents}人`);\n\n// 関数の呼び出し\nlet summary = getStudentSummary(student);\nconsole.log(summary);  // \"山田太郎さんの平均点は81.66666666666667点です。\"\n```\n\n## まとめ\n\nこの記事では、プログラミングの基礎である「変数」「データ型」「関数」について解説しました。\n\n- **変数**はデータを格納する箱\n- **データ型**は変数に格納されるデータの種類\n- **関数**は特定のタスクを実行するためのコードブロック\n\nこれらの概念は、どのプログラミング言語でも共通する基本的な要素です。しっかりと理解して、プログラミングの世界を楽しんでください！\n\n次回は、条件分岐やループなど、プログラムの流れを制御する方法について解説する予定です。お楽しみに！","src/content/blog/programming-basics-for-beginners.md","3d40faf91affb74a",{"html":611,"metadata":612},"\u003Ch1 id=\"変数データ型関数とは初心者向けに超わかりやすく解説\">変数・データ型・関数とは？初心者向けに超わかりやすく解説\u003C/h1>\n\u003Cp>プログラミングを始めたばかりの方にとって、「変数」「データ型」「関数」という言葉は少し難しく感じるかもしれません。しかし、これらはプログラミングの基礎中の基礎であり、しっかり理解することでプログラミングの世界がぐっと広がります。この記事では、これらの概念をできるだけわかりやすく解説していきます。\u003C/p>\n\u003Ch2 id=\"変数とは\">変数とは？\u003C/h2>\n\u003Ch3 id=\"変数の基本概念\">変数の基本概念\u003C/h3>\n\u003Cp>変数とは、簡単に言うと「データを入れる箱」です。例えば、あなたが計算をするとき、途中の結果を紙に書いておくことがありますよね。プログラミングでの変数は、そのメモ書きのようなものです。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 変数の宣言と代入\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>上記の例では、\u003Ccode>age\u003C/code>という名前の箱に\u003Ccode>25\u003C/code>という数値を、\u003Ccode>name\u003C/code>という箱に\u003Ccode>\"田中太郎\"\u003C/code>という文字列を入れています。\u003C/p>\n\u003Ch3 id=\"変数の命名規則\">変数の命名規則\u003C/h3>\n\u003Cp>変数の名前（識別子）には、いくつかのルールがあります：\u003C/p>\n\u003Cul>\n\u003Cli>英字、数字、アンダースコア（_）、ドル記号（$）を使用できる\u003C/li>\n\u003Cli>最初の文字は数字にできない\u003C/li>\n\u003Cli>大文字と小文字は区別される（\u003Ccode>name\u003C/code>と\u003Ccode>Name\u003C/code>は別の変数）\u003C/li>\n\u003Cli>予約語（JavaScriptで特別な意味を持つ単語）は使用できない\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> userName \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田花子\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user_age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 30\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> 1user \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木一郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 数字から始まっている\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> if \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">条件\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 予約語を使用している\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"変数の宣言方法\">変数の宣言方法\u003C/h3>\n\u003Cp>JavaScriptでは、変数を宣言するのに主に3つの方法があります：\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>let\u003C/strong>: 再代入可能な変数を宣言\u003C/li>\n\u003Cli>\u003Cstrong>const\u003C/strong>: 再代入不可能な定数を宣言\u003C/li>\n\u003Cli>\u003Cstrong>var\u003C/strong>: 古い宣言方法（現在はあまり使用されない）\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// let - 値の変更が可能\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> score \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 80\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">score \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 90\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// OK\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// const - 値の変更が不可能\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> PI \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3.14159\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// PI = 3.14;  // エラー！\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// var - 古い宣言方法\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">var\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> oldVariable \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">古い方法\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"データ型とは\">データ型とは？\u003C/h2>\n\u003Cp>データ型とは、変数に格納されるデータの種類のことです。主なデータ型には以下のようなものがあります：\u003C/p>\n\u003Ch3 id=\"基本データ型プリミティブ型\">基本データ型（プリミティブ型）\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>数値型（Number）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>整数や小数点を含む数値\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> height \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 175.5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>文字列型（String）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>テキストデータ\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">佐藤健太\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">今日は良い天気ですね。\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>論理型（Boolean）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>true\u003C/code>または\u003Ccode>false\u003C/code>の値\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> isStudent \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> hasLicense \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>未定義（undefined）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>値が割り当てられていない変数\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> something;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(something);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// undefined\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>null\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>意図的に「値がない」ことを表す\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> empty \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> null\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"複合データ型オブジェクト型\">複合データ型（オブジェクト型）\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>オブジェクト（Object）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>複数の値をプロパティとして持つ\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> person \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山本美咲\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  age\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 28\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  isMarried\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>配列（Array）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>複数の値を順序付けて格納\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> fruits \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">りんご\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">バナナ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">オレンジ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>関数（Function）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>実行可能なコードブロック\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">こんにちは\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>日付（Date）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>日時を表す\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> today \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Date\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>正規表現（RegExp）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>パターンマッチングに使用\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> pattern \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF5555\"> /\u003C/span>\u003Cspan style=\"color:#8BE9FD\">[\u003C/span>\u003Cspan style=\"color:#BD93F9\">a-z\u003C/span>\u003Cspan style=\"color:#8BE9FD\">]\u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#FF5555\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"データ型の確認方法\">データ型の確認方法\u003C/h3>\n\u003Cp>変数のデータ型を確認するには、\u003Ccode>typeof\u003C/code>演算子を使用します：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 42\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> text \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">こんにちは\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> isActive \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">typeof\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num);      \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"number\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">typeof\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> text);     \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"string\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">typeof\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> isActive); \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"boolean\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"関数とは\">関数とは？\u003C/h2>\n\u003Cp>関数とは、特定のタスクを実行するためのコードブロックです。料理のレシピのようなもので、一度定義しておけば何度でも使い回すことができます。\u003C/p>\n\u003Ch3 id=\"関数の基本構造\">関数の基本構造\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 関数の定義\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">こんにちは、\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\"> +\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">さん！\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 関数の呼び出し\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(message);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"こんにちは、鈴木さん！\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>上記の例では：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>function\u003C/code>キーワードで関数を定義\u003C/li>\n\u003Cli>\u003Ccode>greet\u003C/code>は関数名\u003C/li>\n\u003Cli>\u003Ccode>name\u003C/code>はパラメータ（引数）\u003C/li>\n\u003Cli>\u003Ccode>return\u003C/code>で結果を返す\u003C/li>\n\u003Cli>関数名と括弧\u003Ccode>()\u003C/code>で関数を呼び出す\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"関数の種類\">関数の種類\u003C/h3>\n\u003Cp>JavaScriptでは、関数を定義するいくつかの方法があります：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>関数宣言\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> add\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>関数式\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#50FA7B\"> multiply\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>アロー関数（ES6以降）\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#50FA7B\"> divide\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 1行で書ける場合はさらに短く\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#50FA7B\"> subtract\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"関数のスコープ\">関数のスコープ\u003C/h3>\n\u003Cp>関数内で宣言された変数は、その関数の外からはアクセスできません。これを「スコープ」と呼びます。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateArea\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> width \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> height \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> area \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> width \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> height;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> area;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateArea\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(result);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 50\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// console.log(width);  // エラー！width は関数の外からアクセスできない\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"実践例変数データ型関数を使ったプログラム\">実践例：変数・データ型・関数を使ったプログラム\u003C/h2>\n\u003Cp>以下は、これまで学んだ概念を組み合わせた簡単なプログラム例です：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 学生の情報を管理するプログラム\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 変数とデータ型の使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> CLASS_NAME \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">3年A組\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 定数（変更不可）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> totalStudents \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 30\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;       \u003C/span>\u003Cspan style=\"color:#6272A4\">// 数値型\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> classTeacher \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">佐藤先生\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; \u003C/span>\u003Cspan style=\"color:#6272A4\">// 文字列型\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> isActive \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;          \u003C/span>\u003Cspan style=\"color:#6272A4\">// 論理型\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 学生オブジェクト（複合データ型）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> student \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  age\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 15\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  scores\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    math\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 85\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    english\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 70\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    science\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 90\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 関数の定義\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateAverage\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">scores\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores.math \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores.english \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores.science;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getStudentSummary\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">student\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> average \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateAverage\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(student.scores);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">student.name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">さんの平均点は\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">average\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">点です。`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// プログラムの実行\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`クラス: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">CLASS_NAME\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`担任: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">classTeacher\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`生徒数: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">totalStudents\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">人`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 関数の呼び出し\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> summary \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getStudentSummary\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(student);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(summary);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"山田太郎さんの平均点は81.66666666666667点です。\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>この記事では、プログラミングの基礎である「変数」「データ型」「関数」について解説しました。\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>変数\u003C/strong>はデータを格納する箱\u003C/li>\n\u003Cli>\u003Cstrong>データ型\u003C/strong>は変数に格納されるデータの種類\u003C/li>\n\u003Cli>\u003Cstrong>関数\u003C/strong>は特定のタスクを実行するためのコードブロック\u003C/li>\n\u003C/ul>\n\u003Cp>これらの概念は、どのプログラミング言語でも共通する基本的な要素です。しっかりと理解して、プログラミングの世界を楽しんでください！\u003C/p>\n\u003Cp>次回は、条件分岐やループなど、プログラムの流れを制御する方法について解説する予定です。お楽しみに！\u003C/p>",{"headings":613,"imagePaths":647,"frontmatter":648},[614,616,617,619,621,623,626,629,632,634,637,639,641,643,646],{"depth":26,"slug":615,"text":604},"変数データ型関数とは初心者向けに超わかりやすく解説",{"depth":29,"slug":556,"text":557},{"depth":33,"slug":618,"text":618},"変数の基本概念",{"depth":33,"slug":620,"text":620},"変数の命名規則",{"depth":33,"slug":622,"text":622},"変数の宣言方法",{"depth":29,"slug":624,"text":625},"データ型とは","データ型とは？",{"depth":33,"slug":627,"text":628},"基本データ型プリミティブ型","基本データ型（プリミティブ型）",{"depth":33,"slug":630,"text":631},"複合データ型オブジェクト型","複合データ型（オブジェクト型）",{"depth":33,"slug":633,"text":633},"データ型の確認方法",{"depth":29,"slug":635,"text":636},"関数とは","関数とは？",{"depth":33,"slug":638,"text":638},"関数の基本構造",{"depth":33,"slug":640,"text":640},"関数の種類",{"depth":33,"slug":642,"text":642},"関数のスコープ",{"depth":29,"slug":644,"text":645},"実践例変数データ型関数を使ったプログラム","実践例：変数・データ型・関数を使ったプログラム",{"depth":29,"slug":145,"text":145},[],{"title":604,"description":605,"pubDate":649,"heroImage":155},"Mar 2 2025","loop-statement-guide",{"id":650,"data":652,"body":656,"filePath":657,"digest":658,"rendered":659},{"title":653,"description":654,"pubDate":655,"heroImage":514},"【初心者向け】for文とwhile文の使い分け完全ガイド","プログラミングの基礎となるループ処理について、for文とwhile文の違いと適切な使い分けを解説します。",["Date","2025-03-11T15:00:00.000Z"],"# 【初心者向け】for文とwhile文の使い分け完全ガイド\n\nプログラミングにおいて、同じ処理を繰り返し実行する「ループ処理」は非常に重要な要素です。この記事では、主なループ文であるfor文とwhile文の違いや、それぞれの特徴、適切な使い分けについて詳しく解説します。\n\n## ループ処理とは？\n\nループ処理とは、特定の条件が満たされる間、同じ処理を繰り返し実行することです。例えば：\n\n- 配列の全要素に対して同じ処理を行う\n- ユーザーが正しい入力をするまで質問を繰り返す\n- ファイルの終わりまでデータを読み込む\n\nこのような処理を、一行ずつ書くのではなく、ループを使って効率的に実現します。\n\n## for文の基本\n\n### 基本構文\n\n```javascript\nfor (初期化; 条件式; 更新式) {\n    // 繰り返し実行する処理\n}\n```\n\n各部分の役割：\n- **初期化**: ループ開始前に1回だけ実行\n- **条件式**: 各繰り返しの前にチェック（trueなら続行）\n- **更新式**: 各繰り返しの最後に実行\n\n### 具体例\n\n```javascript\n// 1から5までの数を表示\nfor (let i = 1; i \u003C= 5; i++) {\n    console.log(i);\n}\n// 出力:\n// 1\n// 2\n// 3\n// 4\n// 5\n\n// 配列の要素を処理\nlet fruits = [\"りんご\", \"バナナ\", \"オレンジ\"];\nfor (let i = 0; i \u003C fruits.length; i++) {\n    console.log(`${i + 1}番目の果物: ${fruits[i]}`);\n}\n// 出力:\n// 1番目の果物: りんご\n// 2番目の果物: バナナ\n// 3番目の果物: オレンジ\n```\n\n### for...of文とfor...in文\n\n配列やオブジェクトの処理に特化したfor文の変種もあります：\n\n```javascript\n// for...of: 配列の要素を直接取得\nlet colors = [\"赤\", \"青\", \"緑\"];\nfor (let color of colors) {\n    console.log(color);\n}\n\n// for...in: オブジェクトのプロパティを取得\nlet person = {\n    name: \"田中\",\n    age: 25,\n    city: \"東京\"\n};\nfor (let key in person) {\n    console.log(`${key}: ${person[key]}`);\n}\n```\n\n### for await...of文\n\n非同期処理を扱う際に便利な`for await...of`文もあります。これは、Promiseの配列や非同期イテレータを順番に処理する場合に使用します：\n\n```javascript\n// 非同期関数の例\nasync function fetchUserData(id) {\n    const response = await fetch(`https://api.example.com/users/${id}`);\n    return response.json();\n}\n\n// 複数のユーザーデータを順番に取得\nasync function getAllUsers() {\n    const userIds = [1, 2, 3];\n    const userPromises = userIds.map(id => fetchUserData(id));\n\n    // for await...ofを使用して順番に処理\n    for await (const userData of userPromises) {\n        console.log('ユーザーデータ:', userData);\n    }\n}\n\n// ファイルの非同期読み込みの例\nasync function* readFiles(files) {\n    for (const file of files) {\n        const content = await readFile(file, 'utf8');\n        yield content;\n    }\n}\n\nasync function processFiles() {\n    const files = ['file1.txt', 'file2.txt', 'file3.txt'];\n    \n    // for await...ofを使用してファイルを順番に読み込み\n    for await (const content of readFiles(files)) {\n        console.log('ファイル内容:', content);\n    }\n}\n```\n\n`for await...of`は以下のような場合に特に有用です：\n\n1. **APIからの連続データ取得**\n   - 複数のリクエストを順番に処理\n   - レート制限を考慮した処理\n\n2. **ファイル操作**\n   - 大きなファイルの逐次読み込み\n   - 複数ファイルの順次処理\n\n3. **ストリームデータの処理**\n   - WebSocketからのデータ受信\n   - センサーデータの継続的な読み取り\n\n## while文の基本\n\n### 基本構文\n\n```javascript\nwhile (条件式) {\n    // 条件式がtrueの間、繰り返し実行する処理\n}\n```\n\n### 具体例\n\n```javascript\n// カウントダウン\nlet count = 5;\nwhile (count > 0) {\n    console.log(count);\n    count--;\n}\n\n// ユーザー入力の検証\nlet input;\nwhile (input !== \"quit\") {\n    input = prompt(\"コマンドを入力してください（終了するにはquitと入力）:\");\n    console.log(`入力されたコマンド: ${input}`);\n}\n```\n\n### do...while文\n\n条件をチェックする前に、必ず1回は処理を実行したい場合に使用します：\n\n```javascript\nlet answer;\ndo {\n    answer = prompt(\"1 + 1 = ?\");\n} while (answer !== \"2\");\n```\n\n## for文とwhile文の使い分け\n\n### for文が適している場合\n\n1. **繰り返し回数が明確な場合**\n```javascript\n// 配列の処理\nlet numbers = [1, 2, 3, 4, 5];\nfor (let i = 0; i \u003C numbers.length; i++) {\n    console.log(numbers[i] * 2);\n}\n\n// 特定回数の繰り返し\nfor (let i = 0; i \u003C 3; i++) {\n    console.log(\"Hello!\");\n}\n```\n\n2. **カウンター変数を使用する場合**\n```javascript\n// 1から10までの合計を計算\nlet sum = 0;\nfor (let i = 1; i \u003C= 10; i++) {\n    sum += i;\n}\n```\n\n3. **配列やコレクションの処理**\n```javascript\nlet students = [\"田中\", \"鈴木\", \"佐藤\"];\nfor (let i = 0; i \u003C students.length; i++) {\n    console.log(`${i + 1}番: ${students[i]}`);\n}\n```\n\n### while文が適している場合\n\n1. **終了条件が不明確な場合**\n```javascript\n// ユーザーが「終了」と入力するまで続ける\nlet input = \"\";\nwhile (input !== \"終了\") {\n    input = prompt(\"コマンドを入力してください（終了するには「終了」と入力）:\");\n    // 入力された内容を処理\n}\n```\n\n2. **条件が満たされるまで続ける場合**\n```javascript\n// ランダムな数が10以上になるまで生成\nlet number = 0;\nwhile (number \u003C 10) {\n    number = Math.random() * 20;\n    console.log(`生成された数: ${number}`);\n}\n```\n\n3. **ファイル読み込みなどの外部リソース処理**\n```javascript\nlet data;\nwhile ((data = readNextLine()) !== null) {\n    // データを処理\n}\n```\n\n## 実践的な例\n\n### 1. 素数判定プログラム\n\n```javascript\nfunction isPrime(n) {\n    if (n \u003C= 1) return false;\n    if (n \u003C= 3) return true;\n    \n    // for文: 繰り返し回数が明確\n    for (let i = 2; i \u003C= Math.sqrt(n); i++) {\n        if (n % i === 0) return false;\n    }\n    return true;\n}\n\n// while文: ユーザーが終了するまで続ける\nlet input;\nwhile (input !== \"quit\") {\n    input = prompt(\"数字を入力してください（終了はquit）:\");\n    if (input === \"quit\") break;\n    \n    const number = parseInt(input);\n    if (isNaN(number)) {\n        console.log(\"有効な数字を入力してください\");\n        continue;\n    }\n    \n    console.log(`${number}は${isPrime(number) ? \"素数です\" : \"素数ではありません\"}`);\n}\n```\n\n### 2. 配列の検索と処理\n\n```javascript\n// 商品データ\nconst products = [\n    { id: 1, name: \"りんご\", price: 100 },\n    { id: 2, name: \"バナナ\", price: 200 },\n    { id: 3, name: \"オレンジ\", price: 150 }\n];\n\n// for文: 配列の全要素を処理\nfunction displayProducts() {\n    console.log(\"=== 商品一覧 ===\");\n    for (let i = 0; i \u003C products.length; i++) {\n        console.log(`${products[i].name}: ${products[i].price}円`);\n    }\n}\n\n// while文: 特定の条件を満たすまで検索\nfunction findProduct(searchName) {\n    let i = 0;\n    while (i \u003C products.length) {\n        if (products[i].name === searchName) {\n            return products[i];\n        }\n        i++;\n    }\n    return null;\n}\n```\n\n### 3. データ入力と検証\n\n```javascript\nclass UserInput {\n    static getValidAge() {\n        while (true) {\n            const input = prompt(\"年齢を入力してください（18-120）:\");\n            const age = parseInt(input);\n            \n            if (!isNaN(age) && age >= 18 && age \u003C= 120) {\n                return age;\n            }\n            console.log(\"無効な年齢です。18から120の間で入力してください。\");\n        }\n    }\n    \n    static getValidEmail() {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        let email;\n        \n        do {\n            email = prompt(\"メールアドレスを入力してください:\");\n        } while (!emailRegex.test(email));\n        \n        return email;\n    }\n}\n```\n\n### 4. ゲームのメインループ\n\n```javascript\nclass SimpleGame {\n    constructor() {\n        this.score = 0;\n        this.isGameOver = false;\n    }\n    \n    run() {\n        // while文: ゲームが終了するまで続ける\n        while (!this.isGameOver) {\n            this.update();\n            this.render();\n            \n            if (this.score >= 100) {\n                this.isGameOver = true;\n            }\n        }\n        \n        console.log(`ゲーム終了！最終スコア: ${this.score}`);\n    }\n    \n    update() {\n        // for文: 固定回数の更新処理\n        for (let i = 0; i \u003C 5; i++) {\n            this.score += Math.floor(Math.random() * 10);\n        }\n    }\n    \n    render() {\n        console.log(`現在のスコア: ${this.score}`);\n    }\n}\n```\n\n## よくある間違いと注意点\n\n### 1. 無限ループ\n\n```javascript\n// 悪い例: 終了条件が更新されない\nwhile (true) {\n    console.log(\"無限ループ！\");\n}\n\n// 良い例: 適切な終了条件\nlet count = 0;\nwhile (count \u003C 5) {\n    console.log(count);\n    count++;  // カウンターを更新\n}\n```\n\n### 2. 配列の境界チェック\n\n```javascript\n// 悪い例: 配列の範囲外にアクセス\nlet arr = [1, 2, 3];\nfor (let i = 0; i \u003C= arr.length; i++) {  // \u003C= を使用している\n    console.log(arr[i]);  // 最後の要素はundefined\n}\n\n// 良い例\nfor (let i = 0; i \u003C arr.length; i++) {  // \u003C を使用\n    console.log(arr[i]);\n}\n```\n\n### 3. ループ変数のスコープ\n\n```javascript\n// 悪い例: varを使用\nfor (var i = 0; i \u003C 3; i++) {\n    // iはループ外でも参照可能\n}\nconsole.log(i);  // 3が出力される\n\n// 良い例: letを使用\nfor (let i = 0; i \u003C 3; i++) {\n    // iはループ内でのみ有効\n}\n// console.log(i);  // エラー: iは定義されていない\n```\n\n## パフォーマンスとベストプラクティス\n\n### 1. 配列の長さを変数に格納\n\n```javascript\n// 悪い例: 毎回lengthを計算\nfor (let i = 0; i \u003C array.length; i++) {\n    // 処理\n}\n\n// 良い例: lengthを事前に計算\nconst len = array.length;\nfor (let i = 0; i \u003C len; i++) {\n    // 処理\n}\n```\n\n### 2. break文とcontinue文の適切な使用\n\n```javascript\n// break文の例: 特定の条件で早期終了\nfor (let i = 0; i \u003C items.length; i++) {\n    if (items[i].isTarget) {\n        console.log(\"対象が見つかりました\");\n        break;  // ループを終了\n    }\n}\n\n// continue文の例: 特定の条件をスキップ\nfor (let i = 0; i \u003C numbers.length; i++) {\n    if (numbers[i] \u003C 0) {\n        continue;  // 負の数はスキップ\n    }\n    console.log(numbers[i]);\n}\n```\n\n### 3. 適切なループの選択\n\n```javascript\n// 配列の処理: for...ofを使用\nconst numbers = [1, 2, 3, 4, 5];\nfor (const num of numbers) {\n    console.log(num);\n}\n\n// オブジェクトの処理: for...inを使用\nconst person = { name: \"山田\", age: 30 };\nfor (const key in person) {\n    console.log(`${key}: ${person[key]}`);\n}\n\n// 条件付きループ: whileを使用\nlet attempts = 0;\nwhile (attempts \u003C 3) {\n    // 処理\n    attempts++;\n}\n```\n\n## まとめ\n\nfor文とwhile文の使い分けのポイントは以下の通りです：\n\n### for文を使う場合\n- 繰り返し回数が明確な場合\n- 配列やコレクションの処理\n- カウンター変数を使用する処理\n\n### while文を使う場合\n- 終了条件が不明確な場合\n- ユーザー入力の処理\n- 条件が満たされるまで続ける処理\n\nどちらを選ぶかは、以下の点を考慮して判断しましょう：\n\n1. **処理の性質**\n   - 回数が決まっているか\n   - 条件で終了するか\n   - データ構造に依存するか\n\n2. **可読性**\n   - どちらがコードの意図を明確に表現できるか\n   - メンテナンスのしやすさ\n\n3. **パフォーマンス**\n   - 処理の効率性\n   - メモリの使用\n\n適切なループ文を選択することで、より効率的で読みやすいコードを書くことができます。\n\n## 次のステップ\n\nループ処理の基本を理解したら、以下の記事も参考にしてください：\n\n- [【入門】条件分岐(if文)を理解してロジックを組み立てよう](/blog/if-statement-guide/)\n- [【基礎から学ぶ】関数の作り方と使い方を徹底解説](/blog/function-basics-guide/)\n- [【図解】アルゴリズムとは？初心者が知るべき基本概念](/blog/algorithm-basics-explained/)","src/content/blog/loop-statement-guide.md","877bac2069b3af38",{"html":660,"metadata":661},"\u003Ch1 id=\"初心者向けfor文とwhile文の使い分け完全ガイド\">【初心者向け】for文とwhile文の使い分け完全ガイド\u003C/h1>\n\u003Cp>プログラミングにおいて、同じ処理を繰り返し実行する「ループ処理」は非常に重要な要素です。この記事では、主なループ文であるfor文とwhile文の違いや、それぞれの特徴、適切な使い分けについて詳しく解説します。\u003C/p>\n\u003Ch2 id=\"ループ処理とは\">ループ処理とは？\u003C/h2>\n\u003Cp>ループ処理とは、特定の条件が満たされる間、同じ処理を繰り返し実行することです。例えば：\u003C/p>\n\u003Cul>\n\u003Cli>配列の全要素に対して同じ処理を行う\u003C/li>\n\u003Cli>ユーザーが正しい入力をするまで質問を繰り返す\u003C/li>\n\u003Cli>ファイルの終わりまでデータを読み込む\u003C/li>\n\u003C/ul>\n\u003Cp>このような処理を、一行ずつ書くのではなく、ループを使って効率的に実現します。\u003C/p>\n\u003Ch2 id=\"for文の基本\">for文の基本\u003C/h2>\n\u003Ch3 id=\"基本構文\">基本構文\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (初期化; 条件式; 更新式) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 繰り返し実行する処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>各部分の役割：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>初期化\u003C/strong>: ループ開始前に1回だけ実行\u003C/li>\n\u003Cli>\u003Cstrong>条件式\u003C/strong>: 各繰り返しの前にチェック（trueなら続行）\u003C/li>\n\u003Cli>\u003Cstrong>更新式\u003C/strong>: 各繰り返しの最後に実行\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"具体例\">具体例\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 1から5までの数を表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(i);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 3\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 4\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 5\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 配列の要素を処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> fruits \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">りんご\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">バナナ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">オレンジ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> fruits.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\"> +\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">番目の果物: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">fruits[i]\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 出力:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 1番目の果物: りんご\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 2番目の果物: バナナ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 3番目の果物: オレンジ\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"forof文とforin文\">for…of文とfor…in文\u003C/h3>\n\u003Cp>配列やオブジェクトの処理に特化したfor文の変種もあります：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// for...of: 配列の要素を直接取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> colors \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">赤\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">青\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">緑\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> color \u003C/span>\u003Cspan style=\"color:#FF79C6\">of\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> colors) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(color);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// for...in: オブジェクトのプロパティを取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> person \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    age\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    city\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">東京\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> key \u003C/span>\u003Cspan style=\"color:#FF79C6\">in\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> person) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">key\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">person[key]\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"for-awaitof文\">for await…of文\u003C/h3>\n\u003Cp>非同期処理を扱う際に便利な\u003Ccode>for await...of\u003C/code>文もあります。これは、Promiseの配列や非同期イテレータを順番に処理する場合に使用します：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 非同期関数の例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetchUserData\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">id\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetch\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`https://api.example.com/users/\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">id\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 複数のユーザーデータを順番に取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getAllUsers\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> userIds \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> userPromises \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> userIds.\u003C/span>\u003Cspan style=\"color:#50FA7B\">map\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">id\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetchUserData\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(id));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // for await...ofを使用して順番に処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    for\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> userData \u003C/span>\u003Cspan style=\"color:#FF79C6\">of\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> userPromises) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ユーザーデータ:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, userData);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ファイルの非同期読み込みの例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function*\u003C/span>\u003Cspan style=\"color:#50FA7B\"> readFiles\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">files\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> file \u003C/span>\u003Cspan style=\"color:#FF79C6\">of\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> files) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> content \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> readFile\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(file, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">utf8\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        yield\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> content;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> processFiles\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> files \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">file1.txt\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">file2.txt\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">file3.txt\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // for await...ofを使用してファイルを順番に読み込み\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    for\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> content \u003C/span>\u003Cspan style=\"color:#FF79C6\">of\u003C/span>\u003Cspan style=\"color:#50FA7B\"> readFiles\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(files)) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ファイル内容:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, content);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Ccode>for await...of\u003C/code>は以下のような場合に特に有用です：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>APIからの連続データ取得\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>複数のリクエストを順番に処理\u003C/li>\n\u003Cli>レート制限を考慮した処理\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>ファイル操作\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>大きなファイルの逐次読み込み\u003C/li>\n\u003Cli>複数ファイルの順次処理\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>ストリームデータの処理\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>WebSocketからのデータ受信\u003C/li>\n\u003Cli>センサーデータの継続的な読み取り\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"while文の基本\">while文の基本\u003C/h2>\n\u003Ch3 id=\"基本構文-1\">基本構文\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (条件式) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 条件式がtrueの間、繰り返し実行する処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"具体例-1\">具体例\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// カウントダウン\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> count \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (count \u003C/span>\u003Cspan style=\"color:#FF79C6\">>\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(count);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    count\u003C/span>\u003Cspan style=\"color:#FF79C6\">--\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ユーザー入力の検証\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> input;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (input \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">quit\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    input \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> prompt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">コマンドを入力してください（終了するにはquitと入力）:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`入力されたコマンド: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">input\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"dowhile文\">do…while文\u003C/h3>\n\u003Cp>条件をチェックする前に、必ず1回は処理を実行したい場合に使用します：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> answer;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">do\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    answer \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> prompt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">1 + 1 = ?\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (answer \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">2\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"for文とwhile文の使い分け\">for文とwhile文の使い分け\u003C/h2>\n\u003Ch3 id=\"for文が適している場合\">for文が適している場合\u003C/h3>\n\u003Col>\n\u003Cli>\u003Cstrong>繰り返し回数が明確な場合\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 配列の処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(numbers[i] \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 特定回数の繰り返し\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"2\">\n\u003Cli>\u003Cstrong>カウンター変数を使用する場合\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 1から10までの合計を計算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"3\">\n\u003Cli>\u003Cstrong>配列やコレクションの処理\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> students \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">佐藤\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> students.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\"> +\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">番: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">students[i]\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"while文が適している場合\">while文が適している場合\u003C/h3>\n\u003Col>\n\u003Cli>\u003Cstrong>終了条件が不明確な場合\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ユーザーが「終了」と入力するまで続ける\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> input \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (input \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">終了\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    input \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> prompt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">コマンドを入力してください（終了するには「終了」と入力）:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 入力された内容を処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"2\">\n\u003Cli>\u003Cstrong>条件が満たされるまで続ける場合\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ランダムな数が10以上になるまで生成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> number \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (number \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    number \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Math.\u003C/span>\u003Cspan style=\"color:#50FA7B\">random\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`生成された数: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">number\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"3\">\n\u003Cli>\u003Cstrong>ファイル読み込みなどの外部リソース処理\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> data;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> ((data \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> readNextLine\u003C/span>\u003Cspan style=\"color:#F8F8F2\">()) \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#BD93F9\"> null\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // データを処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"実践的な例\">実践的な例\u003C/h2>\n\u003Ch3 id=\"1-素数判定プログラム\">1. 素数判定プログラム\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> isPrime\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">n\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (n \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (n \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // for文: 繰り返し回数が明確\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Math.\u003C/span>\u003Cspan style=\"color:#50FA7B\">sqrt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(n); i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (n \u003C/span>\u003Cspan style=\"color:#FF79C6\">%\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// while文: ユーザーが終了するまで続ける\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> input;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (input \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">quit\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    input \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> prompt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">数字を入力してください（終了はquit）:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (input \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">quit\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> number \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> parseInt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(input);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#50FA7B\">isNaN\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(number)) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">有効な数字を入力してください\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        continue\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">number\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">は\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#50FA7B\">isPrime\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(number)\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ?\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">素数です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\"> :\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">素数ではありません\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-配列の検索と処理\">2. 配列の検索と処理\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 商品データ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">りんご\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">バナナ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 200\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">オレンジ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 150\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// for文: 配列の全要素を処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> displayProducts\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">=== 商品一覧 ===\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">products[i].name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">products[i].price\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">円`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// while文: 特定の条件を満たすまで検索\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> findProduct\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">searchName\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products.length) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (products[i].name \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> searchName) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> products[i];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> null\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-データ入力と検証\">3. データ入力と検証\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> UserInput\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    static\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getValidAge\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#BD93F9\">true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> input \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> prompt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">年齢を入力してください（18-120）:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> parseInt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(input);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#50FA7B\">isNaN\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(age) \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 18\u003C/span>\u003Cspan style=\"color:#FF79C6\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 120\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">無効な年齢です。18から120の間で入力してください。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    static\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getValidEmail\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> emailRegex \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF5555\"> /\u003C/span>\u003Cspan style=\"color:#FF79C6\">^\u003C/span>\u003Cspan style=\"color:#8BE9FD\">[\u003C/span>\u003Cspan style=\"color:#FF5555\">^\u003C/span>\u003Cspan style=\"color:#BD93F9\">\\s\u003C/span>\u003Cspan style=\"color:#F1FA8C\">@\u003C/span>\u003Cspan style=\"color:#8BE9FD\">]\u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F1FA8C\">@\u003C/span>\u003Cspan style=\"color:#8BE9FD\">[\u003C/span>\u003Cspan style=\"color:#FF5555\">^\u003C/span>\u003Cspan style=\"color:#BD93F9\">\\s\u003C/span>\u003Cspan style=\"color:#F1FA8C\">@\u003C/span>\u003Cspan style=\"color:#8BE9FD\">]\u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\\.\u003C/span>\u003Cspan style=\"color:#8BE9FD\">[\u003C/span>\u003Cspan style=\"color:#FF5555\">^\u003C/span>\u003Cspan style=\"color:#BD93F9\">\\s\u003C/span>\u003Cspan style=\"color:#F1FA8C\">@\u003C/span>\u003Cspan style=\"color:#8BE9FD\">]\u003C/span>\u003Cspan style=\"color:#FF79C6\">+$\u003C/span>\u003Cspan style=\"color:#FF5555\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> email;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        do\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            email \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> prompt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">メールアドレスを入力してください:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        } \u003C/span>\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">emailRegex.\u003C/span>\u003Cspan style=\"color:#50FA7B\">test\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(email));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> email;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"4-ゲームのメインループ\">4. ゲームのメインループ\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> SimpleGame\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    constructor\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.score \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.isGameOver \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    run\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // while文: ゲームが終了するまで続ける\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.isGameOver) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">update\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">render\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.score \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">                this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.isGameOver \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`ゲーム終了！最終スコア: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.score\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    update\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // for文: 固定回数の更新処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.score \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Math.\u003C/span>\u003Cspan style=\"color:#50FA7B\">floor\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(Math.\u003C/span>\u003Cspan style=\"color:#50FA7B\">random\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    render\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`現在のスコア: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.score\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"よくある間違いと注意点\">よくある間違いと注意点\u003C/h2>\n\u003Ch3 id=\"1-無限ループ\">1. 無限ループ\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例: 終了条件が更新されない\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#BD93F9\">true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">無限ループ！\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例: 適切な終了条件\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> count \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (count \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(count);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    count\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// カウンターを更新\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-配列の境界チェック\">2. 配列の境界チェック\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例: 配列の範囲外にアクセス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> arr \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> arr.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {  \u003C/span>\u003Cspan style=\"color:#6272A4\">// &#x3C;= を使用している\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(arr[i]);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 最後の要素はundefined\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> arr.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {  \u003C/span>\u003Cspan style=\"color:#6272A4\">// &#x3C; を使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(arr[i]);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-ループ変数のスコープ\">3. ループ変数のスコープ\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例: varを使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">var\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // iはループ外でも参照可能\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(i);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 3が出力される\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例: letを使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // iはループ内でのみ有効\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// console.log(i);  // エラー: iは定義されていない\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"パフォーマンスとベストプラクティス\">パフォーマンスとベストプラクティス\u003C/h2>\n\u003Ch3 id=\"1-配列の長さを変数に格納\">1. 配列の長さを変数に格納\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例: 毎回lengthを計算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> array.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例: lengthを事前に計算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> len \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> array.length;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> len; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-break文とcontinue文の適切な使用\">2. break文とcontinue文の適切な使用\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// break文の例: 特定の条件で早期終了\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> items.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (items[i].isTarget) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">対象が見つかりました\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// ループを終了\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// continue文の例: 特定の条件をスキップ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (numbers[i] \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        continue\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 負の数はスキップ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(numbers[i]);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-適切なループの選択\">3. 適切なループの選択\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 配列の処理: for...ofを使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num \u003C/span>\u003Cspan style=\"color:#FF79C6\">of\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(num);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// オブジェクトの処理: for...inを使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> person \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> { name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, age\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 30\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> key \u003C/span>\u003Cspan style=\"color:#FF79C6\">in\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> person) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">key\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">person[key]\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 条件付きループ: whileを使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> attempts \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (attempts \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    attempts\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>for文とwhile文の使い分けのポイントは以下の通りです：\u003C/p>\n\u003Ch3 id=\"for文を使う場合\">for文を使う場合\u003C/h3>\n\u003Cul>\n\u003Cli>繰り返し回数が明確な場合\u003C/li>\n\u003Cli>配列やコレクションの処理\u003C/li>\n\u003Cli>カウンター変数を使用する処理\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"while文を使う場合\">while文を使う場合\u003C/h3>\n\u003Cul>\n\u003Cli>終了条件が不明確な場合\u003C/li>\n\u003Cli>ユーザー入力の処理\u003C/li>\n\u003Cli>条件が満たされるまで続ける処理\u003C/li>\n\u003C/ul>\n\u003Cp>どちらを選ぶかは、以下の点を考慮して判断しましょう：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>処理の性質\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>回数が決まっているか\u003C/li>\n\u003Cli>条件で終了するか\u003C/li>\n\u003Cli>データ構造に依存するか\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>可読性\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>どちらがコードの意図を明確に表現できるか\u003C/li>\n\u003Cli>メンテナンスのしやすさ\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>パフォーマンス\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>処理の効率性\u003C/li>\n\u003Cli>メモリの使用\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>適切なループ文を選択することで、より効率的で読みやすいコードを書くことができます。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>ループ処理の基本を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/if-statement-guide/\">【入門】条件分岐(if文)を理解してロジックを組み立てよう\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/function-basics-guide/\">【基礎から学ぶ】関数の作り方と使い方を徹底解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/algorithm-basics-explained/\">【図解】アルゴリズムとは？初心者が知るべき基本概念\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":662,"imagePaths":734,"frontmatter":735},[663,665,668,669,671,673,676,679,681,683,685,688,690,692,694,695,698,701,704,707,708,711,714,717,719,722,725,728,729,731,733],{"depth":26,"slug":664,"text":653},"初心者向けfor文とwhile文の使い分け完全ガイド",{"depth":29,"slug":666,"text":667},"ループ処理とは","ループ処理とは？",{"depth":29,"slug":392,"text":392},{"depth":33,"slug":670,"text":670},"基本構文",{"depth":33,"slug":672,"text":672},"具体例",{"depth":33,"slug":674,"text":675},"forof文とforin文","for…of文とfor…in文",{"depth":33,"slug":677,"text":678},"for-awaitof文","for await…of文",{"depth":29,"slug":680,"text":680},"while文の基本",{"depth":33,"slug":682,"text":670},"基本構文-1",{"depth":33,"slug":684,"text":672},"具体例-1",{"depth":33,"slug":686,"text":687},"dowhile文","do…while文",{"depth":29,"slug":689,"text":689},"for文とwhile文の使い分け",{"depth":33,"slug":691,"text":691},"for文が適している場合",{"depth":33,"slug":693,"text":693},"while文が適している場合",{"depth":29,"slug":350,"text":350},{"depth":33,"slug":696,"text":697},"1-素数判定プログラム","1. 素数判定プログラム",{"depth":33,"slug":699,"text":700},"2-配列の検索と処理","2. 配列の検索と処理",{"depth":33,"slug":702,"text":703},"3-データ入力と検証","3. データ入力と検証",{"depth":33,"slug":705,"text":706},"4-ゲームのメインループ","4. ゲームのメインループ",{"depth":29,"slug":479,"text":479},{"depth":33,"slug":709,"text":710},"1-無限ループ","1. 無限ループ",{"depth":33,"slug":712,"text":713},"2-配列の境界チェック","2. 配列の境界チェック",{"depth":33,"slug":715,"text":716},"3-ループ変数のスコープ","3. ループ変数のスコープ",{"depth":29,"slug":718,"text":718},"パフォーマンスとベストプラクティス",{"depth":33,"slug":720,"text":721},"1-配列の長さを変数に格納","1. 配列の長さを変数に格納",{"depth":33,"slug":723,"text":724},"2-break文とcontinue文の適切な使用","2. break文とcontinue文の適切な使用",{"depth":33,"slug":726,"text":727},"3-適切なループの選択","3. 適切なループの選択",{"depth":29,"slug":145,"text":145},{"depth":33,"slug":730,"text":730},"for文を使う場合",{"depth":33,"slug":732,"text":732},"while文を使う場合",{"depth":29,"slug":233,"text":233},[],{"title":653,"description":654,"pubDate":736,"heroImage":514},"Mar 12 2025","simple-calculator-python",{"id":737,"data":739,"body":743,"filePath":744,"digest":745,"rendered":746},{"title":740,"description":741,"pubDate":742,"heroImage":371},"【初心者向け】簡単な電卓アプリを作ってみよう！（Python編）","Pythonを使って基本的な四則演算ができる電卓アプリを作成する方法を、初心者向けにステップバイステップで解説します。",["Date","2025-03-13T15:00:00.000Z"],"# 【初心者向け】簡単な電卓アプリを作ってみよう！（Python編）\n\nプログラミング学習の定番として、電卓アプリの作成があります。この記事では、Pythonを使って基本的な四則演算（足し算、引き算、掛け算、割り算）ができる電卓アプリを作成する方法を、初心者向けにステップバイステップで解説します。\n\n## 目標とする機能\n\n今回作成する電卓アプリには、以下の機能を実装します：\n\n1. 二つの数値の入力を受け付ける\n2. 四則演算（+、-、*、/）の選択\n3. 計算結果の表示\n4. 続けて計算するかどうかの選択\n5. エラー処理（ゼロ除算、不正な入力など）\n\n## Step 1: 基本構造の作成\n\nまずは、プログラムの基本的な構造を作成します。\n\n```python\ndef main():\n    print(\"=== 簡単な電卓アプリ ===\")\n    \n    while True:\n        # メイン処理（後で実装）\n        pass\n        \n        # 続けるかどうかの確認\n        if not continue_calculation():\n            break\n    \n    print(\"電卓アプリを終了します。\")\n\ndef continue_calculation():\n    while True:\n        answer = input(\"続けて計算しますか？ (y/n): \").lower()\n        if answer in ['y', 'n']:\n            return answer == 'y'\n        print(\"yまたはnを入力してください。\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\nこのコードでは：\n- `main()` 関数：プログラムのメインロジックを含む\n- `continue_calculation()` 関数：ユーザーが計算を続けるかどうかを確認\n- 無限ループと `break` を使用して、ユーザーが終了を選択するまで計算を続ける\n\n## Step 2: 数値入力の実装\n\n次に、ユーザーから数値を入力받る機能を実装します。\n\n```python\ndef get_number(prompt):\n    while True:\n        try:\n            return float(input(prompt))\n        except ValueError:\n            print(\"有効な数値を入力してください。\")\n\ndef get_operator():\n    valid_operators = ['+', '-', '*', '/']\n    while True:\n        operator = input(\"演算子を入力してください (+, -, *, /): \")\n        if operator in valid_operators:\n            return operator\n        print(\"有効な演算子を入力してください。\")\n```\n\nこれらの関数は：\n- `get_number()`: 数値の入力を受け付け、不正な入力の場合はエラーメッセージを表示\n- `get_operator()`: 演算子の入力を受け付け、不正な入力の場合はエラーメッセージを表示\n\n## Step 3: 計算ロジックの実装\n\n計算を実行する関数を実装します。\n\n```python\ndef calculate(num1, operator, num2):\n    try:\n        if operator == '+':\n            return num1 + num2\n        elif operator == '-':\n            return num1 - num2\n        elif operator == '*':\n            return num1 * num2\n        elif operator == '/':\n            if num2 == 0:\n                raise ZeroDivisionError(\"ゼロによる除算はできません。\")\n            return num1 / num2\n    except ZeroDivisionError as e:\n        print(f\"エラー: {e}\")\n        return None\n```\n\nこの関数は：\n- 四則演算を実装\n- ゼロ除算のエラー処理を含む\n- エラーが発生した場合は `None` を返す\n\n## Step 4: メイン処理の実装\n\nこれまでの部品を組み合わせて、メイン処理を完成させます。\n\n```python\ndef main():\n    print(\"=== 簡単な電卓アプリ ===\")\n    \n    while True:\n        # 数値と演算子の入力\n        num1 = get_number(\"1つ目の数値を入力してください: \")\n        operator = get_operator()\n        num2 = get_number(\"2つ目の数値を入力してください: \")\n        \n        # 計算の実行\n        result = calculate(num1, operator, num2)\n        \n        # 結果の表示\n        if result is not None:\n            print(f\"\\n{num1} {operator} {num2} = {result}\\n\")\n        \n        # 続けるかどうかの確認\n        if not continue_calculation():\n            break\n    \n    print(\"電卓アプリを終了します。\")\n\n# 他の関数の定義（前述のコード）...\n\nif __name__ == \"__main__\":\n    main()\n```\n\n## 完成したコード\n\n以上の部品を組み合わせた完成版のコードです：\n\n```python\ndef get_number(prompt):\n    while True:\n        try:\n            return float(input(prompt))\n        except ValueError:\n            print(\"有効な数値を入力してください。\")\n\ndef get_operator():\n    valid_operators = ['+', '-', '*', '/']\n    while True:\n        operator = input(\"演算子を入力してください (+, -, *, /): \")\n        if operator in valid_operators:\n            return operator\n        print(\"有効な演算子を入力してください。\")\n\ndef calculate(num1, operator, num2):\n    try:\n        if operator == '+':\n            return num1 + num2\n        elif operator == '-':\n            return num1 - num2\n        elif operator == '*':\n            return num1 * num2\n        elif operator == '/':\n            if num2 == 0:\n                raise ZeroDivisionError(\"ゼロによる除算はできません。\")\n            return num1 / num2\n    except ZeroDivisionError as e:\n        print(f\"エラー: {e}\")\n        return None\n\ndef continue_calculation():\n    while True:\n        answer = input(\"続けて計算しますか？ (y/n): \").lower()\n        if answer in ['y', 'n']:\n            return answer == 'y'\n        print(\"yまたはnを入力してください。\")\n\ndef main():\n    print(\"=== 簡単な電卓アプリ ===\")\n    \n    while True:\n        # 数値と演算子の入力\n        num1 = get_number(\"1つ目の数値を入力してください: \")\n        operator = get_operator()\n        num2 = get_number(\"2つ目の数値を入力してください: \")\n        \n        # 計算の実行\n        result = calculate(num1, operator, num2)\n        \n        # 結果の表示\n        if result is not None:\n            print(f\"\\n{num1} {operator} {num2} = {result}\\n\")\n        \n        # 続けるかどうかの確認\n        if not continue_calculation():\n            break\n    \n    print(\"電卓アプリを終了します。\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n## 使用例\n\nこのプログラムを実行すると、以下のような対話形式で計算を行うことができます：\n\n```\n=== 簡単な電卓アプリ ===\n1つ目の数値を入力してください: 10\n演算子を入力してください (+, -, *, /): +\n2つ目の数値を入力してください: 5\n\n10.0 + 5.0 = 15.0\n\n続けて計算しますか？ (y/n): y\n1つ目の数値を入力してください: 20\n演算子を入力してください (+, -, *, /): /\n2つ目の数値を入力してください: 0\nエラー: ゼロによる除算はできません。\n続けて計算しますか？ (y/n): n\n電卓アプリを終了します。\n```\n\n## プログラムの解説\n\n### 1. エラー処理\n\nプログラムには以下のようなエラー処理が実装されています：\n\n- 数値入力時の不正な値（`ValueError`）\n- ゼロによる除算（`ZeroDivisionError`）\n- 不正な演算子の入力\n- 不正な継続確認の回答\n\n### 2. 関数の役割\n\n各関数の役割を詳しく見ていきましょう：\n\n1. **get_number(prompt)**\n   - 数値の入力を受け付ける\n   - 文字列を浮動小数点数に変換\n   - 不正な入力の場合は再入力を要求\n\n2. **get_operator()**\n   - 演算子の入力を受け付ける\n   - 有効な演算子かどうかをチェック\n   - 不正な入力の場合は再入力を要求\n\n3. **calculate(num1, operator, num2)**\n   - 実際の計算を行う\n   - 演算子に応じて適切な計算を実行\n   - ゼロ除算のエラー処理を含む\n\n4. **continue_calculation()**\n   - 計算を続けるかどうかの確認\n   - y/n以外の入力を防ぐ\n\n5. **main()**\n   - プログラムの全体の流れを制御\n   - 各関数を適切な順序で呼び出し\n\n### 3. プログラムの拡張性\n\nこのプログラムは以下のような方向に拡張可能です：\n\n1. **追加の演算機能**\n   - べき乗（`**`）\n   - 剰余（`%`）\n   - 切り捨て除算（`//`）\n\n2. **高度な機能**\n   - 計算履歴の保存\n   - 複数の数値の連続計算\n   - 数式の解析と計算\n\n3. **ユーザーインターフェースの改善**\n   - GUIの実装（tkinterなど）\n   - より詳細なエラーメッセージ\n   - ヘルプ機能の追加\n\n## まとめ\n\nこの記事では、Pythonを使って基本的な電卓アプリを作成する方法を学びました。\n\n実装したポイント：\n1. 基本的な四則演算\n2. エラー処理\n3. ユーザー入力の検証\n4. プログラムの構造化（関数分割）\n\nこのプログラムを基礎として、より高度な機能を追加したり、GUIを実装したりすることで、プログラミングの理解を深めることができます。\n\n## 次のステップ\n\n電卓アプリの基本を理解したら、以下の記事も参考にしてください：\n\n- [変数・データ型・関数とは？初心者向けに超わかりやすく解説](/blog/programming-basics-for-beginners/)\n- [【入門】条件分岐(if文)を理解してロジックを組み立てよう](/blog/if-statement-guide/)\n- [【初心者向け】for文とwhile文の使い分け完全ガイド](/blog/loop-statement-guide/)","src/content/blog/simple-calculator-python.md","b3a2a413afe33268",{"html":747,"metadata":748},"\u003Ch1 id=\"初心者向け簡単な電卓アプリを作ってみようpython編\">【初心者向け】簡単な電卓アプリを作ってみよう！（Python編）\u003C/h1>\n\u003Cp>プログラミング学習の定番として、電卓アプリの作成があります。この記事では、Pythonを使って基本的な四則演算（足し算、引き算、掛け算、割り算）ができる電卓アプリを作成する方法を、初心者向けにステップバイステップで解説します。\u003C/p>\n\u003Ch2 id=\"目標とする機能\">目標とする機能\u003C/h2>\n\u003Cp>今回作成する電卓アプリには、以下の機能を実装します：\u003C/p>\n\u003Col>\n\u003Cli>二つの数値の入力を受け付ける\u003C/li>\n\u003Cli>四則演算（+、-、*、/）の選択\u003C/li>\n\u003Cli>計算結果の表示\u003C/li>\n\u003Cli>続けて計算するかどうかの選択\u003C/li>\n\u003Cli>エラー処理（ゼロ除算、不正な入力など）\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"step-1-基本構造の作成\">Step 1: 基本構造の作成\u003C/h2>\n\u003Cp>まずは、プログラムの基本的な構造を作成します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> main\u003C/span>\u003Cspan style=\"color:#F8F8F2\">():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">=== 簡単な電卓アプリ ===\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    while\u003C/span>\u003Cspan style=\"color:#BD93F9\"> True\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # メイン処理（後で実装）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        pass\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # 続けるかどうかの確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#FF79C6\"> not\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> continue_calculation():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            break\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">電卓アプリを終了します。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> continue_calculation\u003C/span>\u003Cspan style=\"color:#F8F8F2\">():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    while\u003C/span>\u003Cspan style=\"color:#BD93F9\"> True\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        answer \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> input\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">続けて計算しますか？ (y/n): \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).lower()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> answer \u003C/span>\u003Cspan style=\"color:#FF79C6\">in\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">y\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">n\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> answer \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">y\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">yまたはnを入力してください。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#BD93F9\"> __name__\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ==\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">__main__\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    main()\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>このコードでは：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>main()\u003C/code> 関数：プログラムのメインロジックを含む\u003C/li>\n\u003Cli>\u003Ccode>continue_calculation()\u003C/code> 関数：ユーザーが計算を続けるかどうかを確認\u003C/li>\n\u003Cli>無限ループと \u003Ccode>break\u003C/code> を使用して、ユーザーが終了を選択するまで計算を続ける\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"step-2-数値入力の実装\">Step 2: 数値入力の実装\u003C/h2>\n\u003Cp>次に、ユーザーから数値を入力받る機能を実装します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> get_number\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">prompt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    while\u003C/span>\u003Cspan style=\"color:#BD93F9\"> True\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        try\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> float\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#8BE9FD\">input\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(prompt))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        except\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> ValueError\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">            print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">有効な数値を入力してください。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> get_operator\u003C/span>\u003Cspan style=\"color:#F8F8F2\">():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    valid_operators \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">+\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">-\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">*\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    while\u003C/span>\u003Cspan style=\"color:#BD93F9\"> True\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> input\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">演算子を入力してください (+, -, *, /): \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">in\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> valid_operators:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">有効な演算子を入力してください。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>これらの関数は：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>get_number()\u003C/code>: 数値の入力を受け付け、不正な入力の場合はエラーメッセージを表示\u003C/li>\n\u003Cli>\u003Ccode>get_operator()\u003C/code>: 演算子の入力を受け付け、不正な入力の場合はエラーメッセージを表示\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"step-3-計算ロジックの実装\">Step 3: 計算ロジックの実装\u003C/h2>\n\u003Cp>計算を実行する関数を実装します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculate\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">num1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">operator\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">num2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    try\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">+\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        elif\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">-\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        elif\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">*\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        elif\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num2 \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                raise\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> ZeroDivisionError\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ゼロによる除算はできません。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    except\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> ZeroDivisionError\u003C/span>\u003Cspan style=\"color:#FF79C6\"> as\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> e:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"エラー: \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">e\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> None\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>この関数は：\u003C/p>\n\u003Cul>\n\u003Cli>四則演算を実装\u003C/li>\n\u003Cli>ゼロ除算のエラー処理を含む\u003C/li>\n\u003Cli>エラーが発生した場合は \u003Ccode>None\u003C/code> を返す\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"step-4-メイン処理の実装\">Step 4: メイン処理の実装\u003C/h2>\n\u003Cp>これまでの部品を組み合わせて、メイン処理を完成させます。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> main\u003C/span>\u003Cspan style=\"color:#F8F8F2\">():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">=== 簡単な電卓アプリ ===\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    while\u003C/span>\u003Cspan style=\"color:#BD93F9\"> True\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # 数値と演算子の入力\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        num1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> get_number(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">1つ目の数値を入力してください: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> get_operator()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        num2 \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> get_number(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">2つ目の数値を入力してください: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # 計算の実行\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> calculate(num1, operator, num2)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # 結果の表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result \u003C/span>\u003Cspan style=\"color:#FF79C6\">is\u003C/span>\u003Cspan style=\"color:#FF79C6\"> not\u003C/span>\u003Cspan style=\"color:#BD93F9\"> None\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">            print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">\\n\u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">num1\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#BD93F9\"> {\u003C/span>\u003Cspan style=\"color:#F8F8F2\">operator\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#BD93F9\"> {\u003C/span>\u003Cspan style=\"color:#F8F8F2\">num2\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> = \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">result\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#FF79C6\">\\n\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # 続けるかどうかの確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#FF79C6\"> not\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> continue_calculation():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            break\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">電卓アプリを終了します。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># 他の関数の定義（前述のコード）...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#BD93F9\"> __name__\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ==\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">__main__\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    main()\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"完成したコード\">完成したコード\u003C/h2>\n\u003Cp>以上の部品を組み合わせた完成版のコードです：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> get_number\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">prompt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    while\u003C/span>\u003Cspan style=\"color:#BD93F9\"> True\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        try\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> float\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#8BE9FD\">input\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(prompt))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        except\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> ValueError\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">            print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">有効な数値を入力してください。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> get_operator\u003C/span>\u003Cspan style=\"color:#F8F8F2\">():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    valid_operators \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">+\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">-\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">*\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    while\u003C/span>\u003Cspan style=\"color:#BD93F9\"> True\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> input\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">演算子を入力してください (+, -, *, /): \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">in\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> valid_operators:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">有効な演算子を入力してください。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculate\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">num1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">operator\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">num2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    try\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">+\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        elif\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">-\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        elif\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">*\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        elif\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num2 \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                raise\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> ZeroDivisionError\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ゼロによる除算はできません。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    except\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> ZeroDivisionError\u003C/span>\u003Cspan style=\"color:#FF79C6\"> as\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> e:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"エラー: \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">e\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> None\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> continue_calculation\u003C/span>\u003Cspan style=\"color:#F8F8F2\">():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    while\u003C/span>\u003Cspan style=\"color:#BD93F9\"> True\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        answer \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> input\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">続けて計算しますか？ (y/n): \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).lower()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> answer \u003C/span>\u003Cspan style=\"color:#FF79C6\">in\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">y\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">n\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> answer \u003C/span>\u003Cspan style=\"color:#FF79C6\">==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">y\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">yまたはnを入力してください。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> main\u003C/span>\u003Cspan style=\"color:#F8F8F2\">():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">=== 簡単な電卓アプリ ===\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    while\u003C/span>\u003Cspan style=\"color:#BD93F9\"> True\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # 数値と演算子の入力\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        num1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> get_number(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">1つ目の数値を入力してください: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        operator \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> get_operator()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        num2 \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> get_number(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">2つ目の数値を入力してください: \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # 計算の実行\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> calculate(num1, operator, num2)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # 結果の表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result \u003C/span>\u003Cspan style=\"color:#FF79C6\">is\u003C/span>\u003Cspan style=\"color:#FF79C6\"> not\u003C/span>\u003Cspan style=\"color:#BD93F9\"> None\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">            print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">\\n\u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">num1\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#BD93F9\"> {\u003C/span>\u003Cspan style=\"color:#F8F8F2\">operator\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#BD93F9\"> {\u003C/span>\u003Cspan style=\"color:#F8F8F2\">num2\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> = \u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">result\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#FF79C6\">\\n\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        # 続けるかどうかの確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#FF79C6\"> not\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> continue_calculation():\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            break\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">電卓アプリを終了します。\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#BD93F9\"> __name__\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ==\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">__main__\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    main()\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"使用例\">使用例\u003C/h2>\n\u003Cp>このプログラムを実行すると、以下のような対話形式で計算を行うことができます：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>=== 簡単な電卓アプリ ===\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>1つ目の数値を入力してください: 10\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>演算子を入力してください (+, -, *, /): +\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>2つ目の数値を入力してください: 5\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>10.0 + 5.0 = 15.0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>続けて計算しますか？ (y/n): y\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>1つ目の数値を入力してください: 20\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>演算子を入力してください (+, -, *, /): /\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>2つ目の数値を入力してください: 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>エラー: ゼロによる除算はできません。\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>続けて計算しますか？ (y/n): n\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>電卓アプリを終了します。\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"プログラムの解説\">プログラムの解説\u003C/h2>\n\u003Ch3 id=\"1-エラー処理\">1. エラー処理\u003C/h3>\n\u003Cp>プログラムには以下のようなエラー処理が実装されています：\u003C/p>\n\u003Cul>\n\u003Cli>数値入力時の不正な値（\u003Ccode>ValueError\u003C/code>）\u003C/li>\n\u003Cli>ゼロによる除算（\u003Ccode>ZeroDivisionError\u003C/code>）\u003C/li>\n\u003Cli>不正な演算子の入力\u003C/li>\n\u003Cli>不正な継続確認の回答\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-関数の役割\">2. 関数の役割\u003C/h3>\n\u003Cp>各関数の役割を詳しく見ていきましょう：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>get_number(prompt)\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>数値の入力を受け付ける\u003C/li>\n\u003Cli>文字列を浮動小数点数に変換\u003C/li>\n\u003Cli>不正な入力の場合は再入力を要求\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>get_operator()\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>演算子の入力を受け付ける\u003C/li>\n\u003Cli>有効な演算子かどうかをチェック\u003C/li>\n\u003Cli>不正な入力の場合は再入力を要求\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>calculate(num1, operator, num2)\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>実際の計算を行う\u003C/li>\n\u003Cli>演算子に応じて適切な計算を実行\u003C/li>\n\u003Cli>ゼロ除算のエラー処理を含む\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>continue_calculation()\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>計算を続けるかどうかの確認\u003C/li>\n\u003Cli>y/n以外の入力を防ぐ\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>main()\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>プログラムの全体の流れを制御\u003C/li>\n\u003Cli>各関数を適切な順序で呼び出し\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"3-プログラムの拡張性\">3. プログラムの拡張性\u003C/h3>\n\u003Cp>このプログラムは以下のような方向に拡張可能です：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>追加の演算機能\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>べき乗（\u003Ccode>**\u003C/code>）\u003C/li>\n\u003Cli>剰余（\u003Ccode>%\u003C/code>）\u003C/li>\n\u003Cli>切り捨て除算（\u003Ccode>//\u003C/code>）\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>高度な機能\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>計算履歴の保存\u003C/li>\n\u003Cli>複数の数値の連続計算\u003C/li>\n\u003Cli>数式の解析と計算\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>ユーザーインターフェースの改善\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>GUIの実装（tkinterなど）\u003C/li>\n\u003Cli>より詳細なエラーメッセージ\u003C/li>\n\u003Cli>ヘルプ機能の追加\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>この記事では、Pythonを使って基本的な電卓アプリを作成する方法を学びました。\u003C/p>\n\u003Cp>実装したポイント：\u003C/p>\n\u003Col>\n\u003Cli>基本的な四則演算\u003C/li>\n\u003Cli>エラー処理\u003C/li>\n\u003Cli>ユーザー入力の検証\u003C/li>\n\u003Cli>プログラムの構造化（関数分割）\u003C/li>\n\u003C/ol>\n\u003Cp>このプログラムを基礎として、より高度な機能を追加したり、GUIを実装したりすることで、プログラミングの理解を深めることができます。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>電卓アプリの基本を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/programming-basics-for-beginners/\">変数・データ型・関数とは？初心者向けに超わかりやすく解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/if-statement-guide/\">【入門】条件分岐(if文)を理解してロジックを組み立てよう\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/loop-statement-guide/\">【初心者向け】for文とwhile文の使い分け完全ガイド\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":749,"imagePaths":783,"frontmatter":784},[750,752,754,757,760,763,766,768,770,772,775,778,781,782],{"depth":26,"slug":751,"text":740},"初心者向け簡単な電卓アプリを作ってみようpython編",{"depth":29,"slug":753,"text":753},"目標とする機能",{"depth":29,"slug":755,"text":756},"step-1-基本構造の作成","Step 1: 基本構造の作成",{"depth":29,"slug":758,"text":759},"step-2-数値入力の実装","Step 2: 数値入力の実装",{"depth":29,"slug":761,"text":762},"step-3-計算ロジックの実装","Step 3: 計算ロジックの実装",{"depth":29,"slug":764,"text":765},"step-4-メイン処理の実装","Step 4: メイン処理の実装",{"depth":29,"slug":767,"text":767},"完成したコード",{"depth":29,"slug":769,"text":769},"使用例",{"depth":29,"slug":771,"text":771},"プログラムの解説",{"depth":33,"slug":773,"text":774},"1-エラー処理","1. エラー処理",{"depth":33,"slug":776,"text":777},"2-関数の役割","2. 関数の役割",{"depth":33,"slug":779,"text":780},"3-プログラムの拡張性","3. プログラムの拡張性",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":740,"description":741,"pubDate":785,"heroImage":371},"Mar 14 2025","programming-error-handling-guide",{"id":786,"data":788,"body":792,"filePath":793,"digest":794,"rendered":795},{"title":789,"description":790,"pubDate":791,"heroImage":371},"【初心者向け】プログラミングのエラーの種類と対処法","プログラミング初心者のために、よくあるエラーの種類と具体的な対処法を解説します。",["Date","2025-03-06T15:00:00.000Z"],"# 【初心者向け】プログラミングのエラーの種類と対処法\n\nプログラミングを学び始めると必ず遭遇するのが「エラー」です。最初は英語のエラーメッセージを見ただけで心が折れそうになるかもしれませんが、実はエラーは私たちの良き先生です。この記事では、プログラミングでよく遭遇するエラーの種類と、その対処法について具体例を交えて解説します。\n\n## エラーとは何か？\n\nエラーとは、プログラムが正常に動作しない状態を指します。大きく分けて以下の3つのカテゴリーがあります：\n\n1. **構文エラー（Syntax Error）**：文法の間違い\n2. **実行時エラー（Runtime Error）**：実行中に発生するエラー\n3. **論理エラー（Logical Error）**：プログラムは動くが、期待した結果にならない\n\n## 1. 構文エラー（Syntax Error）\n\n### 特徴\n- コードの文法規則に違反している\n- プログラムが実行される前に検出される\n- 比較的見つけやすい\n\n### よくある例と対処法\n\n#### 1) 括弧の閉じ忘れ\n\n```javascript\n// 間違った例\nfunction calculateSum(a, b {\n  return a + b;\n}\n\n// 正しい例\nfunction calculateSum(a, b) {\n  return a + b;\n}\n```\n\n**対処法**：\n- エディタの括弧の強調表示機能を活用する\n- コードを整形する（インデント）\n- 括弧を書くときは閉じ括弧まで先に書く\n\n#### 2) セミコロンの付け忘れ\n\n```javascript\n// 間違った例\nlet name = \"太郎\"\nconsole.log(name)\n\n// 正しい例\nlet name = \"太郎\";\nconsole.log(name);\n```\n\n**対処法**：\n- 自動フォーマッターを使用する\n- 文の終わりには必ずセミコロンを付ける習慣をつける\n\n#### 3) スペルミス\n\n```javascript\n// 間違った例\ncosole.log(\"Hello\");  // console が間違っている\n\n// 正しい例\nconsole.log(\"Hello\");\n```\n\n**対処法**：\n- コード補完機能を活用する\n- エディタの警告に注意を払う\n- 正しいスペルを覚える\n\n## 2. 実行時エラー（Runtime Error）\n\n### 特徴\n- プログラムの実行中に発生する\n- 予期しないデータや状況で発生することがある\n- デバッグが必要な場合が多い\n\n### よくある例と対処法\n\n#### 1) TypeError（型エラー）\n\n```javascript\n// エラーの例\nlet text = \"Hello\";\ntext.push(\"World\");  // 文字列に配列のメソッドを使用している\n\n// 正しい例\nlet text = \"Hello\";\ntext = text + \" World\";  // または\ntext += \" World\";\n```\n\n**対処法**：\n- 変数の型を確認する（`typeof` 演算子を使用）\n- その型で使用できるメソッドを確認する\n- 型変換が必要か検討する\n\n#### 2) ReferenceError（参照エラー）\n\n```javascript\n// エラーの例\nconsole.log(undefinedVariable);  // 定義されていない変数を使用\n\n// 正しい例\nlet definedVariable = \"Hello\";\nconsole.log(definedVariable);\n```\n\n**対処法**：\n- 変数が定義されているか確認する\n- スコープを確認する\n- 変数名のタイプミスをチェックする\n\n#### 3) RangeError（範囲エラー）\n\n```javascript\n// エラーの例\nlet arr = new Array(-1);  // 配列のサイズに負の数を指定\n\n// 正しい例\nlet arr = new Array(5);  // 正の整数を指定\n```\n\n**対処法**：\n- 値が適切な範囲内かチェックする\n- 境界値のテストを行う\n- 入力値のバリデーションを実装する\n\n## 3. 論理エラー（Logical Error）\n\n### 特徴\n- プログラムは動くが、期待した結果にならない\n- 発見が最も難しい\n- デバッグに時間がかかることが多い\n\n### よくある例と対処法\n\n#### 1) 計算の順序の間違い\n\n```javascript\n// 間違った例（平均値の計算）\nlet scores = [80, 90, 75];\nlet average = scores[0] + scores[1] + scores[2] / 3;  // 75を3で割ってから加算している\n\n// 正しい例\nlet average = (scores[0] + scores[1] + scores[2]) / 3;  // 全ての合計を3で割る\n```\n\n**対処法**：\n- 計算式を紙に書いて確認する\n- 小さな値でテストする\n- 括弧を使って計算の順序を明確にする\n\n#### 2) 条件式の論理の誤り\n\n```javascript\n// 間違った例（18歳以上AND20歳未満をチェックしたい場合）\nif (age >= 18 || age \u003C 20) {  // OR演算子を使っている\n  console.log(\"対象年齢です\");\n}\n\n// 正しい例\nif (age >= 18 && age \u003C 20) {  // AND演算子を使う\n  console.log(\"対象年齢です\");\n}\n```\n\n**対処法**：\n- 条件式を日本語で書き出してみる\n- 境界値でテストする\n- 真理値表を作成する\n\n#### 3) 無限ループ\n\n```javascript\n// 間違った例\nlet i = 0;\nwhile (i \u003C 10) {\n  console.log(i);\n  // iをインクリメントし忘れている\n}\n\n// 正しい例\nlet i = 0;\nwhile (i \u003C 10) {\n  console.log(i);\n  i++;  // ループ変数を更新\n}\n```\n\n**対処法**：\n- ループの終了条件を確認する\n- ループ変数が適切に更新されているか確認する\n- 最大繰り返し回数を設定する\n\n## エラーの効率的な対処方法\n\n### 1. エラーメッセージを読む\n\nエラーメッセージには重要な情報が含まれています：\n\n```javascript\nTypeError: Cannot read property 'name' of undefined\n    at Object.\u003Canonymous> (/path/to/file.js:10:20)\n```\n\nこのエラーメッセージから分かること：\n- エラーの種類：TypeError\n- 問題の内容：undefinedのプロパティにアクセスしようとした\n- 発生場所：file.jsの10行目、20文字目\n\n### 2. コンソールログを活用する\n\n```javascript\nfunction calculateTotal(price, quantity) {\n  console.log('Price:', price);  // 入力値の確認\n  console.log('Quantity:', quantity);\n  \n  let total = price * quantity;\n  console.log('Total before tax:', total);  // 中間結果の確認\n  \n  let tax = total * 0.1;\n  console.log('Tax:', tax);\n  \n  total += tax;\n  console.log('Final total:', total);  // 最終結果の確認\n  \n  return total;\n}\n```\n\n### 3. デバッガーを使用する\n\n```javascript\nfunction complexCalculation(a, b) {\n  debugger;  // ここでプログラムが一時停止する\n  \n  let result = 0;\n  for (let i = 0; i \u003C a; i++) {\n    result += i * b;\n  }\n  \n  return result;\n}\n```\n\n### 4. エラーを予防するベストプラクティス\n\n#### 入力値の検証\n\n```javascript\nfunction divide(a, b) {\n  // 引数の型をチェック\n  if (typeof a !== 'number' || typeof b !== 'number') {\n    throw new Error('引数は数値である必要があります');\n  }\n  \n  // ゼロ除算を防ぐ\n  if (b === 0) {\n    throw new Error('0で除算することはできません');\n  }\n  \n  return a / b;\n}\n```\n\n#### try-catch文の使用\n\n```javascript\ntry {\n  let result = divide(10, 0);\n  console.log(result);\n} catch (error) {\n  console.error('エラーが発生しました:', error.message);\n  // エラーの適切な処理を行う\n} finally {\n  // 必ず実行したい処理\n  console.log('計算処理を終了します');\n}\n```\n\n## エラー対処のためのツール\n\n### 1. 開発者ツール（Developer Tools）\n\nブラウザの開発者ツールを使用すると：\n- エラーメッセージの詳細確認\n- コンソールログの表示\n- ブレークポイントの設定\n- ネットワークリクエストの監視\nが可能です。\n\n### 2. リンター（Linter）\n\nESLintなどのリンターを使用すると：\n- 構文エラーの早期発見\n- コーディング規約の遵守\n- 潜在的な問題の指摘\nができます。\n\n```javascript\n// .eslintrc.js の設定例\nmodule.exports = {\n  \"rules\": {\n    \"semi\": [\"error\", \"always\"],  // セミコロンの必須化\n    \"no-unused-vars\": \"warn\",     // 未使用変数の警告\n    \"eqeqeq\": \"error\"            // 厳密等価演算子の使用を強制\n  }\n};\n```\n\n### 3. 型チェック\n\nTypeScriptを使用すると、多くのエラーを事前に防ぐことができます：\n\n```typescript\n// TypeScriptの例\nfunction greet(name: string): string {\n  return `Hello, ${name}!`;\n}\n\ngreet(42);  // コンパイルエラー：数値は文字列型に割り当てられません\n```\n\n## まとめ\n\nプログラミングにおけるエラーは避けられませんが、以下の点を意識することで効率的に対処できます：\n\n1. エラーメッセージをよく読む\n2. デバッグツールを活用する\n3. コードを小さな単位でテストする\n4. エラーの種類と対処法を理解する\n5. 予防的な措置を講じる\n\nエラーに遭遇したときは、慌てずに一つずつ確認していくことが重要です。エラーメッセージは私たちにヒントを与えてくれる良き先生だと考えて、前向きに取り組んでいきましょう。\n\n## 次のステップ\n\nエラー対処の基本を理解したら、以下の記事も参考にしてください：\n\n- [変数・データ型・関数とは？初心者向けに超わかりやすく解説](/blog/programming-basics-for-beginners/)\n- [プログラミング初心者が最初に学ぶべき5つの概念](/blog/programming-concepts-for-beginners/)\n- [【図解】アルゴリズムとは？初心者が知るべき基本概念](/blog/algorithm-basics-explained/)","src/content/blog/programming-error-handling-guide.md","9c4f85dd1c9bd308",{"html":796,"metadata":797},"\u003Ch1 id=\"初心者向けプログラミングのエラーの種類と対処法\">【初心者向け】プログラミングのエラーの種類と対処法\u003C/h1>\n\u003Cp>プログラミングを学び始めると必ず遭遇するのが「エラー」です。最初は英語のエラーメッセージを見ただけで心が折れそうになるかもしれませんが、実はエラーは私たちの良き先生です。この記事では、プログラミングでよく遭遇するエラーの種類と、その対処法について具体例を交えて解説します。\u003C/p>\n\u003Ch2 id=\"エラーとは何か\">エラーとは何か？\u003C/h2>\n\u003Cp>エラーとは、プログラムが正常に動作しない状態を指します。大きく分けて以下の3つのカテゴリーがあります：\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>構文エラー（Syntax Error）\u003C/strong>：文法の間違い\u003C/li>\n\u003Cli>\u003Cstrong>実行時エラー（Runtime Error）\u003C/strong>：実行中に発生するエラー\u003C/li>\n\u003Cli>\u003Cstrong>論理エラー（Logical Error）\u003C/strong>：プログラムは動くが、期待した結果にならない\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"1-構文エラーsyntax-error\">1. 構文エラー（Syntax Error）\u003C/h2>\n\u003Ch3 id=\"特徴\">特徴\u003C/h3>\n\u003Cul>\n\u003Cli>コードの文法規則に違反している\u003C/li>\n\u003Cli>プログラムが実行される前に検出される\u003C/li>\n\u003Cli>比較的見つけやすい\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"よくある例と対処法\">よくある例と対処法\u003C/h3>\n\u003Ch4 id=\"1-括弧の閉じ忘れ\">1) 括弧の閉じ忘れ\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 間違った例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateSum\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFB86C;font-style:italic\">  return\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> a\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> + \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFB86C;font-style:italic\">function\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> calculateSum\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>対処法\u003C/strong>：\u003C/p>\n\u003Cul>\n\u003Cli>エディタの括弧の強調表示機能を活用する\u003C/li>\n\u003Cli>コードを整形する（インデント）\u003C/li>\n\u003Cli>括弧を書くときは閉じ括弧まで先に書く\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"2-セミコロンの付け忘れ\">2) セミコロンの付け忘れ\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 間違った例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(name)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(name);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>対処法\u003C/strong>：\u003C/p>\n\u003Cul>\n\u003Cli>自動フォーマッターを使用する\u003C/li>\n\u003Cli>文の終わりには必ずセミコロンを付ける習慣をつける\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"3-スペルミス\">3) スペルミス\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 間違った例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">cosole.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// console が間違っている\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>対処法\u003C/strong>：\u003C/p>\n\u003Cul>\n\u003Cli>コード補完機能を活用する\u003C/li>\n\u003Cli>エディタの警告に注意を払う\u003C/li>\n\u003Cli>正しいスペルを覚える\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"2-実行時エラーruntime-error\">2. 実行時エラー（Runtime Error）\u003C/h2>\n\u003Ch3 id=\"特徴-1\">特徴\u003C/h3>\n\u003Cul>\n\u003Cli>プログラムの実行中に発生する\u003C/li>\n\u003Cli>予期しないデータや状況で発生することがある\u003C/li>\n\u003Cli>デバッグが必要な場合が多い\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"よくある例と対処法-1\">よくある例と対処法\u003C/h3>\n\u003Ch4 id=\"1-typeerror型エラー\">1) TypeError（型エラー）\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// エラーの例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> text \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">text.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">World\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 文字列に配列のメソッドを使用している\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> text \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">text \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> text \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> World\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// または\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">text \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> World\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>対処法\u003C/strong>：\u003C/p>\n\u003Cul>\n\u003Cli>変数の型を確認する（\u003Ccode>typeof\u003C/code> 演算子を使用）\u003C/li>\n\u003Cli>その型で使用できるメソッドを確認する\u003C/li>\n\u003Cli>型変換が必要か検討する\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"2-referenceerror参照エラー\">2) ReferenceError（参照エラー）\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// エラーの例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(undefinedVariable);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 定義されていない変数を使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> definedVariable \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(definedVariable);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>対処法\u003C/strong>：\u003C/p>\n\u003Cul>\n\u003Cli>変数が定義されているか確認する\u003C/li>\n\u003Cli>スコープを確認する\u003C/li>\n\u003Cli>変数名のタイプミスをチェックする\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"3-rangeerror範囲エラー\">3) RangeError（範囲エラー）\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// エラーの例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> arr \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Array\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 配列のサイズに負の数を指定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> arr \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Array\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 正の整数を指定\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>対処法\u003C/strong>：\u003C/p>\n\u003Cul>\n\u003Cli>値が適切な範囲内かチェックする\u003C/li>\n\u003Cli>境界値のテストを行う\u003C/li>\n\u003Cli>入力値のバリデーションを実装する\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"3-論理エラーlogical-error\">3. 論理エラー（Logical Error）\u003C/h2>\n\u003Ch3 id=\"特徴-2\">特徴\u003C/h3>\n\u003Cul>\n\u003Cli>プログラムは動くが、期待した結果にならない\u003C/li>\n\u003Cli>発見が最も難しい\u003C/li>\n\u003Cli>デバッグに時間がかかることが多い\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"よくある例と対処法-2\">よくある例と対処法\u003C/h3>\n\u003Ch4 id=\"1-計算の順序の間違い\">1) 計算の順序の間違い\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 間違った例（平均値の計算）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">80\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">90\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">75\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> average \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores[\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores[\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores[\u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 75を3で割ってから加算している\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> average \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (scores[\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores[\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> scores[\u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]) \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 全ての合計を3で割る\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>対処法\u003C/strong>：\u003C/p>\n\u003Cul>\n\u003Cli>計算式を紙に書いて確認する\u003C/li>\n\u003Cli>小さな値でテストする\u003C/li>\n\u003Cli>括弧を使って計算の順序を明確にする\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"2-条件式の論理の誤り\">2) 条件式の論理の誤り\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 間違った例（18歳以上AND20歳未満をチェックしたい場合）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 18\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ||\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {  \u003C/span>\u003Cspan style=\"color:#6272A4\">// OR演算子を使っている\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">対象年齢です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 18\u003C/span>\u003Cspan style=\"color:#FF79C6\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {  \u003C/span>\u003Cspan style=\"color:#6272A4\">// AND演算子を使う\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">対象年齢です\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>対処法\u003C/strong>：\u003C/p>\n\u003Cul>\n\u003Cli>条件式を日本語で書き出してみる\u003C/li>\n\u003Cli>境界値でテストする\u003C/li>\n\u003Cli>真理値表を作成する\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"3-無限ループ\">3) 無限ループ\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 間違った例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(i);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // iをインクリメントし忘れている\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(i);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// ループ変数を更新\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>対処法\u003C/strong>：\u003C/p>\n\u003Cul>\n\u003Cli>ループの終了条件を確認する\u003C/li>\n\u003Cli>ループ変数が適切に更新されているか確認する\u003C/li>\n\u003Cli>最大繰り返し回数を設定する\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"エラーの効率的な対処方法\">エラーの効率的な対処方法\u003C/h2>\n\u003Ch3 id=\"1-エラーメッセージを読む\">1. エラーメッセージを読む\u003C/h3>\n\u003Cp>エラーメッセージには重要な情報が含まれています：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">TypeError: Cannot read property \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">name\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> of\u003C/span>\u003Cspan style=\"color:#BD93F9\"> undefined\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    at Object.\u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\">anonymous\u003C/span>\u003Cspan style=\"color:#FF79C6\">>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\">path\u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\">to\u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\">file.js:\u003C/span>\u003Cspan style=\"color:#BD93F9\">10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\">20\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>このエラーメッセージから分かること：\u003C/p>\n\u003Cul>\n\u003Cli>エラーの種類：TypeError\u003C/li>\n\u003Cli>問題の内容：undefinedのプロパティにアクセスしようとした\u003C/li>\n\u003Cli>発生場所：file.jsの10行目、20文字目\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-コンソールログを活用する\">2. コンソールログを活用する\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">price\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">quantity\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Price:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, price);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 入力値の確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Quantity:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, quantity);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> price \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> quantity;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Total before tax:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, total);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 中間結果の確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> tax \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Tax:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, tax);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  total \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> tax;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Final total:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, total);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 最終結果の確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-デバッガーを使用する\">3. デバッガーを使用する\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> complexCalculation\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  debugger\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// ここでプログラムが一時停止する\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    result \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"4-エラーを予防するベストプラクティス\">4. エラーを予防するベストプラクティス\u003C/h3>\n\u003Ch4 id=\"入力値の検証\">入力値の検証\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> divide\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 引数の型をチェック\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">typeof\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">number\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ||\u003C/span>\u003Cspan style=\"color:#FF79C6\"> typeof\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">number\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    throw\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">引数は数値である必要があります\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ゼロ除算を防ぐ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (b \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    throw\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">0で除算することはできません\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"try-catch文の使用\">try-catch文の使用\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">try\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> divide\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(result);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">エラーが発生しました:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, error.message);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // エラーの適切な処理を行う\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">finally\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 必ず実行したい処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">計算処理を終了します\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"エラー対処のためのツール\">エラー対処のためのツール\u003C/h2>\n\u003Ch3 id=\"1-開発者ツールdeveloper-tools\">1. 開発者ツール（Developer Tools）\u003C/h3>\n\u003Cp>ブラウザの開発者ツールを使用すると：\u003C/p>\n\u003Cul>\n\u003Cli>エラーメッセージの詳細確認\u003C/li>\n\u003Cli>コンソールログの表示\u003C/li>\n\u003Cli>ブレークポイントの設定\u003C/li>\n\u003Cli>ネットワークリクエストの監視\nが可能です。\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-リンターlinter\">2. リンター（Linter）\u003C/h3>\n\u003Cp>ESLintなどのリンターを使用すると：\u003C/p>\n\u003Cul>\n\u003Cli>構文エラーの早期発見\u003C/li>\n\u003Cli>コーディング規約の遵守\u003C/li>\n\u003Cli>潜在的な問題の指摘\nができます。\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// .eslintrc.js の設定例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD;font-style:italic\">module\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">exports\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">  \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">rules\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">semi\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">error\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">always\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">],  \u003C/span>\u003Cspan style=\"color:#6272A4\">// セミコロンの必須化\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">no-unused-vars\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">warn\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,     \u003C/span>\u003Cspan style=\"color:#6272A4\">// 未使用変数の警告\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">eqeqeq\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">error\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#6272A4\">            // 厳密等価演算子の使用を強制\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-型チェック\">3. 型チェック\u003C/h3>\n\u003Cp>TypeScriptを使用すると、多くのエラーを事前に防ぐことができます：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"typescript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// TypeScriptの例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> string\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> string\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `Hello, \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">!`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">42\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// コンパイルエラー：数値は文字列型に割り当てられません\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>プログラミングにおけるエラーは避けられませんが、以下の点を意識することで効率的に対処できます：\u003C/p>\n\u003Col>\n\u003Cli>エラーメッセージをよく読む\u003C/li>\n\u003Cli>デバッグツールを活用する\u003C/li>\n\u003Cli>コードを小さな単位でテストする\u003C/li>\n\u003Cli>エラーの種類と対処法を理解する\u003C/li>\n\u003Cli>予防的な措置を講じる\u003C/li>\n\u003C/ol>\n\u003Cp>エラーに遭遇したときは、慌てずに一つずつ確認していくことが重要です。エラーメッセージは私たちにヒントを与えてくれる良き先生だと考えて、前向きに取り組んでいきましょう。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>エラー対処の基本を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/programming-basics-for-beginners/\">変数・データ型・関数とは？初心者向けに超わかりやすく解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/algorithm-basics-explained/\">【図解】アルゴリズムとは？初心者が知るべき基本概念\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":798,"imagePaths":880,"frontmatter":881},[799,801,804,807,808,810,813,816,819,822,823,825,828,831,834,837,838,840,843,846,849,851,854,857,860,863,865,867,869,872,875,878,879],{"depth":26,"slug":800,"text":789},"初心者向けプログラミングのエラーの種類と対処法",{"depth":29,"slug":802,"text":803},"エラーとは何か","エラーとは何か？",{"depth":29,"slug":805,"text":806},"1-構文エラーsyntax-error","1. 構文エラー（Syntax Error）",{"depth":33,"slug":72,"text":72},{"depth":33,"slug":809,"text":809},"よくある例と対処法",{"depth":67,"slug":811,"text":812},"1-括弧の閉じ忘れ","1) 括弧の閉じ忘れ",{"depth":67,"slug":814,"text":815},"2-セミコロンの付け忘れ","2) セミコロンの付け忘れ",{"depth":67,"slug":817,"text":818},"3-スペルミス","3) スペルミス",{"depth":29,"slug":820,"text":821},"2-実行時エラーruntime-error","2. 実行時エラー（Runtime Error）",{"depth":33,"slug":81,"text":72},{"depth":33,"slug":824,"text":809},"よくある例と対処法-1",{"depth":67,"slug":826,"text":827},"1-typeerror型エラー","1) TypeError（型エラー）",{"depth":67,"slug":829,"text":830},"2-referenceerror参照エラー","2) ReferenceError（参照エラー）",{"depth":67,"slug":832,"text":833},"3-rangeerror範囲エラー","3) RangeError（範囲エラー）",{"depth":29,"slug":835,"text":836},"3-論理エラーlogical-error","3. 論理エラー（Logical Error）",{"depth":33,"slug":90,"text":72},{"depth":33,"slug":839,"text":809},"よくある例と対処法-2",{"depth":67,"slug":841,"text":842},"1-計算の順序の間違い","1) 計算の順序の間違い",{"depth":67,"slug":844,"text":845},"2-条件式の論理の誤り","2) 条件式の論理の誤り",{"depth":67,"slug":847,"text":848},"3-無限ループ","3) 無限ループ",{"depth":29,"slug":850,"text":850},"エラーの効率的な対処方法",{"depth":33,"slug":852,"text":853},"1-エラーメッセージを読む","1. エラーメッセージを読む",{"depth":33,"slug":855,"text":856},"2-コンソールログを活用する","2. コンソールログを活用する",{"depth":33,"slug":858,"text":859},"3-デバッガーを使用する","3. デバッガーを使用する",{"depth":33,"slug":861,"text":862},"4-エラーを予防するベストプラクティス","4. エラーを予防するベストプラクティス",{"depth":67,"slug":864,"text":864},"入力値の検証",{"depth":67,"slug":866,"text":866},"try-catch文の使用",{"depth":29,"slug":868,"text":868},"エラー対処のためのツール",{"depth":33,"slug":870,"text":871},"1-開発者ツールdeveloper-tools","1. 開発者ツール（Developer Tools）",{"depth":33,"slug":873,"text":874},"2-リンターlinter","2. リンター（Linter）",{"depth":33,"slug":876,"text":877},"3-型チェック","3. 型チェック",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":789,"description":790,"pubDate":882,"heroImage":371},"Mar 7 2025","api-basics-guide",{"id":883,"data":885,"body":889,"filePath":890,"digest":891,"rendered":892},{"title":886,"description":887,"pubDate":888,"heroImage":514},"【初心者向け】APIとは？使い方と実装方法をわかりやすく解説","APIの基本概念から実際の使い方、実装方法まで、初心者にもわかりやすく解説します。具体的な例を交えながら、APIの理解を深めましょう。",["Date","2025-03-16T15:00:00.000Z"],"# 【初心者向け】APIとは？使い方と実装方法をわかりやすく解説\n\nAPIは現代のソフトウェア開発において非常に重要な要素です。この記事では、APIとは何か、どのように使うのか、そして実際の実装方法について、初心者にもわかりやすく解説します。\n\n## APIとは？\n\nAPI（Application Programming Interface）は、異なるソフトウェアやサービス間でデータをやり取りするための仕組みです。簡単に言えば、「プログラムどうしが会話するための共通言語」です。\n\n### APIの役割\n\n1. **データの送受信**\n   - 異なるシステム間でデータを交換\n   - 必要な情報だけを効率的に取得\n\n2. **機能の提供**\n   - 複雑な処理を簡単に利用可能\n   - サービスの機能を外部に公開\n\n3. **セキュリティの確保**\n   - アクセス制御\n   - データの保護\n\n## RESTful APIの基本\n\n最も一般的なAPIの形式は「RESTful API」です。\n\n### HTTPメソッド\n\nRESTful APIでは、以下の主要なHTTPメソッドを使用します：\n\n- **GET**: データの取得\n- **POST**: 新しいデータの作成\n- **PUT/PATCH**: 既存データの更新\n- **DELETE**: データの削除\n\n### エンドポイントの例\n\n```\nGET    /api/users           # ユーザー一覧の取得\nGET    /api/users/123      # 特定のユーザーの取得\nPOST   /api/users          # 新しいユーザーの作成\nPUT    /api/users/123      # ユーザー情報の更新\nDELETE /api/users/123      # ユーザーの削除\n```\n\n## APIの使い方\n\n### 1. APIリクエストの基本\n\nJavaScriptでのAPIリクエストの例：\n\n```javascript\n// fetch APIを使用した基本的なGETリクエスト\nasync function getUser(userId) {\n  try {\n    const response = await fetch(`https://api.example.com/users/${userId}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('エラーが発生しました:', error);\n    throw error;\n  }\n}\n\n// 使用例\ngetUser(123)\n  .then(user => console.log(user))\n  .catch(error => console.error(error));\n```\n\n### 2. データの送信\n\n```javascript\n// POSTリクエストの例\nasync function createUser(userData) {\n  try {\n    const response = await fetch('https://api.example.com/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData)\n    });\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('エラーが発生しました:', error);\n    throw error;\n  }\n}\n\n// 使用例\nconst newUser = {\n  name: '山田太郎',\n  email: 'yamada@example.com',\n  age: 25\n};\n\ncreateUser(newUser)\n  .then(user => console.log('作成されたユーザー:', user))\n  .catch(error => console.error(error));\n```\n\n### 3. エラーハンドリング\n\n```javascript\nasync function fetchData(url) {\n  try {\n    const response = await fetch(url);\n    \n    // ステータスコードのチェック\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    // ネットワークエラーやパースエラーの処理\n    console.error('データの取得に失敗しました:', error);\n    throw error;\n  }\n}\n```\n\n## APIの実装方法\n\n### 1. Express.jsでのAPI実装例\n\n```javascript\nconst express = require('express');\nconst app = express();\n\n// JSONリクエストの解析\napp.use(express.json());\n\n// ユーザーデータ（実際はデータベースを使用）\nlet users = [\n  { id: 1, name: '山田太郎', email: 'yamada@example.com' },\n  { id: 2, name: '鈴木花子', email: 'suzuki@example.com' }\n];\n\n// ユーザー一覧の取得\napp.get('/api/users', (req, res) => {\n  res.json(users);\n});\n\n// 特定のユーザーの取得\napp.get('/api/users/:id', (req, res) => {\n  const user = users.find(u => u.id === parseInt(req.params.id));\n  \n  if (!user) {\n    return res.status(404).json({ message: 'ユーザーが見つかりません' });\n  }\n  \n  res.json(user);\n});\n\n// 新しいユーザーの作成\napp.post('/api/users', (req, res) => {\n  const newUser = {\n    id: users.length + 1,\n    name: req.body.name,\n    email: req.body.email\n  };\n  \n  users.push(newUser);\n  res.status(201).json(newUser);\n});\n\n// サーバーの起動\napp.listen(3000, () => {\n  console.log('APIサーバーが起動しました（ポート3000）');\n});\n```\n\n### 2. ミドルウェアの活用\n\n```javascript\n// 認証ミドルウェア\nfunction authenticate(req, res, next) {\n  const apiKey = req.headers['x-api-key'];\n  \n  if (!apiKey || apiKey !== 'your-secret-key') {\n    return res.status(401).json({ message: '認証が必要です' });\n  }\n  \n  next();\n}\n\n// ミドルウェアの適用\napp.use('/api', authenticate);\n\n// エラーハンドリングミドルウェア\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).json({ message: 'サーバーエラーが発生しました' });\n});\n```\n\n### 3. バリデーション\n\n```javascript\nfunction validateUser(req, res, next) {\n  const { name, email } = req.body;\n  \n  if (!name || name.length \u003C 2) {\n    return res.status(400).json({ message: '名前は2文字以上必要です' });\n  }\n  \n  if (!email || !email.includes('@')) {\n    return res.status(400).json({ message: '有効なメールアドレスを入力してください' });\n  }\n  \n  next();\n}\n\n// バリデーションの適用\napp.post('/api/users', validateUser, (req, res) => {\n  // ユーザー作成の処理\n});\n```\n\n## 実践的な例：ブログAPIの実装\n\n以下は、簡単なブログシステムのAPIを実装する例です：\n\n```javascript\nconst express = require('express');\nconst app = express();\n\napp.use(express.json());\n\n// ブログ記事データ（実際はデータベースを使用）\nlet posts = [\n  {\n    id: 1,\n    title: '初めての投稿',\n    content: 'これは最初のブログ記事です。',\n    author: '山田太郎',\n    createdAt: '2024-08-15'\n  }\n];\n\n// 記事一覧の取得\napp.get('/api/posts', (req, res) => {\n  // クエリパラメータによるフィルタリング\n  const { author } = req.query;\n  \n  if (author) {\n    const filteredPosts = posts.filter(post => post.author === author);\n    return res.json(filteredPosts);\n  }\n  \n  res.json(posts);\n});\n\n// 特定の記事の取得\napp.get('/api/posts/:id', (req, res) => {\n  const post = posts.find(p => p.id === parseInt(req.params.id));\n  \n  if (!post) {\n    return res.status(404).json({ message: '記事が見つかりません' });\n  }\n  \n  res.json(post);\n});\n\n// 新しい記事の作成\napp.post('/api/posts', (req, res) => {\n  const { title, content, author } = req.body;\n  \n  // バリデーション\n  if (!title || !content || !author) {\n    return res.status(400).json({ message: '必須項目が不足しています' });\n  }\n  \n  const newPost = {\n    id: posts.length + 1,\n    title,\n    content,\n    author,\n    createdAt: new Date().toISOString().split('T')[0]\n  };\n  \n  posts.push(newPost);\n  res.status(201).json(newPost);\n});\n\n// 記事の更新\napp.put('/api/posts/:id', (req, res) => {\n  const postId = parseInt(req.params.id);\n  const postIndex = posts.findIndex(p => p.id === postId);\n  \n  if (postIndex === -1) {\n    return res.status(404).json({ message: '記事が見つかりません' });\n  }\n  \n  const { title, content } = req.body;\n  \n  // 既存の記事を更新\n  posts[postIndex] = {\n    ...posts[postIndex],\n    title: title || posts[postIndex].title,\n    content: content || posts[postIndex].content\n  };\n  \n  res.json(posts[postIndex]);\n});\n\n// 記事の削除\napp.delete('/api/posts/:id', (req, res) => {\n  const postId = parseInt(req.params.id);\n  const postIndex = posts.findIndex(p => p.id === postId);\n  \n  if (postIndex === -1) {\n    return res.status(404).json({ message: '記事が見つかりません' });\n  }\n  \n  posts.splice(postIndex, 1);\n  res.status(204).send();\n});\n```\n\n## APIのテスト\n\n### 1. curlを使用したテスト\n\n```bash\n# GETリクエスト\ncurl http://localhost:3000/api/posts\n\n# POSTリクエスト\ncurl -X POST http://localhost:3000/api/posts \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"title\":\"新しい記事\",\"content\":\"記事の内容\",\"author\":\"鈴木花子\"}'\n\n# PUTリクエスト\ncurl -X PUT http://localhost:3000/api/posts/1 \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"title\":\"更新された記事\",\"content\":\"新しい内容\"}'\n\n# DELETEリクエスト\ncurl -X DELETE http://localhost:3000/api/posts/1\n```\n\n### 2. Jest を使用したユニットテスト\n\n```javascript\nconst request = require('supertest');\nconst app = require('./app');\n\ndescribe('Blog API', () => {\n  test('GET /api/posts should return all posts', async () => {\n    const response = await request(app).get('/api/posts');\n    expect(response.status).toBe(200);\n    expect(Array.isArray(response.body)).toBe(true);\n  });\n  \n  test('POST /api/posts should create a new post', async () => {\n    const newPost = {\n      title: 'テスト記事',\n      content: 'テスト内容',\n      author: 'テストユーザー'\n    };\n    \n    const response = await request(app)\n      .post('/api/posts')\n      .send(newPost);\n      \n    expect(response.status).toBe(201);\n    expect(response.body.title).toBe(newPost.title);\n  });\n});\n```\n\n## APIドキュメントの作成\n\n### Swagger/OpenAPIを使用した例\n\n```yaml\nopenapi: 3.0.0\ninfo:\n  title: ブログAPI\n  version: 1.0.0\n  description: シンプルなブログシステムのAPI\n\npaths:\n  /api/posts:\n    get:\n      summary: 記事一覧の取得\n      parameters:\n        - in: query\n          name: author\n          schema:\n            type: string\n          description: 著者名でフィルタリング\n      responses:\n        '200':\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Post'\n    \n    post:\n      summary: 新しい記事の作成\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewPost'\n      responses:\n        '201':\n          description: 作成成功\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Post'\n\ncomponents:\n  schemas:\n    Post:\n      type: object\n      properties:\n        id:\n          type: integer\n        title:\n          type: string\n        content:\n          type: string\n        author:\n          type: string\n        createdAt:\n          type: string\n          format: date\n```\n\n## セキュリティ対策\n\n### 1. 認証と認可\n\n```javascript\nconst jwt = require('jsonwebtoken');\n\n// JWTを使用した認証\nfunction authenticateToken(req, res, next) {\n  const authHeader = req.headers['authorization'];\n  const token = authHeader && authHeader.split(' ')[1];\n  \n  if (!token) {\n    return res.status(401).json({ message: '認証が必要です' });\n  }\n  \n  jwt.verify(token, process.env.JWT_SECRET, (err, user) => {\n    if (err) {\n      return res.status(403).json({ message: 'トークンが無効です' });\n    }\n    \n    req.user = user;\n    next();\n  });\n}\n\n// 認証が必要なエンドポイントに適用\napp.post('/api/posts', authenticateToken, (req, res) => {\n  // 記事作成の処理\n});\n```\n\n### 2. レート制限\n\n```javascript\nconst rateLimit = require('express-rate-limit');\n\nconst limiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15分\n  max: 100 // IPアドレスごとのリクエスト制限\n});\n\n// レート制限の適用\napp.use('/api', limiter);\n```\n\n### 3. 入力のサニタイズ\n\n```javascript\nconst sanitize = require('sanitize-html');\n\nfunction sanitizeInput(req, res, next) {\n  if (req.body.content) {\n    req.body.content = sanitize(req.body.content, {\n      allowedTags: [ 'b', 'i', 'em', 'strong', 'a' ],\n      allowedAttributes: {\n        'a': [ 'href' ]\n      }\n    });\n  }\n  next();\n}\n\napp.post('/api/posts', sanitizeInput, (req, res) => {\n  // 記事作成の処理\n});\n```\n\n## まとめ\n\nこの記事では、APIの基本から実装方法まで幅広く解説しました：\n\n1. **APIの基本概念**\n   - RESTful APIの原則\n   - HTTPメソッドの使い方\n   - エンドポイントの設計\n\n2. **実装のポイント**\n   - Express.jsでのAPI実装\n   - ミドルウェアの活用\n   - エラーハンドリング\n\n3. **セキュリティ対策**\n   - 認証と認可\n   - レート制限\n   - 入力のサニタイズ\n\nAPIは現代のWeb開発において非常に重要な要素です。基本をしっかり理解し、セキュリティにも配慮しながら、堅牢なAPIを設計・実装することが大切です。\n\n## 次のステップ\n\nAPIの基本を理解したら、以下の記事も参考にしてください：\n\n- [【入門】データベースとは？SQLの基本を理解しよう](/blog/database-sql-basics/)\n- [【初心者向け】プログラミングのエラーの種類と対処法](/blog/programming-error-handling-guide/)\n- [プログラミング初心者が最初に学ぶべき5つの概念](/blog/programming-concepts-for-beginners/)","src/content/blog/api-basics-guide.md","cad50df85b45683b",{"html":893,"metadata":894},"\u003Ch1 id=\"初心者向けapiとは使い方と実装方法をわかりやすく解説\">【初心者向け】APIとは？使い方と実装方法をわかりやすく解説\u003C/h1>\n\u003Cp>APIは現代のソフトウェア開発において非常に重要な要素です。この記事では、APIとは何か、どのように使うのか、そして実際の実装方法について、初心者にもわかりやすく解説します。\u003C/p>\n\u003Ch2 id=\"apiとは\">APIとは？\u003C/h2>\n\u003Cp>API（Application Programming Interface）は、異なるソフトウェアやサービス間でデータをやり取りするための仕組みです。簡単に言えば、「プログラムどうしが会話するための共通言語」です。\u003C/p>\n\u003Ch3 id=\"apiの役割\">APIの役割\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>データの送受信\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>異なるシステム間でデータを交換\u003C/li>\n\u003Cli>必要な情報だけを効率的に取得\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>機能の提供\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>複雑な処理を簡単に利用可能\u003C/li>\n\u003Cli>サービスの機能を外部に公開\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>セキュリティの確保\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>アクセス制御\u003C/li>\n\u003Cli>データの保護\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"restful-apiの基本\">RESTful APIの基本\u003C/h2>\n\u003Cp>最も一般的なAPIの形式は「RESTful API」です。\u003C/p>\n\u003Ch3 id=\"httpメソッド\">HTTPメソッド\u003C/h3>\n\u003Cp>RESTful APIでは、以下の主要なHTTPメソッドを使用します：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>GET\u003C/strong>: データの取得\u003C/li>\n\u003Cli>\u003Cstrong>POST\u003C/strong>: 新しいデータの作成\u003C/li>\n\u003Cli>\u003Cstrong>PUT/PATCH\u003C/strong>: 既存データの更新\u003C/li>\n\u003Cli>\u003Cstrong>DELETE\u003C/strong>: データの削除\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"エンドポイントの例\">エンドポイントの例\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>GET    /api/users           # ユーザー一覧の取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>GET    /api/users/123      # 特定のユーザーの取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>POST   /api/users          # 新しいユーザーの作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>PUT    /api/users/123      # ユーザー情報の更新\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>DELETE /api/users/123      # ユーザーの削除\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"apiの使い方\">APIの使い方\u003C/h2>\n\u003Ch3 id=\"1-apiリクエストの基本\">1. APIリクエストの基本\u003C/h3>\n\u003Cp>JavaScriptでのAPIリクエストの例：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// fetch APIを使用した基本的なGETリクエスト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">userId\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  try\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetch\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`https://api.example.com/users/\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">userId\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> data \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> data;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">エラーが発生しました:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, error);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    throw\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> error;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 使用例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">getUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">123\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  .\u003C/span>\u003Cspan style=\"color:#50FA7B\">then\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">user\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  .\u003C/span>\u003Cspan style=\"color:#50FA7B\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">error\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(error));\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-データの送信\">2. データの送信\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// POSTリクエストの例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> createUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">userData\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  try\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetch\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">https://api.example.com/users\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      method\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">POST\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      headers\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Content-Type\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">application/json\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      body\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> JSON\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">stringify\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(userData)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> data \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> data;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">エラーが発生しました:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, error);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    throw\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> error;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 使用例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> newUser \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  email\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">yamada@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  age\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 25\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">createUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(newUser)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  .\u003C/span>\u003Cspan style=\"color:#50FA7B\">then\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">user\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">作成されたユーザー:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, user))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  .\u003C/span>\u003Cspan style=\"color:#50FA7B\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">error\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(error));\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-エラーハンドリング\">3. エラーハンドリング\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetchData\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">url\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  try\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetch\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(url);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // ステータスコードのチェック\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">response.ok) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">      throw\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`HTTP error! status: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">response.status\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> data \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> data;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // ネットワークエラーやパースエラーの処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">データの取得に失敗しました:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, error);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    throw\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> error;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"apiの実装方法\">APIの実装方法\u003C/h2>\n\u003Ch3 id=\"1-expressjsでのapi実装例\">1. Express.jsでのAPI実装例\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> express \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">express\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> app \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> express\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// JSONリクエストの解析\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(express.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">());\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ユーザーデータ（実際はデータベースを使用）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, email\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">yamada@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  { id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木花子\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, email\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">suzuki@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ユーザー一覧の取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">get\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/users\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(users);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 特定のユーザーの取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">get\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/users/:id\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users.\u003C/span>\u003Cspan style=\"color:#50FA7B\">find\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">u\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> u.id \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#50FA7B\"> parseInt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(req.params.id));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">user) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">404\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ユーザーが見つかりません\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 新しいユーザーの作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">post\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/users\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> newUser \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> users.length \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> req.body.name,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    email\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> req.body.email\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  users.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(newUser);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">201\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(newUser);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// サーバーの起動\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">listen\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">3000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">APIサーバーが起動しました（ポート3000）\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-ミドルウェアの活用\">2. ミドルウェアの活用\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 認証ミドルウェア\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> authenticate\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> apiKey \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> req.headers[\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">x-api-key\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">apiKey \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> apiKey \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">your-secret-key\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">401\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">認証が必要です\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ミドルウェアの適用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, authenticate);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// エラーハンドリングミドルウェア\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">err\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(err.stack);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">500\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">サーバーエラーが発生しました\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-バリデーション\">3. バリデーション\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> validateUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> { name, email } \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> req.body;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">name \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name.length \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">400\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">名前は2文字以上必要です\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">email \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#FF79C6\"> !\u003C/span>\u003Cspan style=\"color:#F8F8F2\">email.\u003C/span>\u003Cspan style=\"color:#50FA7B\">includes\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">@\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">400\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">有効なメールアドレスを入力してください\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// バリデーションの適用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">post\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/users\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, validateUser, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ユーザー作成の処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"実践的な例ブログapiの実装\">実践的な例：ブログAPIの実装\u003C/h2>\n\u003Cp>以下は、簡単なブログシステムのAPIを実装する例です：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> express \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">express\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> app \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> express\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(express.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">());\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ブログ記事データ（実際はデータベースを使用）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> posts \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    title\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">初めての投稿\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    content\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">これは最初のブログ記事です。\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    author\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    createdAt\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">2024-08-15\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 記事一覧の取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">get\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/posts\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // クエリパラメータによるフィルタリング\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> { author } \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> req.query;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (author) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> filteredPosts \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> posts.\u003C/span>\u003Cspan style=\"color:#50FA7B\">filter\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">post\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> post.author \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> author);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(filteredPosts);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(posts);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 特定の記事の取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">get\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/posts/:id\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> post \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> posts.\u003C/span>\u003Cspan style=\"color:#50FA7B\">find\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">p\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> p.id \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#50FA7B\"> parseInt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(req.params.id));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">post) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">404\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">記事が見つかりません\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(post);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 新しい記事の作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">post\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/posts\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> { title, content, author } \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> req.body;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // バリデーション\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">title \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#FF79C6\"> !\u003C/span>\u003Cspan style=\"color:#F8F8F2\">content \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#FF79C6\"> !\u003C/span>\u003Cspan style=\"color:#F8F8F2\">author) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">400\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">必須項目が不足しています\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> newPost \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> posts.length \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    title,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    content,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    author,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    createdAt\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Date\u003C/span>\u003Cspan style=\"color:#F8F8F2\">().\u003C/span>\u003Cspan style=\"color:#50FA7B\">toISOString\u003C/span>\u003Cspan style=\"color:#F8F8F2\">().\u003C/span>\u003Cspan style=\"color:#50FA7B\">split\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">T\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)[\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  posts.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(newPost);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">201\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(newPost);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 記事の更新\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">put\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/posts/:id\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> postId \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> parseInt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(req.params.id);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> postIndex \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> posts.\u003C/span>\u003Cspan style=\"color:#50FA7B\">findIndex\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">p\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> p.id \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> postId);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (postIndex \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#FF79C6\"> -\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">404\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">記事が見つかりません\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> { title, content } \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> req.body;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 既存の記事を更新\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  posts[postIndex] \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    ...\u003C/span>\u003Cspan style=\"color:#F8F8F2\">posts[postIndex],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    title\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> title \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> posts[postIndex].title,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    content\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> content \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> posts[postIndex].content\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(posts[postIndex]);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 記事の削除\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">delete\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/posts/:id\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> postId \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> parseInt\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(req.params.id);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> postIndex \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> posts.\u003C/span>\u003Cspan style=\"color:#50FA7B\">findIndex\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">p\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> p.id \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> postId);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (postIndex \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#FF79C6\"> -\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">404\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">記事が見つかりません\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  posts.\u003C/span>\u003Cspan style=\"color:#50FA7B\">splice\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(postIndex, \u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">204\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">send\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"apiのテスト\">APIのテスト\u003C/h2>\n\u003Ch3 id=\"1-curlを使用したテスト\">1. curlを使用したテスト\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># GETリクエスト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">curl\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> http://localhost:3000/api/posts\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># POSTリクエスト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">curl\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -X\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> POST\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> http://localhost:3000/api/posts\u003C/span>\u003Cspan style=\"color:#FF79C6\"> \\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">  -H\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Content-Type: application/json\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\"> \\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">  -d\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">{\"title\":\"新しい記事\",\"content\":\"記事の内容\",\"author\":\"鈴木花子\"}\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># PUTリクエスト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">curl\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -X\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> PUT\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> http://localhost:3000/api/posts/1\u003C/span>\u003Cspan style=\"color:#FF79C6\"> \\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">  -H\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Content-Type: application/json\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\"> \\\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">  -d\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">{\"title\":\"更新された記事\",\"content\":\"新しい内容\"}\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># DELETEリクエスト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">curl\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -X\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> DELETE\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> http://localhost:3000/api/posts/1\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-jest-を使用したユニットテスト\">2. Jest を使用したユニットテスト\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> request \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">supertest\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> app \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">./app\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">describe\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Blog API\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  test\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">GET /api/posts should return all posts\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> request\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(app).\u003C/span>\u003Cspan style=\"color:#50FA7B\">get\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/posts\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    expect\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(response.status).\u003C/span>\u003Cspan style=\"color:#50FA7B\">toBe\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">200\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    expect\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(Array.\u003C/span>\u003Cspan style=\"color:#50FA7B\">isArray\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(response.body)).\u003C/span>\u003Cspan style=\"color:#50FA7B\">toBe\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  test\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">POST /api/posts should create a new post\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> newPost \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      title\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">テスト記事\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      content\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">テスト内容\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      author\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">テストユーザー\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> request\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(app)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      .\u003C/span>\u003Cspan style=\"color:#50FA7B\">post\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/posts\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      .\u003C/span>\u003Cspan style=\"color:#50FA7B\">send\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(newPost);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    expect\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(response.status).\u003C/span>\u003Cspan style=\"color:#50FA7B\">toBe\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">201\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    expect\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(response.body.title).\u003C/span>\u003Cspan style=\"color:#50FA7B\">toBe\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(newPost.title);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"apiドキュメントの作成\">APIドキュメントの作成\u003C/h2>\n\u003Ch3 id=\"swaggeropenapiを使用した例\">Swagger/OpenAPIを使用した例\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"yaml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">openapi\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3.0.0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">info\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">  title\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> ブログAPI\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">  version\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1.0.0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">  description\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> シンプルなブログシステムのAPI\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">paths\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">  /api/posts\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    get\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      summary\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> 記事一覧の取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      parameters\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        -\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> in\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> query\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> author\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          schema\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">            type\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> string\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          description\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> 著者名でフィルタリング\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      responses\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">200\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          description\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> 成功\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          content\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">            application/json\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">              schema\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">                type\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> array\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">                items\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">                  $ref\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">#/components/schemas/Post\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    post\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      summary\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> 新しい記事の作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      requestBody\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        required\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        content\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          application/json\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">            schema\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">              $ref\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">#/components/schemas/NewPost\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      responses\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">201\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          description\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> 作成成功\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          content\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">            application/json\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">              schema\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">                $ref\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">#/components/schemas/Post\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">components\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">  schemas\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    Post\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      type\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> object\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      properties\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          type\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> integer\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        title\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          type\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> string\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        content\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          type\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> string\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        author\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          type\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> string\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        createdAt\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          type\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> string\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">          format\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> date\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"セキュリティ対策\">セキュリティ対策\u003C/h2>\n\u003Ch3 id=\"1-認証と認可\">1. 認証と認可\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> jwt \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">jsonwebtoken\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// JWTを使用した認証\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> authenticateToken\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> authHeader \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> req.headers[\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">authorization\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> token \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> authHeader \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> authHeader.\u003C/span>\u003Cspan style=\"color:#50FA7B\">split\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)[\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">token) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">401\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">認証が必要です\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  jwt.\u003C/span>\u003Cspan style=\"color:#50FA7B\">verify\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(token, process.env.\u003C/span>\u003Cspan style=\"color:#BD93F9\">JWT_SECRET\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">err\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">user\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (err) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">      return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">403\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">トークンが無効です\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    req.user \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 認証が必要なエンドポイントに適用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">post\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/posts\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, authenticateToken, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 記事作成の処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-レート制限\">2. レート制限\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> rateLimit \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">express-rate-limit\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> limiter \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> rateLimit\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  windowMs\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 15\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 60\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#6272A4\">// 15分\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  max\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#6272A4\"> // IPアドレスごとのリクエスト制限\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// レート制限の適用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, limiter);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-入力のサニタイズ\">3. 入力のサニタイズ\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sanitize \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">sanitize-html\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> sanitizeInput\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (req.body.content) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    req.body.content \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> sanitize\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(req.body.content, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      allowedTags\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [ \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">b\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">i\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">em\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">strong\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">a\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> ],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      allowedAttributes\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">a\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [ \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">href\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> ]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">post\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/posts\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, sanitizeInput, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 記事作成の処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>この記事では、APIの基本から実装方法まで幅広く解説しました：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>APIの基本概念\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>RESTful APIの原則\u003C/li>\n\u003Cli>HTTPメソッドの使い方\u003C/li>\n\u003Cli>エンドポイントの設計\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>実装のポイント\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Express.jsでのAPI実装\u003C/li>\n\u003Cli>ミドルウェアの活用\u003C/li>\n\u003Cli>エラーハンドリング\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>セキュリティ対策\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>認証と認可\u003C/li>\n\u003Cli>レート制限\u003C/li>\n\u003Cli>入力のサニタイズ\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>APIは現代のWeb開発において非常に重要な要素です。基本をしっかり理解し、セキュリティにも配慮しながら、堅牢なAPIを設計・実装することが大切です。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>APIの基本を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/database-sql-basics/\">【入門】データベースとは？SQLの基本を理解しよう\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-error-handling-guide/\">【初心者向け】プログラミングのエラーの種類と対処法\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":895,"imagePaths":967,"frontmatter":968},[896,898,901,904,907,910,912,915,918,921,924,927,930,933,936,939,942,945,948,951,954,956,959,962,965,966],{"depth":26,"slug":897,"text":886},"初心者向けapiとは使い方と実装方法をわかりやすく解説",{"depth":29,"slug":899,"text":900},"apiとは","APIとは？",{"depth":33,"slug":902,"text":903},"apiの役割","APIの役割",{"depth":29,"slug":905,"text":906},"restful-apiの基本","RESTful APIの基本",{"depth":33,"slug":908,"text":909},"httpメソッド","HTTPメソッド",{"depth":33,"slug":911,"text":911},"エンドポイントの例",{"depth":29,"slug":913,"text":914},"apiの使い方","APIの使い方",{"depth":33,"slug":916,"text":917},"1-apiリクエストの基本","1. APIリクエストの基本",{"depth":33,"slug":919,"text":920},"2-データの送信","2. データの送信",{"depth":33,"slug":922,"text":923},"3-エラーハンドリング","3. エラーハンドリング",{"depth":29,"slug":925,"text":926},"apiの実装方法","APIの実装方法",{"depth":33,"slug":928,"text":929},"1-expressjsでのapi実装例","1. Express.jsでのAPI実装例",{"depth":33,"slug":931,"text":932},"2-ミドルウェアの活用","2. ミドルウェアの活用",{"depth":33,"slug":934,"text":935},"3-バリデーション","3. バリデーション",{"depth":29,"slug":937,"text":938},"実践的な例ブログapiの実装","実践的な例：ブログAPIの実装",{"depth":29,"slug":940,"text":941},"apiのテスト","APIのテスト",{"depth":33,"slug":943,"text":944},"1-curlを使用したテスト","1. curlを使用したテスト",{"depth":33,"slug":946,"text":947},"2-jest-を使用したユニットテスト","2. Jest を使用したユニットテスト",{"depth":29,"slug":949,"text":950},"apiドキュメントの作成","APIドキュメントの作成",{"depth":33,"slug":952,"text":953},"swaggeropenapiを使用した例","Swagger/OpenAPIを使用した例",{"depth":29,"slug":955,"text":955},"セキュリティ対策",{"depth":33,"slug":957,"text":958},"1-認証と認可","1. 認証と認可",{"depth":33,"slug":960,"text":961},"2-レート制限","2. レート制限",{"depth":33,"slug":963,"text":964},"3-入力のサニタイズ","3. 入力のサニタイズ",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":886,"description":887,"pubDate":969,"heroImage":514},"Mar 17 2025","benefits-of-learning-programming",{"id":970,"data":972,"body":976,"filePath":977,"digest":978,"rendered":979},{"title":973,"description":974,"pubDate":975,"heroImage":534},"【プログラミングを学ぶメリットとは？未経験者でもできる理由】","プログラミング未経験者向けに、プログラミングを学ぶメリットと、誰でも始められる理由を詳しく解説します。",["Date","2025-03-05T15:00:00.000Z"],"# プログラミングを学ぶメリットとは？未経験者でもできる理由\n\nプログラミングを始めようと考えている方の中には、「難しそう...」「私にできるかな？」と不安に感じている方も多いのではないでしょうか？この記事では、プログラミングを学ぶメリットと、未経験者でも始められる理由について詳しく解説します。\n\n## プログラミングを学ぶ5つのメリット\n\n### 1. 論理的思考力が身につく\n\nプログラミングでは、問題を小さな部分に分解し、順序立てて解決していく必要があります。この過程で自然と論理的思考力が養われ、日常生活でも物事を整理して考えられるようになります。\n\n例えば、「朝の準備を効率化したい」という問題に対して：\n\n```javascript\n// 朝の準備を関数として整理する例\nfunction morningRoutine() {\n  // 1. 起床\n  wakeUp();\n  \n  // 2. 身支度\n  if (needShower()) {\n    takeShower();\n  }\n  brushTeeth();\n  changeClothes();\n  \n  // 3. 朝食\n  if (haveTime()) {\n    makeBreakfast();\n    eatBreakfast();\n  } else {\n    grabQuickMeal();\n  }\n  \n  // 4. 最終確認\n  checkBag();\n  checkLocks();\n}\n```\n\nこのように、日常の作業も論理的に整理して考えられるようになります。\n\n### 2. 高収入が期待できる\n\nIT業界は常に人材不足で、プログラマーの需要は高く、給与水準も比較的高めです。\n\n- 未経験からのWebエンジニア初任給：月給25-35万円程度\n- 経験3年程度：月給35-45万円程度\n- 経験5年以上：月給45万円以上も珍しくない\n\n※ただし、これらは目安であり、会社や地域によって異なります。\n\n### 3. 場所や時間にとらわれない働き方が可能\n\nプログラミングスキルを活かした仕事には、以下のような特徴があります：\n\n- リモートワークが一般的\n- フリーランスとして働ける\n- 副業・複業がしやすい\n- 世界中の企業と働ける可能性がある\n\n### 4. アイデアを形にできる\n\nプログラミングスキルがあれば、自分のアイデアを実際のサービスやアプリとして形にできます。\n\n例えば：\n- 日常の不便を解決するアプリ\n- 趣味に関連するWebサービス\n- 仕事を効率化するツール\n\n### 5. 技術の進化についていける\n\nAI、IoT、ブロックチェーンなど、新しい技術が次々と登場する現代において、プログラミングの基礎知識があると：\n\n- 新技術の理解が早い\n- トレンドについていける\n- 技術選定の判断ができる\n- 専門家と円滑なコミュニケーションが取れる\n\n## 未経験者でもプログラミングができる3つの理由\n\n### 1. 学習リソースが豊富\n\n現代では、プログラミングを学ぶためのリソースが豊富に用意されています：\n\n- **オンライン学習プラットフォーム**\n  - Progate\n  - ドットインストール\n  - Udemy\n  - Coursera\n\n- **無料の学習サイト**\n  - MDN Web Docs\n  - W3Schools\n  - freeCodeCamp\n\n- **プログラミングスクール**\n  - 対面式スクール\n  - オンラインスクール\n  - 就職支援付きスクール\n\n### 2. 段階的に学習できる\n\nプログラミングは、基礎から応用まで段階的に学習を進められます：\n\n1. **基礎知識の習得**\n   - HTML/CSSでWebページの構造を理解\n   - JavaScriptで基本的なプログラミングを学ぶ\n\n2. **フレームワークの活用**\n   - React、Vue.jsなどのフレームワークを学ぶ\n   - より効率的な開発方法を身につける\n\n3. **実践的なスキル**\n   - データベース連携\n   - APIの作成と利用\n   - セキュリティ対策\n\n### 3. すぐに結果が見える\n\nWebプログラミングの場合、書いたコードの結果がブラウザですぐに確認できます：\n\n```html\n\u003C!-- シンプルなHTMLの例 -->\n\u003C!DOCTYPE html>\n\u003Chtml>\n\u003Chead>\n  \u003Cstyle>\n    .message {\n      color: blue;\n      font-size: 24px;\n      text-align: center;\n      margin-top: 50px;\n    }\n  \u003C/style>\n\u003C/head>\n\u003Cbody>\n  \u003Cdiv class=\"message\">\n    Hello, World!\n  \u003C/div>\n  \n  \u003Cscript>\n    // クリックで色が変わる\n    document.querySelector('.message').addEventListener('click', function() {\n      this.style.color = this.style.color === 'red' ? 'blue' : 'red';\n    });\n  \u003C/script>\n\u003C/body>\n\u003C/html>\n```\n\nこのコードをブラウザで開くと：\n- 青い文字で「Hello, World!」が表示される\n- クリックすると赤と青が切り替わる\n\nこのように、コードの変更がすぐに目に見える形で確認できます。\n\n## プログラミング学習を始めるためのステップ\n\n### 1. 目標を設定する\n\nまずは、なぜプログラミングを学びたいのか、目標を明確にしましょう：\n\n- Webエンジニアになりたい\n- 自分のサービスを作りたい\n- 仕事の効率を上げたい\n- 趣味として楽しみたい\n\n### 2. 学習計画を立てる\n\n目標に応じて、適切な学習計画を立てます：\n\n- 1日30分でも継続的に学習\n- 週末に集中して学習\n- スクールに通って集中的に学習\n\n### 3. 実践的なプロジェクトに取り組む\n\n学んだことを活かして、実際にプロジェクトを作ってみましょう：\n\n- 自己紹介サイト\n- ブログシステム\n- ToDoアプリ\n- 家計簿アプリ\n\n## よくある不安と解決方法\n\n### 「数学が苦手だけど大丈夫？」\n\n基本的なWebアプリケーション開発には、高度な数学は必要ありません。必要な計算は：\n\n- 基本的な四則演算\n- 簡単な論理演算\n- 配列の操作\n\n### 「英語が苦手だけど大丈夫？」\n\n- プログラミング言語の基本的なキーワードは限られている\n- 翻訳ツールの活用で十分対応可能\n- 日本語の学習リソースも豊富\n\n### 「年齢的に遅くない？」\n\nプログラミングに年齢は関係ありません：\n\n- 20代後半からのキャリアチェンジも一般的\n- 30代、40代からでも未経験採用は多い\n- むしろ、人生経験を活かせる場合も\n\n## まとめ\n\nプログラミングを学ぶことで：\n\n1. 論理的思考力が身につく\n2. 高収入が期待できる\n3. 柔軟な働き方が可能\n4. アイデアを形にできる\n5. 技術の進化についていける\n\nそして、以下の理由から、未経験者でも始められます：\n\n1. 学習リソースが豊富\n2. 段階的に学習できる\n3. すぐに結果が見える\n\n大切なのは、自分のペースで着実に進むことです。完璧を目指すのではなく、まずは小さな目標から始めて、徐々にステップアップしていきましょう。\n\nプログラミングの世界は、あなたの挑戦を待っています！\n\n## 次のステップ\n\nこの記事を読んでプログラミング学習に興味を持った方は、以下の記事もチェックしてみてください：\n\n- [変数・データ型・関数とは？初心者向けに超わかりやすく解説](/blog/programming-basics-for-beginners/)\n- [プログラミング初心者が最初に学ぶべき5つの概念](/blog/programming-concepts-for-beginners/)\n- [【図解】アルゴリズムとは？初心者が知るべき基本概念](/blog/algorithm-basics-explained/)","src/content/blog/benefits-of-learning-programming.md","e10094f5faca42b6",{"html":980,"metadata":981},"\u003Ch1 id=\"プログラミングを学ぶメリットとは未経験者でもできる理由\">プログラミングを学ぶメリットとは？未経験者でもできる理由\u003C/h1>\n\u003Cp>プログラミングを始めようと考えている方の中には、「難しそう…」「私にできるかな？」と不安に感じている方も多いのではないでしょうか？この記事では、プログラミングを学ぶメリットと、未経験者でも始められる理由について詳しく解説します。\u003C/p>\n\u003Ch2 id=\"プログラミングを学ぶ5つのメリット\">プログラミングを学ぶ5つのメリット\u003C/h2>\n\u003Ch3 id=\"1-論理的思考力が身につく\">1. 論理的思考力が身につく\u003C/h3>\n\u003Cp>プログラミングでは、問題を小さな部分に分解し、順序立てて解決していく必要があります。この過程で自然と論理的思考力が養われ、日常生活でも物事を整理して考えられるようになります。\u003C/p>\n\u003Cp>例えば、「朝の準備を効率化したい」という問題に対して：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 朝の準備を関数として整理する例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> morningRoutine\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 1. 起床\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  wakeUp\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 2. 身支度\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#50FA7B\">needShower\u003C/span>\u003Cspan style=\"color:#F8F8F2\">()) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    takeShower\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  brushTeeth\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  changeClothes\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 3. 朝食\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#50FA7B\">haveTime\u003C/span>\u003Cspan style=\"color:#F8F8F2\">()) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    makeBreakfast\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    eatBreakfast\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    grabQuickMeal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 4. 最終確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  checkBag\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  checkLocks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>このように、日常の作業も論理的に整理して考えられるようになります。\u003C/p>\n\u003Ch3 id=\"2-高収入が期待できる\">2. 高収入が期待できる\u003C/h3>\n\u003Cp>IT業界は常に人材不足で、プログラマーの需要は高く、給与水準も比較的高めです。\u003C/p>\n\u003Cul>\n\u003Cli>未経験からのWebエンジニア初任給：月給25-35万円程度\u003C/li>\n\u003Cli>経験3年程度：月給35-45万円程度\u003C/li>\n\u003Cli>経験5年以上：月給45万円以上も珍しくない\u003C/li>\n\u003C/ul>\n\u003Cp>※ただし、これらは目安であり、会社や地域によって異なります。\u003C/p>\n\u003Ch3 id=\"3-場所や時間にとらわれない働き方が可能\">3. 場所や時間にとらわれない働き方が可能\u003C/h3>\n\u003Cp>プログラミングスキルを活かした仕事には、以下のような特徴があります：\u003C/p>\n\u003Cul>\n\u003Cli>リモートワークが一般的\u003C/li>\n\u003Cli>フリーランスとして働ける\u003C/li>\n\u003Cli>副業・複業がしやすい\u003C/li>\n\u003Cli>世界中の企業と働ける可能性がある\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"4-アイデアを形にできる\">4. アイデアを形にできる\u003C/h3>\n\u003Cp>プログラミングスキルがあれば、自分のアイデアを実際のサービスやアプリとして形にできます。\u003C/p>\n\u003Cp>例えば：\u003C/p>\n\u003Cul>\n\u003Cli>日常の不便を解決するアプリ\u003C/li>\n\u003Cli>趣味に関連するWebサービス\u003C/li>\n\u003Cli>仕事を効率化するツール\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"5-技術の進化についていける\">5. 技術の進化についていける\u003C/h3>\n\u003Cp>AI、IoT、ブロックチェーンなど、新しい技術が次々と登場する現代において、プログラミングの基礎知識があると：\u003C/p>\n\u003Cul>\n\u003Cli>新技術の理解が早い\u003C/li>\n\u003Cli>トレンドについていける\u003C/li>\n\u003Cli>技術選定の判断ができる\u003C/li>\n\u003Cli>専門家と円滑なコミュニケーションが取れる\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"未経験者でもプログラミングができる3つの理由\">未経験者でもプログラミングができる3つの理由\u003C/h2>\n\u003Ch3 id=\"1-学習リソースが豊富\">1. 学習リソースが豊富\u003C/h3>\n\u003Cp>現代では、プログラミングを学ぶためのリソースが豊富に用意されています：\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>オンライン学習プラットフォーム\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Progate\u003C/li>\n\u003Cli>ドットインストール\u003C/li>\n\u003Cli>Udemy\u003C/li>\n\u003Cli>Coursera\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>無料の学習サイト\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>MDN Web Docs\u003C/li>\n\u003Cli>W3Schools\u003C/li>\n\u003Cli>freeCodeCamp\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>プログラミングスクール\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>対面式スクール\u003C/li>\n\u003Cli>オンラインスクール\u003C/li>\n\u003Cli>就職支援付きスクール\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-段階的に学習できる\">2. 段階的に学習できる\u003C/h3>\n\u003Cp>プログラミングは、基礎から応用まで段階的に学習を進められます：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>基礎知識の習得\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>HTML/CSSでWebページの構造を理解\u003C/li>\n\u003Cli>JavaScriptで基本的なプログラミングを学ぶ\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>フレームワークの活用\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>React、Vue.jsなどのフレームワークを学ぶ\u003C/li>\n\u003Cli>より効率的な開発方法を身につける\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>実践的なスキル\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>データベース連携\u003C/li>\n\u003Cli>APIの作成と利用\u003C/li>\n\u003Cli>セキュリティ対策\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"3-すぐに結果が見える\">3. すぐに結果が見える\u003C/h3>\n\u003Cp>Webプログラミングの場合、書いたコードの結果がブラウザですぐに確認できます：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">&#x3C;!-- シンプルなHTMLの例 -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;!\u003C/span>\u003Cspan style=\"color:#FF79C6\">DOCTYPE\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">head\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">style\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">    .message\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> blue\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      font-size\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 24\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      text-align\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> center\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">      margin-top\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 50\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">style\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">head\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">body\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> class\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">message\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    Hello, World!\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">script\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // クリックで色が変わる\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">querySelector\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">.message\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">addEventListener\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">click\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">      this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.style.color \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.style.color \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">red\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ?\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">blue\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> :\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">red\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">script\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">body\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>このコードをブラウザで開くと：\u003C/p>\n\u003Cul>\n\u003Cli>青い文字で「Hello, World!」が表示される\u003C/li>\n\u003Cli>クリックすると赤と青が切り替わる\u003C/li>\n\u003C/ul>\n\u003Cp>このように、コードの変更がすぐに目に見える形で確認できます。\u003C/p>\n\u003Ch2 id=\"プログラミング学習を始めるためのステップ\">プログラミング学習を始めるためのステップ\u003C/h2>\n\u003Ch3 id=\"1-目標を設定する\">1. 目標を設定する\u003C/h3>\n\u003Cp>まずは、なぜプログラミングを学びたいのか、目標を明確にしましょう：\u003C/p>\n\u003Cul>\n\u003Cli>Webエンジニアになりたい\u003C/li>\n\u003Cli>自分のサービスを作りたい\u003C/li>\n\u003Cli>仕事の効率を上げたい\u003C/li>\n\u003Cli>趣味として楽しみたい\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-学習計画を立てる\">2. 学習計画を立てる\u003C/h3>\n\u003Cp>目標に応じて、適切な学習計画を立てます：\u003C/p>\n\u003Cul>\n\u003Cli>1日30分でも継続的に学習\u003C/li>\n\u003Cli>週末に集中して学習\u003C/li>\n\u003Cli>スクールに通って集中的に学習\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-実践的なプロジェクトに取り組む\">3. 実践的なプロジェクトに取り組む\u003C/h3>\n\u003Cp>学んだことを活かして、実際にプロジェクトを作ってみましょう：\u003C/p>\n\u003Cul>\n\u003Cli>自己紹介サイト\u003C/li>\n\u003Cli>ブログシステム\u003C/li>\n\u003Cli>ToDoアプリ\u003C/li>\n\u003Cli>家計簿アプリ\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"よくある不安と解決方法\">よくある不安と解決方法\u003C/h2>\n\u003Ch3 id=\"数学が苦手だけど大丈夫\">「数学が苦手だけど大丈夫？」\u003C/h3>\n\u003Cp>基本的なWebアプリケーション開発には、高度な数学は必要ありません。必要な計算は：\u003C/p>\n\u003Cul>\n\u003Cli>基本的な四則演算\u003C/li>\n\u003Cli>簡単な論理演算\u003C/li>\n\u003Cli>配列の操作\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"英語が苦手だけど大丈夫\">「英語が苦手だけど大丈夫？」\u003C/h3>\n\u003Cul>\n\u003Cli>プログラミング言語の基本的なキーワードは限られている\u003C/li>\n\u003Cli>翻訳ツールの活用で十分対応可能\u003C/li>\n\u003Cli>日本語の学習リソースも豊富\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"年齢的に遅くない\">「年齢的に遅くない？」\u003C/h3>\n\u003Cp>プログラミングに年齢は関係ありません：\u003C/p>\n\u003Cul>\n\u003Cli>20代後半からのキャリアチェンジも一般的\u003C/li>\n\u003Cli>30代、40代からでも未経験採用は多い\u003C/li>\n\u003Cli>むしろ、人生経験を活かせる場合も\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>プログラミングを学ぶことで：\u003C/p>\n\u003Col>\n\u003Cli>論理的思考力が身につく\u003C/li>\n\u003Cli>高収入が期待できる\u003C/li>\n\u003Cli>柔軟な働き方が可能\u003C/li>\n\u003Cli>アイデアを形にできる\u003C/li>\n\u003Cli>技術の進化についていける\u003C/li>\n\u003C/ol>\n\u003Cp>そして、以下の理由から、未経験者でも始められます：\u003C/p>\n\u003Col>\n\u003Cli>学習リソースが豊富\u003C/li>\n\u003Cli>段階的に学習できる\u003C/li>\n\u003Cli>すぐに結果が見える\u003C/li>\n\u003C/ol>\n\u003Cp>大切なのは、自分のペースで着実に進むことです。完璧を目指すのではなく、まずは小さな目標から始めて、徐々にステップアップしていきましょう。\u003C/p>\n\u003Cp>プログラミングの世界は、あなたの挑戦を待っています！\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>この記事を読んでプログラミング学習に興味を持った方は、以下の記事もチェックしてみてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/programming-basics-for-beginners/\">変数・データ型・関数とは？初心者向けに超わかりやすく解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/algorithm-basics-explained/\">【図解】アルゴリズムとは？初心者が知るべき基本概念\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":982,"imagePaths":1038,"frontmatter":1039},[983,986,988,991,994,997,1000,1003,1005,1008,1011,1014,1016,1019,1022,1025,1027,1030,1033,1036,1037],{"depth":26,"slug":984,"text":985},"プログラミングを学ぶメリットとは未経験者でもできる理由","プログラミングを学ぶメリットとは？未経験者でもできる理由",{"depth":29,"slug":987,"text":987},"プログラミングを学ぶ5つのメリット",{"depth":33,"slug":989,"text":990},"1-論理的思考力が身につく","1. 論理的思考力が身につく",{"depth":33,"slug":992,"text":993},"2-高収入が期待できる","2. 高収入が期待できる",{"depth":33,"slug":995,"text":996},"3-場所や時間にとらわれない働き方が可能","3. 場所や時間にとらわれない働き方が可能",{"depth":33,"slug":998,"text":999},"4-アイデアを形にできる","4. アイデアを形にできる",{"depth":33,"slug":1001,"text":1002},"5-技術の進化についていける","5. 技術の進化についていける",{"depth":29,"slug":1004,"text":1004},"未経験者でもプログラミングができる3つの理由",{"depth":33,"slug":1006,"text":1007},"1-学習リソースが豊富","1. 学習リソースが豊富",{"depth":33,"slug":1009,"text":1010},"2-段階的に学習できる","2. 段階的に学習できる",{"depth":33,"slug":1012,"text":1013},"3-すぐに結果が見える","3. すぐに結果が見える",{"depth":29,"slug":1015,"text":1015},"プログラミング学習を始めるためのステップ",{"depth":33,"slug":1017,"text":1018},"1-目標を設定する","1. 目標を設定する",{"depth":33,"slug":1020,"text":1021},"2-学習計画を立てる","2. 学習計画を立てる",{"depth":33,"slug":1023,"text":1024},"3-実践的なプロジェクトに取り組む","3. 実践的なプロジェクトに取り組む",{"depth":29,"slug":1026,"text":1026},"よくある不安と解決方法",{"depth":33,"slug":1028,"text":1029},"数学が苦手だけど大丈夫","「数学が苦手だけど大丈夫？」",{"depth":33,"slug":1031,"text":1032},"英語が苦手だけど大丈夫","「英語が苦手だけど大丈夫？」",{"depth":33,"slug":1034,"text":1035},"年齢的に遅くない","「年齢的に遅くない？」",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":973,"description":974,"pubDate":1040,"heroImage":534},"Mar 6 2025","simple-todo-javascript",{"id":1041,"data":1043,"body":1047,"filePath":1048,"digest":1049,"rendered":1050},{"title":1044,"description":1045,"pubDate":1046,"heroImage":534},"【実践】簡単なToDoリストを作ってみよう！（JavaScript編）","JavaScriptを使って基本的なToDoリストアプリを作成する方法を、初心者向けにステップバイステップで解説します。",["Date","2025-03-14T15:00:00.000Z"],"# 【実践】簡単なToDoリストを作ってみよう！（JavaScript編）\n\nToDoリストは、プログラミング学習の実践的なプロジェクトとして最適です。この記事では、JavaScriptを使って基本的なToDoリストアプリを作成する方法を、初心者向けにステップバイステップで解説します。\n\n## 目標とする機能\n\n今回作成するToDoリストアプリには、以下の機能を実装します：\n\n1. タスクの追加\n2. タスクの完了/未完了の切り替え\n3. タスクの削除\n4. タスクの一覧表示\n5. データの永続化（ローカルストレージ）\n\n## Step 1: HTMLの作成\n\nまずは、アプリケーションの基本構造となるHTMLを作成します。\n\n```html\n\u003C!DOCTYPE html>\n\u003Chtml lang=\"ja\">\n\u003Chead>\n    \u003Cmeta charset=\"UTF-8\">\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    \u003Ctitle>シンプルToDoリスト\u003C/title>\n    \u003Cstyle>\n        /* スタイルは後で追加します */\n    \u003C/style>\n\u003C/head>\n\u003Cbody>\n    \u003Cdiv class=\"container\">\n        \u003Ch1>ToDoリスト\u003C/h1>\n        \n        \u003C!-- タスク入力フォーム -->\n        \u003Cdiv class=\"input-section\">\n            \u003Cinput type=\"text\" id=\"taskInput\" placeholder=\"新しいタスクを入力\">\n            \u003Cbutton id=\"addButton\">追加\u003C/button>\n        \u003C/div>\n        \n        \u003C!-- タスク一覧 -->\n        \u003Cul id=\"taskList\">\u003C/ul>\n    \u003C/div>\n    \n    \u003Cscript src=\"app.js\">\u003C/script>\n\u003C/body>\n\u003C/html>\n```\n\n## Step 2: CSSでスタイリング\n\n次に、アプリケーションの見た目を整えるCSSを追加します。\n\n```html\n\u003Cstyle>\n    body {\n        font-family: Arial, sans-serif;\n        line-height: 1.6;\n        margin: 0;\n        padding: 20px;\n        background-color: #f5f5f5;\n    }\n\n    .container {\n        max-width: 600px;\n        margin: 0 auto;\n        background-color: white;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    h1 {\n        text-align: center;\n        color: #333;\n    }\n\n    .input-section {\n        display: flex;\n        gap: 10px;\n        margin-bottom: 20px;\n    }\n\n    #taskInput {\n        flex: 1;\n        padding: 10px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        font-size: 16px;\n    }\n\n    button {\n        padding: 10px 20px;\n        background-color: #4CAF50;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 16px;\n    }\n\n    button:hover {\n        background-color: #45a049;\n    }\n\n    #taskList {\n        list-style: none;\n        padding: 0;\n    }\n\n    .task-item {\n        display: flex;\n        align-items: center;\n        padding: 10px;\n        background-color: #f9f9f9;\n        margin-bottom: 10px;\n        border-radius: 4px;\n        gap: 10px;\n    }\n\n    .task-item.completed {\n        background-color: #e8f5e9;\n        text-decoration: line-through;\n        color: #666;\n    }\n\n    .task-item input[type=\"checkbox\"] {\n        margin-right: 10px;\n    }\n\n    .task-item .task-text {\n        flex: 1;\n    }\n\n    .delete-button {\n        background-color: #f44336;\n        padding: 5px 10px;\n    }\n\n    .delete-button:hover {\n        background-color: #da190b;\n    }\n\u003C/style>\n```\n\n## Step 3: JavaScriptの実装\n\n最後に、アプリケーションの機能を実装するJavaScriptコードを作成します。\n\n```javascript\n// ToDoリストの管理クラス\nclass TodoList {\n    constructor() {\n        // DOMの要素を取得\n        this.taskInput = document.getElementById('taskInput');\n        this.addButton = document.getElementById('addButton');\n        this.taskList = document.getElementById('taskList');\n        \n        // ローカルストレージからタスクを読み込む\n        this.tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n        \n        // イベントリスナーを設定\n        this.addButton.addEventListener('click', () => this.addTask());\n        this.taskInput.addEventListener('keypress', (e) => {\n            if (e.key === 'Enter') this.addTask();\n        });\n        \n        // 初期表示\n        this.renderTasks();\n    }\n    \n    // タスクを追加\n    addTask() {\n        const taskText = this.taskInput.value.trim();\n        \n        if (taskText) {\n            // 新しいタスクを追加\n            this.tasks.push({\n                id: Date.now(),\n                text: taskText,\n                completed: false\n            });\n            \n            // 入力フィールドをクリア\n            this.taskInput.value = '';\n            \n            // タスクを保存して表示を更新\n            this.saveTasks();\n            this.renderTasks();\n        }\n    }\n    \n    // タスクを削除\n    deleteTask(taskId) {\n        this.tasks = this.tasks.filter(task => task.id !== taskId);\n        this.saveTasks();\n        this.renderTasks();\n    }\n    \n    // タスクの完了状態を切り替え\n    toggleTask(taskId) {\n        const task = this.tasks.find(task => task.id === taskId);\n        if (task) {\n            task.completed = !task.completed;\n            this.saveTasks();\n            this.renderTasks();\n        }\n    }\n    \n    // タスクをローカルストレージに保存\n    saveTasks() {\n        localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    }\n    \n    // タスク一覧を表示\n    renderTasks() {\n        // タスクリストをクリア\n        this.taskList.innerHTML = '';\n        \n        // 各タスクの要素を作成\n        this.tasks.forEach(task => {\n            const li = document.createElement('li');\n            li.className = `task-item ${task.completed ? 'completed' : ''}`;\n            \n            // チェックボックス\n            const checkbox = document.createElement('input');\n            checkbox.type = 'checkbox';\n            checkbox.checked = task.completed;\n            checkbox.addEventListener('change', () => this.toggleTask(task.id));\n            \n            // タスクのテキスト\n            const taskText = document.createElement('span');\n            taskText.className = 'task-text';\n            taskText.textContent = task.text;\n            \n            // 削除ボタン\n            const deleteButton = document.createElement('button');\n            deleteButton.className = 'delete-button';\n            deleteButton.textContent = '削除';\n            deleteButton.addEventListener('click', () => this.deleteTask(task.id));\n            \n            // 要素を組み立て\n            li.appendChild(checkbox);\n            li.appendChild(taskText);\n            li.appendChild(deleteButton);\n            \n            // リストに追加\n            this.taskList.appendChild(li);\n        });\n    }\n}\n\n// アプリケーションの初期化\ndocument.addEventListener('DOMContentLoaded', () => {\n    new TodoList();\n});\n```\n\n## 完成したアプリケーションの機能解説\n\n### 1. タスクの追加\n\nタスクの追加は以下の手順で実装されています：\n\n1. ユーザーがテキスト入力\n2. 「追加」ボタンクリックまたはEnterキー押下\n3. 入力値のバリデーション（空文字チェック）\n4. タスクオブジェクトの作成と配列への追加\n5. ローカルストレージへの保存\n6. 画面の更新\n\n```javascript\naddTask() {\n    const taskText = this.taskInput.value.trim();\n    \n    if (taskText) {\n        this.tasks.push({\n            id: Date.now(),\n            text: taskText,\n            completed: false\n        });\n        \n        this.taskInput.value = '';\n        this.saveTasks();\n        this.renderTasks();\n    }\n}\n```\n\n### 2. タスクの完了/未完了の切り替え\n\nチェックボックスをクリックすることで、タスクの状態を切り替えることができます：\n\n1. チェックボックスの状態変更イベントを検知\n2. 対象タスクの完了状態を反転\n3. ローカルストレージに保存\n4. 画面の更新\n\n```javascript\ntoggleTask(taskId) {\n    const task = this.tasks.find(task => task.id === taskId);\n    if (task) {\n        task.completed = !task.completed;\n        this.saveTasks();\n        this.renderTasks();\n    }\n}\n```\n\n### 3. タスクの削除\n\n削除ボタンをクリックすることで、タスクを削除できます：\n\n1. 削除ボタンのクリックイベントを検知\n2. 対象タスクを配列から削除\n3. ローカルストレージに保存\n4. 画面の更新\n\n```javascript\ndeleteTask(taskId) {\n    this.tasks = this.tasks.filter(task => task.id !== taskId);\n    this.saveTasks();\n    this.renderTasks();\n}\n```\n\n### 4. データの永続化\n\nローカルストレージを使用してデータを保存することで、ページをリロードしてもタスクが維持されます：\n\n```javascript\n// データの保存\nsaveTasks() {\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\n}\n\n// データの読み込み\nconstructor() {\n    // ...\n    this.tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    // ...\n}\n```\n\n## プログラムの拡張アイデア\n\nこのベースとなるToDoリストアプリに、以下のような機能を追加することで、より実践的なアプリケーションに発展させることができます：\n\n### 1. タスクの編集機能\n\n```javascript\n// タスクのテキストをダブルクリックで編集可能にする\nmakeTaskEditable(taskElement, task) {\n    const textSpan = taskElement.querySelector('.task-text');\n    textSpan.addEventListener('dblclick', () => {\n        const input = document.createElement('input');\n        input.value = task.text;\n        input.className = 'edit-input';\n        \n        input.addEventListener('blur', () => {\n            task.text = input.value.trim();\n            this.saveTasks();\n            this.renderTasks();\n        });\n        \n        textSpan.parentNode.replaceChild(input, textSpan);\n        input.focus();\n    });\n}\n```\n\n### 2. タスクの優先度設定\n\n```javascript\n// タスクに優先度を追加\naddTask() {\n    const taskText = this.taskInput.value.trim();\n    const priority = document.getElementById('prioritySelect').value;\n    \n    if (taskText) {\n        this.tasks.push({\n            id: Date.now(),\n            text: taskText,\n            completed: false,\n            priority: priority\n        });\n        // ...\n    }\n}\n```\n\n### 3. タスクの期限設定\n\n```javascript\n// タスクに期限を追加\naddTask() {\n    const taskText = this.taskInput.value.trim();\n    const dueDate = document.getElementById('dueDateInput').value;\n    \n    if (taskText) {\n        this.tasks.push({\n            id: Date.now(),\n            text: taskText,\n            completed: false,\n            dueDate: dueDate\n        });\n        // ...\n    }\n}\n```\n\n### 4. タスクのフィルタリング機能\n\n```javascript\n// 完了状態でフィルタリング\nfilterTasks(status) {\n    const filteredTasks = status === 'all' \n        ? this.tasks \n        : this.tasks.filter(task => \n            status === 'completed' ? task.completed : !task.completed\n        );\n    \n    this.renderTasks(filteredTasks);\n}\n```\n\n### 5. タスクの並び替え機能\n\n```javascript\n// タスクを並び替え\nsortTasks(criteria) {\n    switch (criteria) {\n        case 'date':\n            this.tasks.sort((a, b) => a.id - b.id);\n            break;\n        case 'priority':\n            this.tasks.sort((a, b) => b.priority - a.priority);\n            break;\n        case 'alphabetical':\n            this.tasks.sort((a, b) => a.text.localeCompare(b.text));\n            break;\n    }\n    this.renderTasks();\n}\n```\n\n## まとめ\n\nこの記事では、JavaScriptを使って基本的なToDoリストアプリを作成する方法を学びました。\n\n実装したポイント：\n1. クラスベースの設計\n2. イベント処理\n3. ローカルストレージの活用\n4. DOMの操作\n\nこのプログラムを基礎として、より高度な機能を追加することで、実践的なWebアプリケーション開発のスキルを磨くことができます。\n\n## 次のステップ\n\nToDoリストアプリの基本を理解したら、以下の記事も参考にしてください：\n\n- [変数・データ型・関数とは？初心者向けに超わかりやすく解説](/blog/programming-basics-for-beginners/)\n- [【入門】条件分岐(if文)を理解してロジックを組み立てよう](/blog/if-statement-guide/)\n- [【図解】リスト（配列）と辞書（オブジェクト）の違いを解説](/blog/list-and-dictionary-explained/)","src/content/blog/simple-todo-javascript.md","ea519e31446f6efd",{"html":1051,"metadata":1052},"\u003Ch1 id=\"実践簡単なtodoリストを作ってみようjavascript編\">【実践】簡単なToDoリストを作ってみよう！（JavaScript編）\u003C/h1>\n\u003Cp>ToDoリストは、プログラミング学習の実践的なプロジェクトとして最適です。この記事では、JavaScriptを使って基本的なToDoリストアプリを作成する方法を、初心者向けにステップバイステップで解説します。\u003C/p>\n\u003Ch2 id=\"目標とする機能\">目標とする機能\u003C/h2>\n\u003Cp>今回作成するToDoリストアプリには、以下の機能を実装します：\u003C/p>\n\u003Col>\n\u003Cli>タスクの追加\u003C/li>\n\u003Cli>タスクの完了/未完了の切り替え\u003C/li>\n\u003Cli>タスクの削除\u003C/li>\n\u003Cli>タスクの一覧表示\u003C/li>\n\u003Cli>データの永続化（ローカルストレージ）\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"step-1-htmlの作成\">Step 1: HTMLの作成\u003C/h2>\n\u003Cp>まずは、アプリケーションの基本構造となるHTMLを作成します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;!\u003C/span>\u003Cspan style=\"color:#FF79C6\">DOCTYPE\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">html\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> lang\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ja\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">head\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">meta\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> charset\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">UTF-8\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">meta\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> name\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">viewport\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> content\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">width=device-width, initial-scale=1.0\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">title\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>シンプルToDoリスト&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">title\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">style\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        /* スタイルは後で追加します */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">style\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">head\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">body\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> class\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">container\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">h1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>ToDoリスト&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">h1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        &#x3C;!-- タスク入力フォーム -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> class\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">input-section\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">input\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> type\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">text\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> id\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">taskInput\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> placeholder\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">新しいタスクを入力\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">button\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> id\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">addButton\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>追加&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">button\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        &#x3C;!-- タスク一覧 -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">ul\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> id\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">taskList\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">ul\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">script\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> src\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">app.js\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">script\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">body\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"step-2-cssでスタイリング\">Step 2: CSSでスタイリング\u003C/h2>\n\u003Cp>次に、アプリケーションの見た目を整えるCSSを追加します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">style\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    body\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        font-family\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> Arial\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">sans-serif\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        line-height\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1.6\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        margin\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #f5f5f5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">    .container\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        max-width\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 600\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        margin\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#BD93F9\"> auto\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> white\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        border-radius\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 8\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        box-shadow\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 4\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> rgba\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0.1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    h1\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        text-align\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> center\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #333\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">    .input-section\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        display\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> flex\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        gap\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        margin-bottom\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">    #taskInput\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        flex\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        border\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#BD93F9\"> solid\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #ddd\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        border-radius\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 4\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        font-size\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 16\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    button\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #4CAF50\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> white\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        border\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> none\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        border-radius\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 4\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        cursor\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> pointer\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        font-size\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 16\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    button\u003C/span>\u003Cspan style=\"color:#FF79C6;font-style:italic\">:\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\">hover\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #45a049\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">    #taskList\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        list-style\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> none\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">    .task-item\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        display\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> flex\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        align-items\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> center\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #f9f9f9\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        margin-bottom\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        border-radius\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 4\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        gap\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">    .task-item.completed\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #e8f5e9\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        text-decoration\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> line-through\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #666\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">    .task-item\u003C/span>\u003Cspan style=\"color:#FF79C6\"> input\u003C/span>\u003Cspan style=\"color:#F8F8F2\">[\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\">type\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">checkbox\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">] {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        margin-right\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">    .task-item\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> .task-text\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        flex\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">    .delete-button\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #f44336\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">    .delete-button\u003C/span>\u003Cspan style=\"color:#FF79C6;font-style:italic\">:\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\">hover\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">        background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #da190b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">style\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"step-3-javascriptの実装\">Step 3: JavaScriptの実装\u003C/h2>\n\u003Cp>最後に、アプリケーションの機能を実装するJavaScriptコードを作成します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ToDoリストの管理クラス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> TodoList\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    constructor\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // DOMの要素を取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.taskInput \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">getElementById\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">taskInput\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.addButton \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">getElementById\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">addButton\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.taskList \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">getElementById\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">taskList\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // ローカルストレージからタスクを読み込む\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> JSON\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">parse\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(localStorage.\u003C/span>\u003Cspan style=\"color:#50FA7B\">getItem\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">tasks\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)) \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // イベントリスナーを設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.addButton.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addEventListener\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">click\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">());\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.taskInput.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addEventListener\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">keypress\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">e\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (e.key \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Enter\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // 初期表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">renderTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // タスクを追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    addTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskText \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.taskInput.value.\u003C/span>\u003Cspan style=\"color:#50FA7B\">trim\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (taskText) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // 新しいタスクを追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Date.\u003C/span>\u003Cspan style=\"color:#50FA7B\">now\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                text\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskText,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                completed\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // 入力フィールドをクリア\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.taskInput.value \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> ''\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // タスクを保存して表示を更新\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">saveTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">renderTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // タスクを削除\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    deleteTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">taskId\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">filter\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">task\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> task.id \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskId);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">saveTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">renderTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // タスクの完了状態を切り替え\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    toggleTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">taskId\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> task \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">find\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">task\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> task.id \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskId);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (task) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            task.completed \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> !\u003C/span>\u003Cspan style=\"color:#F8F8F2\">task.completed;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">saveTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">renderTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // タスクをローカルストレージに保存\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    saveTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        localStorage.\u003C/span>\u003Cspan style=\"color:#50FA7B\">setItem\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">tasks\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">JSON\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">stringify\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // タスク一覧を表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    renderTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // タスクリストをクリア\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.taskList.innerHTML \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> ''\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // 各タスクの要素を作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">forEach\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">task\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> li \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">createElement\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">li\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            li.className \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `task-item \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">task.completed\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ?\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">completed\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> :\u003C/span>\u003Cspan style=\"color:#E9F284\"> ''\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // チェックボックス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> checkbox \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">createElement\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">input\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            checkbox.type \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">checkbox\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            checkbox.checked \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> task.completed;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            checkbox.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addEventListener\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">change\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">toggleTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(task.id));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // タスクのテキスト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskText \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">createElement\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">span\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            taskText.className \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">task-text\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            taskText.textContent \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> task.text;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // 削除ボタン\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> deleteButton \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">createElement\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">button\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            deleteButton.className \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">delete-button\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            deleteButton.textContent \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">削除\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            deleteButton.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addEventListener\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">click\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">deleteTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(task.id));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // 要素を組み立て\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            li.\u003C/span>\u003Cspan style=\"color:#50FA7B\">appendChild\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(checkbox);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            li.\u003C/span>\u003Cspan style=\"color:#50FA7B\">appendChild\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(taskText);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            li.\u003C/span>\u003Cspan style=\"color:#50FA7B\">appendChild\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(deleteButton);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // リストに追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.taskList.\u003C/span>\u003Cspan style=\"color:#50FA7B\">appendChild\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(li);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// アプリケーションの初期化\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addEventListener\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">DOMContentLoaded\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6;font-weight:bold\">    new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> TodoList\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"完成したアプリケーションの機能解説\">完成したアプリケーションの機能解説\u003C/h2>\n\u003Ch3 id=\"1-タスクの追加\">1. タスクの追加\u003C/h3>\n\u003Cp>タスクの追加は以下の手順で実装されています：\u003C/p>\n\u003Col>\n\u003Cli>ユーザーがテキスト入力\u003C/li>\n\u003Cli>「追加」ボタンクリックまたはEnterキー押下\u003C/li>\n\u003Cli>入力値のバリデーション（空文字チェック）\u003C/li>\n\u003Cli>タスクオブジェクトの作成と配列への追加\u003C/li>\n\u003Cli>ローカルストレージへの保存\u003C/li>\n\u003Cli>画面の更新\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">addTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskText \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.taskInput.value.\u003C/span>\u003Cspan style=\"color:#50FA7B\">trim\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (taskText) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Date.\u003C/span>\u003Cspan style=\"color:#50FA7B\">now\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            text\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskText,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            completed\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.taskInput.value \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> ''\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">saveTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">renderTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-タスクの完了未完了の切り替え\">2. タスクの完了/未完了の切り替え\u003C/h3>\n\u003Cp>チェックボックスをクリックすることで、タスクの状態を切り替えることができます：\u003C/p>\n\u003Col>\n\u003Cli>チェックボックスの状態変更イベントを検知\u003C/li>\n\u003Cli>対象タスクの完了状態を反転\u003C/li>\n\u003Cli>ローカルストレージに保存\u003C/li>\n\u003Cli>画面の更新\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">toggleTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(taskId) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> task \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">find\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">task\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> task.id \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskId);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (task) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        task.completed \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> !\u003C/span>\u003Cspan style=\"color:#F8F8F2\">task.completed;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">saveTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">renderTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-タスクの削除\">3. タスクの削除\u003C/h3>\n\u003Cp>削除ボタンをクリックすることで、タスクを削除できます：\u003C/p>\n\u003Col>\n\u003Cli>削除ボタンのクリックイベントを検知\u003C/li>\n\u003Cli>対象タスクを配列から削除\u003C/li>\n\u003Cli>ローカルストレージに保存\u003C/li>\n\u003Cli>画面の更新\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">deleteTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(taskId) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">filter\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">task\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> task.id \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskId);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">saveTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">renderTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"4-データの永続化\">4. データの永続化\u003C/h3>\n\u003Cp>ローカルストレージを使用してデータを保存することで、ページをリロードしてもタスクが維持されます：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// データの保存\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">saveTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    localStorage.\u003C/span>\u003Cspan style=\"color:#50FA7B\">setItem\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">tasks\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">JSON\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">stringify\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\">this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// データの読み込み\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">constructor\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> JSON\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">parse\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(localStorage.\u003C/span>\u003Cspan style=\"color:#50FA7B\">getItem\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">tasks\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)) \u003C/span>\u003Cspan style=\"color:#FF79C6\">||\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"プログラムの拡張アイデア\">プログラムの拡張アイデア\u003C/h2>\n\u003Cp>このベースとなるToDoリストアプリに、以下のような機能を追加することで、より実践的なアプリケーションに発展させることができます：\u003C/p>\n\u003Ch3 id=\"1-タスクの編集機能\">1. タスクの編集機能\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// タスクのテキストをダブルクリックで編集可能にする\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">makeTaskEditable\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(taskElement, task) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> textSpan \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskElement.\u003C/span>\u003Cspan style=\"color:#50FA7B\">querySelector\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">.task-text\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    textSpan.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addEventListener\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">dblclick\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> input \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">createElement\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">input\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        input.value \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> task.text;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        input.className \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">edit-input\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        input.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addEventListener\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">blur\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            task.text \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> input.value.\u003C/span>\u003Cspan style=\"color:#50FA7B\">trim\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">saveTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">renderTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        textSpan.parentNode.\u003C/span>\u003Cspan style=\"color:#50FA7B\">replaceChild\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(input, textSpan);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        input.\u003C/span>\u003Cspan style=\"color:#50FA7B\">focus\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-タスクの優先度設定\">2. タスクの優先度設定\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// タスクに優先度を追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">addTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskText \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.taskInput.value.\u003C/span>\u003Cspan style=\"color:#50FA7B\">trim\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> priority \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">getElementById\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">prioritySelect\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).value;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (taskText) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Date.\u003C/span>\u003Cspan style=\"color:#50FA7B\">now\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            text\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskText,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            completed\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            priority\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> priority\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-タスクの期限設定\">3. タスクの期限設定\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// タスクに期限を追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">addTask\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskText \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.taskInput.value.\u003C/span>\u003Cspan style=\"color:#50FA7B\">trim\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> dueDate \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">getElementById\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">dueDateInput\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).value;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (taskText) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Date.\u003C/span>\u003Cspan style=\"color:#50FA7B\">now\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            text\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> taskText,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            completed\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            dueDate\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> dueDate\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"4-タスクのフィルタリング機能\">4. タスクのフィルタリング機能\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 完了状態でフィルタリング\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">filterTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(status) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> filteredTasks \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> status \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">all\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        ?\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        :\u003C/span>\u003Cspan style=\"color:#BD93F9;font-style:italic\"> this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">filter\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">task\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            status \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">completed\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ?\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> task.completed \u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#FF79C6\"> !\u003C/span>\u003Cspan style=\"color:#F8F8F2\">task.completed\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        );\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">renderTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(filteredTasks);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"5-タスクの並び替え機能\">5. タスクの並び替え機能\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// タスクを並び替え\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">sortTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(criteria) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    switch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (criteria) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        case\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">date\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">sort\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a.id \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b.id);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        case\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">priority\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">sort\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b.priority \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a.priority);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        case\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">alphabetical\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">            this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.tasks.\u003C/span>\u003Cspan style=\"color:#50FA7B\">sort\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a.text.\u003C/span>\u003Cspan style=\"color:#50FA7B\">localeCompare\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(b.text));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">    this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">renderTasks\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>この記事では、JavaScriptを使って基本的なToDoリストアプリを作成する方法を学びました。\u003C/p>\n\u003Cp>実装したポイント：\u003C/p>\n\u003Col>\n\u003Cli>クラスベースの設計\u003C/li>\n\u003Cli>イベント処理\u003C/li>\n\u003Cli>ローカルストレージの活用\u003C/li>\n\u003Cli>DOMの操作\u003C/li>\n\u003C/ol>\n\u003Cp>このプログラムを基礎として、より高度な機能を追加することで、実践的なWebアプリケーション開発のスキルを磨くことができます。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>ToDoリストアプリの基本を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/programming-basics-for-beginners/\">変数・データ型・関数とは？初心者向けに超わかりやすく解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/if-statement-guide/\">【入門】条件分岐(if文)を理解してロジックを組み立てよう\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/list-and-dictionary-explained/\">【図解】リスト（配列）と辞書（オブジェクト）の違いを解説\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":1053,"imagePaths":1099,"frontmatter":1100},[1054,1056,1057,1060,1063,1066,1068,1071,1074,1077,1080,1082,1085,1088,1091,1094,1097,1098],{"depth":26,"slug":1055,"text":1044},"実践簡単なtodoリストを作ってみようjavascript編",{"depth":29,"slug":753,"text":753},{"depth":29,"slug":1058,"text":1059},"step-1-htmlの作成","Step 1: HTMLの作成",{"depth":29,"slug":1061,"text":1062},"step-2-cssでスタイリング","Step 2: CSSでスタイリング",{"depth":29,"slug":1064,"text":1065},"step-3-javascriptの実装","Step 3: JavaScriptの実装",{"depth":29,"slug":1067,"text":1067},"完成したアプリケーションの機能解説",{"depth":33,"slug":1069,"text":1070},"1-タスクの追加","1. タスクの追加",{"depth":33,"slug":1072,"text":1073},"2-タスクの完了未完了の切り替え","2. タスクの完了/未完了の切り替え",{"depth":33,"slug":1075,"text":1076},"3-タスクの削除","3. タスクの削除",{"depth":33,"slug":1078,"text":1079},"4-データの永続化","4. データの永続化",{"depth":29,"slug":1081,"text":1081},"プログラムの拡張アイデア",{"depth":33,"slug":1083,"text":1084},"1-タスクの編集機能","1. タスクの編集機能",{"depth":33,"slug":1086,"text":1087},"2-タスクの優先度設定","2. タスクの優先度設定",{"depth":33,"slug":1089,"text":1090},"3-タスクの期限設定","3. タスクの期限設定",{"depth":33,"slug":1092,"text":1093},"4-タスクのフィルタリング機能","4. タスクのフィルタリング機能",{"depth":33,"slug":1095,"text":1096},"5-タスクの並び替え機能","5. タスクの並び替え機能",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":1044,"description":1045,"pubDate":1101,"heroImage":534},"Mar 15 2025","hello-world-programming-guide",{"id":1102,"data":1104,"body":1108,"filePath":1109,"digest":1110,"rendered":1111},{"title":1105,"description":1106,"pubDate":1107,"heroImage":534},"【超初心者向け】Hello Worldを書いてみよう！（Python, JavaScript, Java）","プログラミング入門の第一歩、Hello World プログラムの書き方を3つの主要言語で解説します。",["Date","2025-03-08T15:00:00.000Z"],"# 【超初心者向け】Hello Worldを書いてみよう！（Python, JavaScript, Java）\n\nプログラミングを始める時、最初に書くのが「Hello World」プログラムです。これは画面に「Hello World」という文字を表示する、最もシンプルなプログラムです。この記事では、3つの主要なプログラミング言語でHello Worldを書く方法を解説します。\n\n## なぜHello Worldから始めるの？\n\nHello Worldプログラムには、以下のような意義があります：\n\n1. **最小限のコードで動作確認ができる**\n   - 開発環境が正しく設定されているか確認できる\n   - プログラムの基本的な構造を理解できる\n\n2. **プログラミングの第一歩として最適**\n   - 成功体験を得やすい\n   - 言語の基本的な文法に触れられる\n\n3. **伝統的な入門プログラム**\n   - 1978年に出版された「プログラミング言語C」で紹介されて以来の伝統\n   - 世界中のプログラマーの共通体験\n\n## Python での Hello World\n\nPythonは、シンプルで読みやすい文法が特徴の言語です。初心者に最適です。\n\n### コード\n```python\nprint(\"Hello, World!\")\n```\n\n### 解説\n\n1. `print()` は画面に文字を表示する関数\n2. `\"Hello, World!\"` は表示したい文字列（ダブルクォートで囲む）\n3. 1行だけで完結する、非常にシンプルなコード\n\n### 実行方法\n\n1. テキストエディタで新規ファイル `hello.py` を作成\n2. 上記のコードを入力して保存\n3. ターミナルで以下のコマンドを実行：\n```bash\npython hello.py\n```\n\n## JavaScript での Hello World\n\nJavaScriptは、Webブラウザで動作する言語として広く使われています。\n\n### コード\n```javascript\n// ブラウザのコンソールに表示\nconsole.log(\"Hello, World!\");\n\n// HTMLページに表示\ndocument.write(\"Hello, World!\");\n\n// アラートとして表示\nalert(\"Hello, World!\");\n```\n\n### 解説\n\n1. `console.log()`: 開発者ツールのコンソールに表示\n2. `document.write()`: Webページに直接表示\n3. `alert()`: ポップアップウィンドウで表示\n\n### 実行方法\n\n#### 方法1: HTMLファイルを作成\n\n```html\n\u003C!DOCTYPE html>\n\u003Chtml>\n\u003Chead>\n    \u003Ctitle>Hello World\u003C/title>\n\u003C/head>\n\u003Cbody>\n    \u003Cscript>\n        console.log(\"Hello, World!\");\n        document.write(\"Hello, World!\");\n        // alert(\"Hello, World!\");  // コメントアウトしておくと邪魔になりません\n    \u003C/script>\n\u003C/body>\n\u003C/html>\n```\n\n#### 方法2: ブラウザの開発者ツール\n\n1. ブラウザで任意のページを開く\n2. F12キーを押して開発者ツールを開く\n3. コンソールタブで直接コードを入力\n\n## Java での Hello World\n\nJavaは、堅牢なエンタープライズアプリケーションの開発によく使われる言語です。\n\n### コード\n```java\npublic class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}\n```\n\n### 解説\n\n1. `public class HelloWorld`: クラスの定義（ファイル名と同じにする必要がある）\n2. `public static void main(String[] args)`: プログラムの開始点（エントリーポイント）\n3. `System.out.println()`: 画面に文字を表示するメソッド\n\n### 実行方法\n\n1. テキストエディタで `HelloWorld.java` を作成\n2. 上記のコードを入力して保存\n3. ターミナルで以下のコマンドを実行：\n```bash\njavac HelloWorld.java  # コンパイル\njava HelloWorld        # 実行\n```\n\n## 各言語の比較\n\n### コードの長さ\n\n1. **Python**: 1行\n2. **JavaScript**: 1行\n3. **Java**: 5行\n\n### 必要な前提知識\n\n#### Python\n- 関数の基本的な使い方\n- 文字列の概念\n\n#### JavaScript\n- 関数の基本的な使い方\n- 文字列の概念\n- ブラウザの開発者ツールの使い方（オプション）\n\n#### Java\n- クラスとメソッドの基本概念\n- 文字列の概念\n- コンパイルと実行の違い\n- 静的型付けの基本\n\n### 開発環境の準備\n\n#### Python\n1. Python をインストール\n2. テキストエディタ（VSCode, PyCharm など）をインストール\n\n#### JavaScript\n1. テキストエディタをインストール\n2. Webブラウザ（すでにインストール済みの可能性が高い）\n\n#### Java\n1. JDK (Java Development Kit) をインストール\n2. テキストエディタまたはIDE（Eclipse, IntelliJ IDEA など）をインストール\n\n## よくある間違いと解決方法\n\n### Python\n\n#### 問題1: 構文エラー\n```python\n# 間違い\nprint(\"Hello, World!)  # クォートが閉じていない\n\n# 正しい\nprint(\"Hello, World!\")\n```\n\n#### 問題2: インデントエラー\n```python\n# 間違い\n  print(\"Hello, World!\")  # 不要なインデント\n\n# 正しい\nprint(\"Hello, World!\")\n```\n\n### JavaScript\n\n#### 問題1: セミコロンの忘れ\n```javascript\n// これも動作します（自動セミコロン挿入）\nconsole.log(\"Hello, World!\")\n\n// より明示的な書き方\nconsole.log(\"Hello, World!\");\n```\n\n#### 問題2: console のスペルミス\n```javascript\n// 間違い\nconsle.log(\"Hello, World!\");  // console が間違っている\n\n// 正しい\nconsole.log(\"Hello, World!\");\n```\n\n### Java\n\n#### 問題1: クラス名とファイル名の不一致\n```java\n// ファイル名: hello.java\npublic class HelloWorld {  // クラス名とファイル名が一致していない\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}\n```\n\n#### 問題2: メインメソッドの書き方\n```java\n// 間違い\npublic class HelloWorld {\n    public void main() {  // static がない、引数がない\n        System.out.println(\"Hello, World!\");\n    }\n}\n\n// 正しい\npublic class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}\n```\n\n## プログラミング学習の次のステップ\n\nHello Worldが書けたら、次は以下のような基本概念を学んでいきましょう：\n\n1. **変数とデータ型**\n   - 数値、文字列、真偽値など\n   - 変数の宣言と代入\n\n2. **制御構造**\n   - if文による条件分岐\n   - forループによる繰り返し処理\n\n3. **関数（メソッド）**\n   - 関数の定義と呼び出し\n   - 引数と戻り値\n\n4. **配列とコレクション**\n   - データの集まりを扱う方法\n   - 要素の追加、削除、検索\n\n## まとめ\n\nHello Worldプログラムは、プログラミング入門の第一歩として最適です。各言語の特徴を以下にまとめます：\n\n- **Python**: 最もシンプルで初心者向け\n- **JavaScript**: Webブラウザで手軽に実行可能\n- **Java**: やや複雑だが、プログラミングの重要な概念を学べる\n\nどの言語を選んでも、Hello Worldを通じてプログラミングの基本を学ぶことができます。まずは興味のある言語で試してみましょう！\n\n## 次のステップ\n\nHello Worldの基本を理解したら、以下の記事も参考にしてください：\n\n- [変数・データ型・関数とは？初心者向けに超わかりやすく解説](/blog/programming-basics-for-beginners/)\n- [プログラミング初心者が最初に学ぶべき5つの概念](/blog/programming-concepts-for-beginners/)\n- [【初心者向け】プログラミングのエラーの種類と対処法](/blog/programming-error-handling-guide/)","src/content/blog/hello-world-programming-guide.md","14ad12b05ee8b1d9",{"html":1112,"metadata":1113},"\u003Ch1 id=\"超初心者向けhello-worldを書いてみようpython-javascript-java\">【超初心者向け】Hello Worldを書いてみよう！（Python, JavaScript, Java）\u003C/h1>\n\u003Cp>プログラミングを始める時、最初に書くのが「Hello World」プログラムです。これは画面に「Hello World」という文字を表示する、最もシンプルなプログラムです。この記事では、3つの主要なプログラミング言語でHello Worldを書く方法を解説します。\u003C/p>\n\u003Ch2 id=\"なぜhello-worldから始めるの\">なぜHello Worldから始めるの？\u003C/h2>\n\u003Cp>Hello Worldプログラムには、以下のような意義があります：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>最小限のコードで動作確認ができる\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>開発環境が正しく設定されているか確認できる\u003C/li>\n\u003Cli>プログラムの基本的な構造を理解できる\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>プログラミングの第一歩として最適\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>成功体験を得やすい\u003C/li>\n\u003Cli>言語の基本的な文法に触れられる\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>伝統的な入門プログラム\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>1978年に出版された「プログラミング言語C」で紹介されて以来の伝統\u003C/li>\n\u003Cli>世界中のプログラマーの共通体験\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"python-での-hello-world\">Python での Hello World\u003C/h2>\n\u003Cp>Pythonは、シンプルで読みやすい文法が特徴の言語です。初心者に最適です。\u003C/p>\n\u003Ch3 id=\"コード\">コード\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"解説\">解説\u003C/h3>\n\u003Col>\n\u003Cli>\u003Ccode>print()\u003C/code> は画面に文字を表示する関数\u003C/li>\n\u003Cli>\u003Ccode>\"Hello, World!\"\u003C/code> は表示したい文字列（ダブルクォートで囲む）\u003C/li>\n\u003Cli>1行だけで完結する、非常にシンプルなコード\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"実行方法\">実行方法\u003C/h3>\n\u003Col>\n\u003Cli>テキストエディタで新規ファイル \u003Ccode>hello.py\u003C/code> を作成\u003C/li>\n\u003Cli>上記のコードを入力して保存\u003C/li>\n\u003Cli>ターミナルで以下のコマンドを実行：\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">python\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> hello.py\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"javascript-での-hello-world\">JavaScript での Hello World\u003C/h2>\n\u003Cp>JavaScriptは、Webブラウザで動作する言語として広く使われています。\u003C/p>\n\u003Ch3 id=\"コード-1\">コード\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ブラウザのコンソールに表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// HTMLページに表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">write\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// アラートとして表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">alert\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"解説-1\">解説\u003C/h3>\n\u003Col>\n\u003Cli>\u003Ccode>console.log()\u003C/code>: 開発者ツールのコンソールに表示\u003C/li>\n\u003Cli>\u003Ccode>document.write()\u003C/code>: Webページに直接表示\u003C/li>\n\u003Cli>\u003Ccode>alert()\u003C/code>: ポップアップウィンドウで表示\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"実行方法-1\">実行方法\u003C/h3>\n\u003Ch4 id=\"方法1-htmlファイルを作成\">方法1: HTMLファイルを作成\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;!\u003C/span>\u003Cspan style=\"color:#FF79C6\">DOCTYPE\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">head\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">title\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>Hello World&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">title\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">head\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">body\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">script\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">write\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // alert(\"Hello, World!\");  // コメントアウトしておくと邪魔になりません\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">script\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">body\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"方法2-ブラウザの開発者ツール\">方法2: ブラウザの開発者ツール\u003C/h4>\n\u003Col>\n\u003Cli>ブラウザで任意のページを開く\u003C/li>\n\u003Cli>F12キーを押して開発者ツールを開く\u003C/li>\n\u003Cli>コンソールタブで直接コードを入力\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"java-での-hello-world\">Java での Hello World\u003C/h2>\n\u003Cp>Javaは、堅牢なエンタープライズアプリケーションの開発によく使われる言語です。\u003C/p>\n\u003Ch3 id=\"コード-2\">コード\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"java\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">public\u003C/span>\u003Cspan style=\"color:#FF79C6\"> class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> HelloWorld\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    public\u003C/span>\u003Cspan style=\"color:#FF79C6\"> static\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> void\u003C/span>\u003Cspan style=\"color:#50FA7B\"> main\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">String\u003C/span>\u003Cspan style=\"color:#F8F8F2\">[] \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">args\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        System.out.\u003C/span>\u003Cspan style=\"color:#50FA7B\">println\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"解説-2\">解説\u003C/h3>\n\u003Col>\n\u003Cli>\u003Ccode>public class HelloWorld\u003C/code>: クラスの定義（ファイル名と同じにする必要がある）\u003C/li>\n\u003Cli>\u003Ccode>public static void main(String[] args)\u003C/code>: プログラムの開始点（エントリーポイント）\u003C/li>\n\u003Cli>\u003Ccode>System.out.println()\u003C/code>: 画面に文字を表示するメソッド\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"実行方法-2\">実行方法\u003C/h3>\n\u003Col>\n\u003Cli>テキストエディタで \u003Ccode>HelloWorld.java\u003C/code> を作成\u003C/li>\n\u003Cli>上記のコードを入力して保存\u003C/li>\n\u003Cli>ターミナルで以下のコマンドを実行：\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">javac\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> HelloWorld.java\u003C/span>\u003Cspan style=\"color:#6272A4\">  # コンパイル\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">java\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> HelloWorld\u003C/span>\u003Cspan style=\"color:#6272A4\">        # 実行\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"各言語の比較\">各言語の比較\u003C/h2>\n\u003Ch3 id=\"コードの長さ\">コードの長さ\u003C/h3>\n\u003Col>\n\u003Cli>\u003Cstrong>Python\u003C/strong>: 1行\u003C/li>\n\u003Cli>\u003Cstrong>JavaScript\u003C/strong>: 1行\u003C/li>\n\u003Cli>\u003Cstrong>Java\u003C/strong>: 5行\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"必要な前提知識\">必要な前提知識\u003C/h3>\n\u003Ch4 id=\"python\">Python\u003C/h4>\n\u003Cul>\n\u003Cli>関数の基本的な使い方\u003C/li>\n\u003Cli>文字列の概念\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"javascript\">JavaScript\u003C/h4>\n\u003Cul>\n\u003Cli>関数の基本的な使い方\u003C/li>\n\u003Cli>文字列の概念\u003C/li>\n\u003Cli>ブラウザの開発者ツールの使い方（オプション）\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"java\">Java\u003C/h4>\n\u003Cul>\n\u003Cli>クラスとメソッドの基本概念\u003C/li>\n\u003Cli>文字列の概念\u003C/li>\n\u003Cli>コンパイルと実行の違い\u003C/li>\n\u003Cli>静的型付けの基本\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"開発環境の準備\">開発環境の準備\u003C/h3>\n\u003Ch4 id=\"python-1\">Python\u003C/h4>\n\u003Col>\n\u003Cli>Python をインストール\u003C/li>\n\u003Cli>テキストエディタ（VSCode, PyCharm など）をインストール\u003C/li>\n\u003C/ol>\n\u003Ch4 id=\"javascript-1\">JavaScript\u003C/h4>\n\u003Col>\n\u003Cli>テキストエディタをインストール\u003C/li>\n\u003Cli>Webブラウザ（すでにインストール済みの可能性が高い）\u003C/li>\n\u003C/ol>\n\u003Ch4 id=\"java-1\">Java\u003C/h4>\n\u003Col>\n\u003Cli>JDK (Java Development Kit) をインストール\u003C/li>\n\u003Cli>テキストエディタまたはIDE（Eclipse, IntelliJ IDEA など）をインストール\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"よくある間違いと解決方法\">よくある間違いと解決方法\u003C/h2>\n\u003Ch3 id=\"python-2\">Python\u003C/h3>\n\u003Ch4 id=\"問題1-構文エラー\">問題1: 構文エラー\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># 間違い\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!)  # クォートが閉じていない\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># 正しい\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"問題2-インデントエラー\">問題2: インデントエラー\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># 間違い\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">  print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)  \u003C/span>\u003Cspan style=\"color:#6272A4\"># 不要なインデント\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># 正しい\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"javascript-2\">JavaScript\u003C/h3>\n\u003Ch4 id=\"問題1-セミコロンの忘れ\">問題1: セミコロンの忘れ\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// これも動作します（自動セミコロン挿入）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// より明示的な書き方\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"問題2-console-のスペルミス\">問題2: console のスペルミス\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 間違い\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">consle.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// console が間違っている\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"java-2\">Java\u003C/h3>\n\u003Ch4 id=\"問題1-クラス名とファイル名の不一致\">問題1: クラス名とファイル名の不一致\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"java\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ファイル名: hello.java\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">public\u003C/span>\u003Cspan style=\"color:#FF79C6\"> class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> HelloWorld\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {  \u003C/span>\u003Cspan style=\"color:#6272A4\">// クラス名とファイル名が一致していない\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    public\u003C/span>\u003Cspan style=\"color:#FF79C6\"> static\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> void\u003C/span>\u003Cspan style=\"color:#50FA7B\"> main\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">String\u003C/span>\u003Cspan style=\"color:#F8F8F2\">[] \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">args\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        System.out.\u003C/span>\u003Cspan style=\"color:#50FA7B\">println\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"問題2-メインメソッドの書き方\">問題2: メインメソッドの書き方\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"java\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 間違い\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">public\u003C/span>\u003Cspan style=\"color:#FF79C6\"> class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> HelloWorld\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    public\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> void\u003C/span>\u003Cspan style=\"color:#50FA7B\"> main\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {  \u003C/span>\u003Cspan style=\"color:#6272A4\">// static がない、引数がない\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        System.out.\u003C/span>\u003Cspan style=\"color:#50FA7B\">println\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 正しい\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">public\u003C/span>\u003Cspan style=\"color:#FF79C6\"> class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> HelloWorld\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    public\u003C/span>\u003Cspan style=\"color:#FF79C6\"> static\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> void\u003C/span>\u003Cspan style=\"color:#50FA7B\"> main\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">String\u003C/span>\u003Cspan style=\"color:#F8F8F2\">[] \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">args\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        System.out.\u003C/span>\u003Cspan style=\"color:#50FA7B\">println\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"プログラミング学習の次のステップ\">プログラミング学習の次のステップ\u003C/h2>\n\u003Cp>Hello Worldが書けたら、次は以下のような基本概念を学んでいきましょう：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>変数とデータ型\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>数値、文字列、真偽値など\u003C/li>\n\u003Cli>変数の宣言と代入\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>制御構造\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>if文による条件分岐\u003C/li>\n\u003Cli>forループによる繰り返し処理\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>関数（メソッド）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>関数の定義と呼び出し\u003C/li>\n\u003Cli>引数と戻り値\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>配列とコレクション\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>データの集まりを扱う方法\u003C/li>\n\u003Cli>要素の追加、削除、検索\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>Hello Worldプログラムは、プログラミング入門の第一歩として最適です。各言語の特徴を以下にまとめます：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Python\u003C/strong>: 最もシンプルで初心者向け\u003C/li>\n\u003Cli>\u003Cstrong>JavaScript\u003C/strong>: Webブラウザで手軽に実行可能\u003C/li>\n\u003Cli>\u003Cstrong>Java\u003C/strong>: やや複雑だが、プログラミングの重要な概念を学べる\u003C/li>\n\u003C/ul>\n\u003Cp>どの言語を選んでも、Hello Worldを通じてプログラミングの基本を学ぶことができます。まずは興味のある言語で試してみましょう！\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>Hello Worldの基本を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/programming-basics-for-beginners/\">変数・データ型・関数とは？初心者向けに超わかりやすく解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-error-handling-guide/\">【初心者向け】プログラミングのエラーの種類と対処法\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":1114,"imagePaths":1206,"frontmatter":1207},[1115,1117,1120,1123,1125,1127,1129,1132,1134,1136,1138,1141,1144,1147,1149,1151,1153,1155,1157,1159,1162,1165,1168,1170,1172,1174,1176,1178,1180,1183,1186,1188,1191,1194,1196,1199,1202,1204,1205],{"depth":26,"slug":1116,"text":1105},"超初心者向けhello-worldを書いてみようpython-javascript-java",{"depth":29,"slug":1118,"text":1119},"なぜhello-worldから始めるの","なぜHello Worldから始めるの？",{"depth":29,"slug":1121,"text":1122},"python-での-hello-world","Python での Hello World",{"depth":33,"slug":1124,"text":1124},"コード",{"depth":33,"slug":1126,"text":1126},"解説",{"depth":33,"slug":1128,"text":1128},"実行方法",{"depth":29,"slug":1130,"text":1131},"javascript-での-hello-world","JavaScript での Hello World",{"depth":33,"slug":1133,"text":1124},"コード-1",{"depth":33,"slug":1135,"text":1126},"解説-1",{"depth":33,"slug":1137,"text":1128},"実行方法-1",{"depth":67,"slug":1139,"text":1140},"方法1-htmlファイルを作成","方法1: HTMLファイルを作成",{"depth":67,"slug":1142,"text":1143},"方法2-ブラウザの開発者ツール","方法2: ブラウザの開発者ツール",{"depth":29,"slug":1145,"text":1146},"java-での-hello-world","Java での Hello World",{"depth":33,"slug":1148,"text":1124},"コード-2",{"depth":33,"slug":1150,"text":1126},"解説-2",{"depth":33,"slug":1152,"text":1128},"実行方法-2",{"depth":29,"slug":1154,"text":1154},"各言語の比較",{"depth":33,"slug":1156,"text":1156},"コードの長さ",{"depth":33,"slug":1158,"text":1158},"必要な前提知識",{"depth":67,"slug":1160,"text":1161},"python","Python",{"depth":67,"slug":1163,"text":1164},"javascript","JavaScript",{"depth":67,"slug":1166,"text":1167},"java","Java",{"depth":33,"slug":1169,"text":1169},"開発環境の準備",{"depth":67,"slug":1171,"text":1161},"python-1",{"depth":67,"slug":1173,"text":1164},"javascript-1",{"depth":67,"slug":1175,"text":1167},"java-1",{"depth":29,"slug":1177,"text":1177},"よくある間違いと解決方法",{"depth":33,"slug":1179,"text":1161},"python-2",{"depth":67,"slug":1181,"text":1182},"問題1-構文エラー","問題1: 構文エラー",{"depth":67,"slug":1184,"text":1185},"問題2-インデントエラー","問題2: インデントエラー",{"depth":33,"slug":1187,"text":1164},"javascript-2",{"depth":67,"slug":1189,"text":1190},"問題1-セミコロンの忘れ","問題1: セミコロンの忘れ",{"depth":67,"slug":1192,"text":1193},"問題2-console-のスペルミス","問題2: console のスペルミス",{"depth":33,"slug":1195,"text":1167},"java-2",{"depth":67,"slug":1197,"text":1198},"問題1-クラス名とファイル名の不一致","問題1: クラス名とファイル名の不一致",{"depth":67,"slug":1200,"text":1201},"問題2-メインメソッドの書き方","問題2: メインメソッドの書き方",{"depth":29,"slug":1203,"text":1203},"プログラミング学習の次のステップ",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":1105,"description":1106,"pubDate":1208,"heroImage":534},"Mar 9 2025","simple-nodejs-server",{"id":1209,"data":1211,"body":1215,"filePath":1216,"digest":1217,"rendered":1218},{"title":1212,"description":1213,"pubDate":1214,"heroImage":17},"【実践】Node.jsで簡単なサーバーを作ってみよう！","Node.jsを使って基本的なWebサーバーを作成する方法を、初心者向けにステップバイステップで解説します。",["Date","2025-03-17T15:00:00.000Z"],"# 【実践】Node.jsで簡単なサーバーを作ってみよう！\r\n\r\nNode.jsを使ってWebサーバーを作成することは、バックエンド開発の基本的なスキルの一つです。この記事では、シンプルなWebサーバーを作成する方法を、初心者向けにステップバイステップで解説します。\r\n\r\n## 目標とする機能\r\n\r\n今回作成するWebサーバーには、以下の機能を実装します：\r\n\r\n1. 基本的なHTTPサーバー\r\n2. 静的ファイルの配信\r\n3. 簡単なAPIエンドポォイント\r\n4. フォームデータの処理\r\n5. エラーハンドリング\r\n\r\n## Step 1: プロジェクトの準備\r\n\r\nまず、新しいプロジェクトを作成し、必要なパッケージをインストールします。\r\n\r\n```bash\r\n# プロジェクトディレクトリの作成\r\nmkdir simple-node-server\r\ncd simple-node-server\r\n\r\n# package.jsonの初期化\r\nnpm init -y\r\n\r\n# 必要なパッケージのインストール\r\nnpm install express\r\n```\r\n\r\n## Step 2: 基本的なサーバーの作成\r\n\r\n最初に、シンプルなHTTPサーバーを作成します。\r\n\r\n```javascript\r\n// server.js\r\nconst express = require('express');\r\nconst app = express();\r\nconst port = 3000;\r\n\r\n// ミドルウェアの設定\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\n// ルートパスへのGETリクエスト\r\napp.get('/', (req, res) => {\r\n  res.send('Hello, World!');\r\n});\r\n\r\n// サーバーの起動\r\napp.listen(port, () => {\r\n  console.log(`サーバーが http://localhost:${port} で起動しました`);\r\n});\r\n```\r\n\r\nこのコードでは：\r\n- Expressフレームワークを使用\r\n- JSONとフォームデータの処理を有効化\r\n- ルートパス（/）へのGETリクエストを処理\r\n- ポート3000でサーバーを起動\r\n\r\n## Step 3: 静的ファイルの配信\r\n\r\nHTMLファイルやCSSファイルなどの静的ファイルを配信する機能を追加します。\r\n\r\n```javascript\r\n// server.js\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst app = express();\r\nconst port = 3000;\r\n\r\n// ミドルウェアの設定\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(express.static('public'));\r\n\r\n// ルートパスへのGETリクエスト\r\napp.get('/', (req, res) => {\r\n  res.sendFile(path.join(__dirname, 'public', 'index.html'));\r\n});\r\n\r\n// サーバーの起動\r\napp.listen(port, () => {\r\n  console.log(`サーバーが http://localhost:${port} で起動しました`);\r\n});\r\n```\r\n\r\n静的ファイルの例：\r\n\r\n```html\r\n\u003C!-- public/index.html -->\r\n\u003C!DOCTYPE html>\r\n\u003Chtml lang=\"ja\">\r\n\u003Chead>\r\n    \u003Cmeta charset=\"UTF-8\">\r\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    \u003Ctitle>シンプルWebサーバー\u003C/title>\r\n    \u003Clink rel=\"stylesheet\" href=\"/styles.css\">\r\n\u003C/head>\r\n\u003Cbody>\r\n    \u003Cdiv class=\"container\">\r\n        \u003Ch1>Welcome to My Server\u003C/h1>\r\n        \u003Cform action=\"/submit\" method=\"POST\">\r\n            \u003Cinput type=\"text\" name=\"message\" placeholder=\"メッセージを入力\">\r\n            \u003Cbutton type=\"submit\">送信\u003C/button>\r\n        \u003C/form>\r\n    \u003C/div>\r\n\u003C/body>\r\n\u003C/html>\r\n```\r\n\r\n```css\r\n/* public/styles.css */\r\nbody {\r\n    font-family: Arial, sans-serif;\r\n    margin: 0;\r\n    padding: 20px;\r\n    background-color: #f0f0f0;\r\n}\r\n\r\n.container {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\nform {\r\n    margin-top: 20px;\r\n}\r\n\r\ninput {\r\n    padding: 10px;\r\n    width: 200px;\r\n    margin-right: 10px;\r\n}\r\n\r\nbutton {\r\n    padding: 10px 20px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n    background-color: #0056b3;\r\n}\r\n```\r\n\r\n## Step 4: APIエンドポイントの作成\r\n\r\nJSONデータを返すAPIエンドポイントを追加します。\r\n\r\n```javascript\r\n// server.js\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst app = express();\r\nconst port = 3000;\r\n\r\n// ミドルウェアの設定\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(express.static('public'));\r\n\r\n// データストア（実際のアプリケーションではデータベースを使用）\r\nlet messages = [];\r\n\r\n// ルートパスへのGETリクエスト\r\napp.get('/', (req, res) => {\r\n  res.sendFile(path.join(__dirname, 'public', 'index.html'));\r\n});\r\n\r\n// メッセージ一覧を取得するAPI\r\napp.get('/api/messages', (req, res) => {\r\n  res.json(messages);\r\n});\r\n\r\n// 新しいメッセージを追加するAPI\r\napp.post('/api/messages', (req, res) => {\r\n  const { message } = req.body;\r\n  \r\n  if (!message) {\r\n    return res.status(400).json({ error: 'メッセージは必須です' });\r\n  }\r\n  \r\n  const newMessage = {\r\n    id: Date.now(),\r\n    text: message,\r\n    createdAt: new Date()\r\n  };\r\n  \r\n  messages.push(newMessage);\r\n  res.status(201).json(newMessage);\r\n});\r\n\r\n// フォームの送信を処理\r\napp.post('/submit', (req, res) => {\r\n  const { message } = req.body;\r\n  \r\n  if (!message) {\r\n    return res.status(400).send('メッセージは必須です');\r\n  }\r\n  \r\n  messages.push({\r\n    id: Date.now(),\r\n    text: message,\r\n    createdAt: new Date()\r\n  });\r\n  \r\n  res.redirect('/');\r\n});\r\n\r\n// エラーハンドリング\r\napp.use((err, req, res, next) => {\r\n  console.error(err.stack);\r\n  res.status(500).send('Something broke!');\r\n});\r\n\r\n// 404ハンドリング\r\napp.use((req, res) => {\r\n  res.status(404).send('ページが見つかりません');\r\n});\r\n\r\n// サーバーの起動\r\napp.listen(port, () => {\r\n  console.log(`サーバーが http://localhost:${port} で起動しました`);\r\n});\r\n```\r\n\r\n## Step 5: フロントエンドの機能拡張\r\n\r\nAPIを使用するためのJavaScriptコードを追加します。\r\n\r\n```html\r\n\u003C!-- public/index.html -->\r\n\u003C!DOCTYPE html>\r\n\u003Chtml lang=\"ja\">\r\n\u003Chead>\r\n    \u003Cmeta charset=\"UTF-8\">\r\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    \u003Ctitle>シンプルWebサーバー\u003C/title>\r\n    \u003Clink rel=\"stylesheet\" href=\"/styles.css\">\r\n\u003C/head>\r\n\u003Cbody>\r\n    \u003Cdiv class=\"container\">\r\n        \u003Ch1>Welcome to My Server\u003C/h1>\r\n        \r\n        \u003C!-- メッセージフォーム -->\r\n        \u003Cform id=\"messageForm\">\r\n            \u003Cinput type=\"text\" name=\"message\" id=\"messageInput\" placeholder=\"メッセージを入力\">\r\n            \u003Cbutton type=\"submit\">送信\u003C/button>\r\n        \u003C/form>\r\n        \r\n        \u003C!-- メッセージ一覧 -->\r\n        \u003Cdiv id=\"messageList\" class=\"message-list\">\r\n            \u003Ch2>メッセージ一覧\u003C/h2>\r\n            \u003Cul>\u003C/ul>\r\n        \u003C/div>\r\n    \u003C/div>\r\n\r\n    \u003Cscript>\r\n        // DOMの読み込み完了後に実行\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n            const messageForm = document.getElementById('messageForm');\r\n            const messageInput = document.getElementById('messageInput');\r\n            const messageList = document.querySelector('#messageList ul');\r\n\r\n            // メッセージ一覧を取得する関数\r\n            async function fetchMessages() {\r\n                try {\r\n                    const response = await fetch('/api/messages');\r\n                    const messages = await response.json();\r\n                    \r\n                    // メッセージ一覧を表示\r\n                    messageList.innerHTML = messages\r\n                        .map(msg => `\r\n                            \u003Cli class=\"message-item\">\r\n                                \u003Cp>${msg.text}\u003C/p>\r\n                                \u003Csmall>${new Date(msg.createdAt).toLocaleString()}\u003C/small>\r\n                            \u003C/li>\r\n                        `)\r\n                        .join('');\r\n                } catch (error) {\r\n                    console.error('メッセージの取得に失敗:', error);\r\n                }\r\n            }\r\n\r\n            // フォームの送信をハンドル\r\n            messageForm.addEventListener('submit', async (e) => {\r\n                e.preventDefault();\r\n                \r\n                const message = messageInput.value.trim();\r\n                if (!message) return;\r\n\r\n                try {\r\n                    const response = await fetch('/api/messages', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({ message })\r\n                    });\r\n\r\n                    if (response.ok) {\r\n                        messageInput.value = '';\r\n                        await fetchMessages();\r\n                    }\r\n                } catch (error) {\r\n                    console.error('メッセージの送信に失敗:', error);\r\n                }\r\n            });\r\n\r\n            // 初期表示時にメッセージを取得\r\n            fetchMessages();\r\n        });\r\n    \u003C/script>\r\n\u003C/body>\r\n\u003C/html>\r\n```\r\n\r\n追加のスタイル：\r\n\r\n```css\r\n/* public/styles.css に追加 */\r\n.message-list {\r\n    margin-top: 30px;\r\n}\r\n\r\n.message-list ul {\r\n    list-style: none;\r\n    padding: 0;\r\n}\r\n\r\n.message-item {\r\n    background-color: #f8f9fa;\r\n    padding: 15px;\r\n    margin-bottom: 10px;\r\n    border-radius: 4px;\r\n    box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.message-item p {\r\n    margin: 0 0 5px 0;\r\n}\r\n\r\n.message-item small {\r\n    color: #666;\r\n}\r\n```\r\n\r\n## プロジェクトの構成\r\n\r\n完成したプロジェクトの構成は以下のようになります：\r\n\r\n```\r\nsimple-node-server/\r\n├── package.json\r\n├── server.js\r\n└── public/\r\n    ├── index.html\r\n    └── styles.css\r\n```\r\n\r\n## サーバーの起動方法\r\n\r\n1. 必要なパッケージをインストール：\r\n```bash\r\nnpm install\r\n```\r\n\r\n2. サーバーを起動：\r\n```bash\r\nnode server.js\r\n```\r\n\r\n3. ブラウザで `http://localhost:3000` にアクセス\r\n\r\n## エラーハンドリングの実装\r\n\r\nより堅牢なエラーハンドリングを実装するには、以下のようなミドルウェアを追加します：\r\n\r\n```javascript\r\n// エラーハンドリングミドルウェア\r\nfunction errorHandler(err, req, res, next) {\r\n  console.error(err.stack);\r\n  \r\n  // エラーの種類に応じて適切なレスポンスを返す\r\n  if (err.type === 'validation') {\r\n    return res.status(400).json({\r\n      error: 'バリデーションエラー',\r\n      message: err.message\r\n    });\r\n  }\r\n  \r\n  // 予期しないエラー\r\n  res.status(500).json({\r\n    error: '内部サーバーエラー',\r\n    message: 'サーバーで問題が発生しました'\r\n  });\r\n}\r\n\r\n// バリデーションミドルウェア\r\nfunction validateMessage(req, res, next) {\r\n  const { message } = req.body;\r\n  \r\n  if (!message) {\r\n    const error = new Error('メッセージは必須です');\r\n    error.type = 'validation';\r\n    return next(error);\r\n  }\r\n  \r\n  if (message.length > 100) {\r\n    const error = new Error('メッセージは100文字以内で入力してください');\r\n    error.type = 'validation';\r\n    return next(error);\r\n  }\r\n  \r\n  next();\r\n}\r\n\r\n// ミドルウェアの適用\r\napp.post('/api/messages', validateMessage, (req, res, next) => {\r\n  try {\r\n    // メッセージの処理\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n});\r\n\r\napp.use(errorHandler);\r\n```\r\n\r\n## セキュリティ対策\r\n\r\n実際のアプリケーションでは、以下のようなセキュリティ対策も必要です：\r\n\r\n1. **Helmet**の使用：\r\n```javascript\r\nconst helmet = require('helmet');\r\napp.use(helmet());\r\n```\r\n\r\n2. **CORS**の設定：\r\n```javascript\r\nconst cors = require('cors');\r\napp.use(cors({\r\n  origin: 'http://allowed-domain.com'\r\n}));\r\n```\r\n\r\n3. **レート制限**の実装：\r\n```javascript\r\nconst rateLimit = require('express-rate-limit');\r\n\r\nconst limiter = rateLimit({\r\n  windowMs: 15 * 60 * 1000, // 15分\r\n  max: 100 // IPアドレスごとのリクエスト制限\r\n});\r\n\r\napp.use('/api/', limiter);\r\n```\r\n\r\n## まとめ\r\n\r\nこの記事では、Node.jsとExpressを使用して基本的なWebサーバーを作成する方法を学びました：\r\n\r\n1. **基本的なHTTPサーバーの作成**\r\n   - Expressの設定\r\n   - ルーティングの実装\r\n   - ミドルウェアの使用\r\n\r\n2. **静的ファイルの配信**\r\n   - HTMLファイルの配信\r\n   - CSSファイルの配信\r\n   - 静的アセットの管理\r\n\r\n3. **APIエンドポイントの実装**\r\n   - GETリクエストの処理\r\n   - POSTリクエストの処理\r\n   - JSONデータの送受信\r\n\r\n4. **フロントエンドとの連携**\r\n   - フォームデータの処理\r\n   - 非同期通信の実装\r\n   - UIの更新\r\n\r\n5. **エラーハンドリングとセキュリティ**\r\n   - エラーミドルウェア\r\n   - バリデーション\r\n   - セキュリティ対策\r\n\r\nこのベースとなるコードをもとに、データベースとの連携やユーザー認証など、より高度な機能を追加していくことができます。\r\n\r\n## 次のステップ\r\n\r\n基本的なWebサーバーの作成を理解したら、以下の記事も参考にしてください：\r\n\r\n- [【入門】データベースとは？SQLの基本を理解しよう](/tech-blog/blog/database-sql-basics/)\r\n- [【初心者向け】APIとは？使い方と実装方法をわかりやすく解説](/tech-blog/blog/api-basics-guide/)\r\n- [【初心者向け】プログラミングのエラーの種類と対処法](/tech-blog/blog/programming-error-handling-guide/)","src/content/blog/simple-nodejs-server.md","7f95b1a95b65c9a3",{"html":1219,"metadata":1220},"\u003Ch1 id=\"実践nodejsで簡単なサーバーを作ってみよう\">【実践】Node.jsで簡単なサーバーを作ってみよう！\u003C/h1>\n\u003Cp>Node.jsを使ってWebサーバーを作成することは、バックエンド開発の基本的なスキルの一つです。この記事では、シンプルなWebサーバーを作成する方法を、初心者向けにステップバイステップで解説します。\u003C/p>\n\u003Ch2 id=\"目標とする機能\">目標とする機能\u003C/h2>\n\u003Cp>今回作成するWebサーバーには、以下の機能を実装します：\u003C/p>\n\u003Col>\n\u003Cli>基本的なHTTPサーバー\u003C/li>\n\u003Cli>静的ファイルの配信\u003C/li>\n\u003Cli>簡単なAPIエンドポォイント\u003C/li>\n\u003Cli>フォームデータの処理\u003C/li>\n\u003Cli>エラーハンドリング\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"step-1-プロジェクトの準備\">Step 1: プロジェクトの準備\u003C/h2>\n\u003Cp>まず、新しいプロジェクトを作成し、必要なパッケージをインストールします。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># プロジェクトディレクトリの作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">mkdir\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> simple-node-server\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">cd\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> simple-node-server\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># package.jsonの初期化\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">npm\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> init\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -y\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># 必要なパッケージのインストール\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">npm\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> express\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"step-2-基本的なサーバーの作成\">Step 2: 基本的なサーバーの作成\u003C/h2>\n\u003Cp>最初に、シンプルなHTTPサーバーを作成します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// server.js\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> express \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">express\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> app \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> express\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> port \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ミドルウェアの設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(express.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">());\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(express.\u003C/span>\u003Cspan style=\"color:#50FA7B\">urlencoded\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ extended\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> }));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ルートパスへのGETリクエスト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">get\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">send\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// サーバーの起動\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">listen\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(port, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`サーバーが http://localhost:\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">port\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> で起動しました`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>このコードでは：\u003C/p>\n\u003Cul>\n\u003Cli>Expressフレームワークを使用\u003C/li>\n\u003Cli>JSONとフォームデータの処理を有効化\u003C/li>\n\u003Cli>ルートパス（/）へのGETリクエストを処理\u003C/li>\n\u003Cli>ポート3000でサーバーを起動\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"step-3-静的ファイルの配信\">Step 3: 静的ファイルの配信\u003C/h2>\n\u003Cp>HTMLファイルやCSSファイルなどの静的ファイルを配信する機能を追加します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// server.js\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> express \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">express\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> path \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">path\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> app \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> express\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> port \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ミドルウェアの設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(express.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">());\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(express.\u003C/span>\u003Cspan style=\"color:#50FA7B\">urlencoded\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ extended\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> }));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(express.\u003C/span>\u003Cspan style=\"color:#50FA7B\">static\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">public\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ルートパスへのGETリクエスト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">get\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">sendFile\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(path.\u003C/span>\u003Cspan style=\"color:#50FA7B\">join\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(__dirname, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">public\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">index.html\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// サーバーの起動\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">listen\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(port, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`サーバーが http://localhost:\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">port\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> で起動しました`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>静的ファイルの例：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">&#x3C;!-- public/index.html -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;!\u003C/span>\u003Cspan style=\"color:#FF79C6\">DOCTYPE\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">html\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> lang\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ja\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">head\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">meta\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> charset\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">UTF-8\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">meta\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> name\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">viewport\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> content\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">width=device-width, initial-scale=1.0\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">title\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>シンプルWebサーバー&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">title\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">link\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> rel\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">stylesheet\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> href\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/styles.css\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">head\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">body\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> class\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">container\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">h1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>Welcome to My Server&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">h1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">form\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> action\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/submit\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> method\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">POST\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">input\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> type\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">text\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> name\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">message\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> placeholder\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">メッセージを入力\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">button\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> type\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">submit\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>送信&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">button\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">form\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">body\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">/* public/styles.css */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">body\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    font-family\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> Arial\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">sans-serif\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    margin\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #f0f0f0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">.container\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    max-width\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 800\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    margin\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#BD93F9\"> auto\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> white\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    border-radius\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 8\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    box-shadow\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 4\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> rgba\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003Cspan style=\"color:#BD93F9\">0.1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">form\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    margin-top\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">input\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    width\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 200\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    margin-right\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">button\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #007bff\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> white\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    border\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> none\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    border-radius\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 4\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    cursor\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> pointer\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">button\u003C/span>\u003Cspan style=\"color:#FF79C6;font-style:italic\">:\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\">hover\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #0056b3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"step-4-apiエンドポイントの作成\">Step 4: APIエンドポイントの作成\u003C/h2>\n\u003Cp>JSONデータを返すAPIエンドポイントを追加します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// server.js\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> express \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">express\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> path \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">path\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> app \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> express\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> port \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ミドルウェアの設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(express.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">());\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(express.\u003C/span>\u003Cspan style=\"color:#50FA7B\">urlencoded\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ extended\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> }));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(express.\u003C/span>\u003Cspan style=\"color:#50FA7B\">static\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">public\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// データストア（実際のアプリケーションではデータベースを使用）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> messages \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ルートパスへのGETリクエスト\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">get\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">sendFile\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(path.\u003C/span>\u003Cspan style=\"color:#50FA7B\">join\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(__dirname, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">public\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">index.html\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// メッセージ一覧を取得するAPI\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">get\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/messages\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(messages);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 新しいメッセージを追加するAPI\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">post\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/messages\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> { message } \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> req.body;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">message) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">400\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ error\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">メッセージは必須です\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> newMessage \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Date.\u003C/span>\u003Cspan style=\"color:#50FA7B\">now\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    text\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    createdAt\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Date\u003C/span>\u003Cspan style=\"color:#F8F8F2\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  messages.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(newMessage);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">201\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(newMessage);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// フォームの送信を処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">post\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/submit\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> { message } \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> req.body;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">message) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">400\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">send\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">メッセージは必須です\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  messages.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    id\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> Date.\u003C/span>\u003Cspan style=\"color:#50FA7B\">now\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    text\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    createdAt\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Date\u003C/span>\u003Cspan style=\"color:#F8F8F2\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">redirect\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// エラーハンドリング\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">err\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(err.stack);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">500\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">send\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Something broke!\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 404ハンドリング\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">404\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">send\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ページが見つかりません\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// サーバーの起動\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">listen\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(port, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`サーバーが http://localhost:\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">port\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> で起動しました`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"step-5-フロントエンドの機能拡張\">Step 5: フロントエンドの機能拡張\u003C/h2>\n\u003Cp>APIを使用するためのJavaScriptコードを追加します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">&#x3C;!-- public/index.html -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;!\u003C/span>\u003Cspan style=\"color:#FF79C6\">DOCTYPE\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">html\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> lang\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ja\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">head\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">meta\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> charset\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">UTF-8\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">meta\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> name\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">viewport\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> content\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">width=device-width, initial-scale=1.0\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">title\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>シンプルWebサーバー&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">title\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">link\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> rel\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">stylesheet\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> href\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/styles.css\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">head\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">body\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> class\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">container\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">h1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>Welcome to My Server&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">h1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        &#x3C;!-- メッセージフォーム -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">form\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> id\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">messageForm\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">input\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> type\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">text\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> name\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">message\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> id\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">messageInput\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> placeholder\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">メッセージを入力\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">button\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> type\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">submit\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>送信&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">button\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">form\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        &#x3C;!-- メッセージ一覧 -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> id\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">messageList\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#50FA7B;font-style:italic\"> class\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">message-list\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">h2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>メッセージ一覧&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">h2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">ul\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">ul\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">div\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FF79C6\">script\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">        // DOMの読み込み完了後に実行\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addEventListener\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">DOMContentLoaded\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, () \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> messageForm \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">getElementById\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">messageForm\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> messageInput \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">getElementById\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">messageInput\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> messageList \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">querySelector\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">#messageList ul\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // メッセージ一覧を取得する関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            async\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetchMessages\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                try\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetch\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/messages\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> messages \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">                    // メッセージ一覧を表示\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                    messageList.innerHTML \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> messages\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                        .\u003C/span>\u003Cspan style=\"color:#50FA7B\">map\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">msg\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F1FA8C\">                            &#x3C;li class=\"message-item\">\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F1FA8C\">                                &#x3C;p>\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">msg.text\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">&#x3C;/p>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F1FA8C\">                                &#x3C;small>\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\">new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Date\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(msg.createdAt).\u003C/span>\u003Cspan style=\"color:#50FA7B\">toLocaleString\u003C/span>\u003Cspan style=\"color:#F8F8F2\">()\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">&#x3C;/small>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F1FA8C\">                            &#x3C;/li>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F1FA8C\">                        `\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                        .\u003C/span>\u003Cspan style=\"color:#50FA7B\">join\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">''\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                } \u003C/span>\u003Cspan style=\"color:#FF79C6\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">メッセージの取得に失敗:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, error);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // フォームの送信をハンドル\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            messageForm.\u003C/span>\u003Cspan style=\"color:#50FA7B\">addEventListener\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">submit\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">e\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                e.\u003C/span>\u003Cspan style=\"color:#50FA7B\">preventDefault\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> messageInput.value.\u003C/span>\u003Cspan style=\"color:#50FA7B\">trim\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">message) \u003C/span>\u003Cspan style=\"color:#FF79C6\">return\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                try\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetch\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/messages\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                        method\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">POST\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                        headers\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">                            '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Content-Type\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">application/json\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                        },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                        body\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> JSON\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.\u003C/span>\u003Cspan style=\"color:#50FA7B\">stringify\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({ message })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                    });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (response.ok) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                        messageInput.value \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> ''\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">                        await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetchMessages\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                } \u003C/span>\u003Cspan style=\"color:#FF79C6\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">メッセージの送信に失敗:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, error);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">                }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">            // 初期表示時にメッセージを取得\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">            fetchMessages\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">script\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">body\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#FF79C6\">html\u003C/span>\u003Cspan style=\"color:#F8F8F2\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>追加のスタイル：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">/* public/styles.css に追加 */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">.message-list\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    margin-top\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 30\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">.message-list\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ul\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    list-style\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> none\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">.message-item\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    background-color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #f8f9fa\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    padding\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 15\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    margin-bottom\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    border-radius\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 4\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    box-shadow\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> rgba\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003Cspan style=\"color:#BD93F9\">0.1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">.message-item\u003C/span>\u003Cspan style=\"color:#FF79C6\"> p\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    margin\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#FF79C6\">px\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B;font-style:italic\">.message-item\u003C/span>\u003Cspan style=\"color:#FF79C6\"> small\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">    color\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> #666\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"プロジェクトの構成\">プロジェクトの構成\u003C/h2>\n\u003Cp>完成したプロジェクトの構成は以下のようになります：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>simple-node-server/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>├── package.json\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>├── server.js\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>└── public/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    ├── index.html\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    └── styles.css\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"サーバーの起動方法\">サーバーの起動方法\u003C/h2>\n\u003Col>\n\u003Cli>必要なパッケージをインストール：\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">npm\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"2\">\n\u003Cli>サーバーを起動：\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">node\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> server.js\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"3\">\n\u003Cli>ブラウザで \u003Ccode>http://localhost:3000\u003C/code> にアクセス\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"エラーハンドリングの実装\">エラーハンドリングの実装\u003C/h2>\n\u003Cp>より堅牢なエラーハンドリングを実装するには、以下のようなミドルウェアを追加します：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// エラーハンドリングミドルウェア\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> errorHandler\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">err\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(err.stack);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // エラーの種類に応じて適切なレスポンスを返す\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (err.type \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">validation\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">400\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      error\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">バリデーションエラー\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> err.message\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 予期しないエラー\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  res.\u003C/span>\u003Cspan style=\"color:#50FA7B\">status\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">500\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    error\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">内部サーバーエラー\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    message\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">サーバーで問題が発生しました\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// バリデーションミドルウェア\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> validateMessage\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> { message } \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> req.body;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">!\u003C/span>\u003Cspan style=\"color:#F8F8F2\">message) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> error \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">メッセージは必須です\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    error.type \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">validation\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#50FA7B\"> next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(error);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (message.length \u003C/span>\u003Cspan style=\"color:#FF79C6\">>\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> error \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">メッセージは100文字以内で入力してください\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    error.type \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">validation\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#50FA7B\"> next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(error);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ミドルウェアの適用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">post\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/messages\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, validateMessage, (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">req\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">res\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  try\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // メッセージの処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    next\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(error);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(errorHandler);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"セキュリティ対策\">セキュリティ対策\u003C/h2>\n\u003Cp>実際のアプリケーションでは、以下のようなセキュリティ対策も必要です：\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>Helmet\u003C/strong>の使用：\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> helmet \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">helmet\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">helmet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">());\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"2\">\n\u003Cli>\u003Cstrong>CORS\u003C/strong>の設定：\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> cors \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">cors\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">cors\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  origin\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">http://allowed-domain.com\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}));\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"3\">\n\u003Cli>\u003Cstrong>レート制限\u003C/strong>の実装：\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> rateLimit \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> require\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">express-rate-limit\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> limiter \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> rateLimit\u003C/span>\u003Cspan style=\"color:#F8F8F2\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  windowMs\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 15\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 60\u003C/span>\u003Cspan style=\"color:#FF79C6\"> *\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#6272A4\">// 15分\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  max\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#6272A4\"> // IPアドレスごとのリクエスト制限\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">app.\u003C/span>\u003Cspan style=\"color:#50FA7B\">use\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/api/\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, limiter);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>この記事では、Node.jsとExpressを使用して基本的なWebサーバーを作成する方法を学びました：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>基本的なHTTPサーバーの作成\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Expressの設定\u003C/li>\n\u003Cli>ルーティングの実装\u003C/li>\n\u003Cli>ミドルウェアの使用\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>静的ファイルの配信\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>HTMLファイルの配信\u003C/li>\n\u003Cli>CSSファイルの配信\u003C/li>\n\u003Cli>静的アセットの管理\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>APIエンドポイントの実装\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>GETリクエストの処理\u003C/li>\n\u003Cli>POSTリクエストの処理\u003C/li>\n\u003Cli>JSONデータの送受信\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>フロントエンドとの連携\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>フォームデータの処理\u003C/li>\n\u003Cli>非同期通信の実装\u003C/li>\n\u003Cli>UIの更新\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>エラーハンドリングとセキュリティ\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>エラーミドルウェア\u003C/li>\n\u003Cli>バリデーション\u003C/li>\n\u003Cli>セキュリティ対策\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>このベースとなるコードをもとに、データベースとの連携やユーザー認証など、より高度な機能を追加していくことができます。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>基本的なWebサーバーの作成を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/database-sql-basics/\">【入門】データベースとは？SQLの基本を理解しよう\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/api-basics-guide/\">【初心者向け】APIとは？使い方と実装方法をわかりやすく解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/programming-error-handling-guide/\">【初心者向け】プログラミングのエラーの種類と対処法\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":1221,"imagePaths":1249,"frontmatter":1250},[1222,1224,1225,1228,1231,1234,1237,1240,1242,1244,1246,1247,1248],{"depth":26,"slug":1223,"text":1212},"実践nodejsで簡単なサーバーを作ってみよう",{"depth":29,"slug":753,"text":753},{"depth":29,"slug":1226,"text":1227},"step-1-プロジェクトの準備","Step 1: プロジェクトの準備",{"depth":29,"slug":1229,"text":1230},"step-2-基本的なサーバーの作成","Step 2: 基本的なサーバーの作成",{"depth":29,"slug":1232,"text":1233},"step-3-静的ファイルの配信","Step 3: 静的ファイルの配信",{"depth":29,"slug":1235,"text":1236},"step-4-apiエンドポイントの作成","Step 4: APIエンドポイントの作成",{"depth":29,"slug":1238,"text":1239},"step-5-フロントエンドの機能拡張","Step 5: フロントエンドの機能拡張",{"depth":29,"slug":1241,"text":1241},"プロジェクトの構成",{"depth":29,"slug":1243,"text":1243},"サーバーの起動方法",{"depth":29,"slug":1245,"text":1245},"エラーハンドリングの実装",{"depth":29,"slug":955,"text":955},{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":1212,"description":1213,"pubDate":307,"heroImage":17},"vscode-setup-guide",{"id":1251,"data":1253,"body":1257,"filePath":1258,"digest":1259,"rendered":1260},{"title":1254,"description":1255,"pubDate":1256,"heroImage":371},"【初心者向け】VSCodeの基本設定と便利な拡張機能10選","Visual Studio Codeの基本的な設定方法と、開発効率を上げる便利な拡張機能を初心者向けに解説します。",["Date","2025-03-19T15:00:00.000Z"],"# 【初心者向け】VSCodeの基本設定と便利な拡張機能10選\r\n\r\nVisual Studio Code（VSCode）は、現代のプログラミングで最も人気のあるコードエディタの1つです。この記事では、VSCodeの基本的な設定方法と、開発効率を大幅に向上させる便利な拡張機能を紹介します。\r\n\r\n## VSCodeの基本設定\r\n\r\n### 1. エディタの外観設定\r\n\r\n設定は `settings.json` で管理できます。以下は基本的な設定例です：\r\n\r\n```json\r\n{\r\n  // エディタの外観\r\n  \"editor.fontSize\": 14,\r\n  \"editor.fontFamily\": \"'Source Code Pro', Consolas, 'Courier New', monospace\",\r\n  \"editor.lineHeight\": 1.5,\r\n  \"editor.minimap.enabled\": false,\r\n  \"editor.renderWhitespace\": \"boundary\",\r\n  \r\n  // カラーテーマ\r\n  \"workbench.colorTheme\": \"One Dark Pro\",\r\n  \"workbench.iconTheme\": \"material-icon-theme\",\r\n  \r\n  // タブとインデント\r\n  \"editor.tabSize\": 2,\r\n  \"editor.insertSpaces\": true,\r\n  \"editor.detectIndentation\": true,\r\n  \r\n  // 自動保存\r\n  \"files.autoSave\": \"afterDelay\",\r\n  \"files.autoSaveDelay\": 1000\r\n}\r\n```\r\n\r\n### 2. キーボードショートカット\r\n\r\nよく使うキーボードショートカットを覚えておくと効率が上がります：\r\n\r\n- **ファイル操作**\r\n  - 新規ファイル: `Ctrl+N` (Windows) / `Cmd+N` (Mac)\r\n  - ファイル保存: `Ctrl+S` / `Cmd+S`\r\n  - ファイル検索: `Ctrl+P` / `Cmd+P`\r\n\r\n- **編集操作**\r\n  - 行の複製: `Shift+Alt+↓` / `Shift+Option+↓`\r\n  - 行の削除: `Ctrl+Shift+K` / `Cmd+Shift+K`\r\n  - マルチカーソル: `Alt+Click` / `Option+Click`\r\n\r\n- **表示操作**\r\n  - サイドバー表示/非表示: `Ctrl+B` / `Cmd+B`\r\n  - 統合ターミナル表示/非表示: ``Ctrl+` `` / ``Cmd+` ``\r\n  - コマンドパレット: `Ctrl+Shift+P` / `Cmd+Shift+P`\r\n\r\n### 3. ワークスペース設定\r\n\r\nプロジェクトごとの設定は `.vscode/settings.json` に保存できます：\r\n\r\n```json\r\n{\r\n  // プロジェクト固有の設定\r\n  \"editor.formatOnSave\": true,\r\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\r\n  \"prettier.singleQuote\": true,\r\n  \"prettier.trailingComma\": \"es5\",\r\n  \r\n  // 言語固有の設定\r\n  \"[javascript]\": {\r\n    \"editor.formatOnSave\": true,\r\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\r\n  },\r\n  \"[typescript]\": {\r\n    \"editor.formatOnSave\": true,\r\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\r\n  }\r\n}\r\n```\r\n\r\n## おすすめの拡張機能10選\r\n\r\n### 1. ESLint\r\n\r\nJavaScript/TypeScriptのコード品質を維持するための必須拡張機能です。\r\n\r\n```json\r\n// .eslintrc.json の設定例\r\n{\r\n  \"extends\": [\"eslint:recommended\", \"plugin:@typescript-eslint/recommended\"],\r\n  \"rules\": {\r\n    \"no-console\": \"warn\",\r\n    \"no-unused-vars\": \"error\"\r\n  }\r\n}\r\n```\r\n\r\n**主な機能：**\r\n- コードの問題をリアルタイムで検出\r\n- 自動修正機能\r\n- カスタマイズ可能なルール\r\n\r\n### 2. Prettier\r\n\r\nコードフォーマッターの定番です。チーム開発でコードスタイルを統一するのに最適です。\r\n\r\n```json\r\n// .prettierrc の設定例\r\n{\r\n  \"singleQuote\": true,\r\n  \"trailingComma\": \"es5\",\r\n  \"tabWidth\": 2,\r\n  \"semi\": true,\r\n  \"printWidth\": 80\r\n}\r\n```\r\n\r\n**主な機能：**\r\n- 自動コードフォーマット\r\n- 多言語対応\r\n- エディタ設定との統合\r\n\r\n### 3. GitLens\r\n\r\nGitの機能を強化する拡張機能です。コードの変更履歴を視覚的に確認できます。\r\n\r\n**主な機能：**\r\n- 行ごとの最終変更者と日時の表示\r\n- コミット履歴の可視化\r\n- ブランチの比較機能\r\n\r\n### 4. Live Server\r\n\r\nHTMLファイルをローカルサーバーで簡単に確認できます。\r\n\r\n**主な機能：**\r\n- ライブリロード\r\n- ローカルサーバーの起動\r\n- カスタムポート設定\r\n\r\n### 5. Auto Rename Tag\r\n\r\nHTMLやXMLのタグを自動的にリネームします。\r\n\r\n**主な機能：**\r\n- 開始タグと終了タグの同時編集\r\n- JSX/TSXのサポート\r\n- 高速な動作\r\n\r\n### 6. Code Spell Checker\r\n\r\nコード内のスペルミスを検出します。\r\n\r\n**設定例：**\r\n```json\r\n{\r\n  \"cSpell.language\": \"en,ja\",\r\n  \"cSpell.words\": [\r\n    \"typeof\",\r\n    \"useState\",\r\n    \"nextjs\"\r\n  ]\r\n}\r\n```\r\n\r\n**主な機能：**\r\n- マルチ言語対応\r\n- カスタム辞書の追加\r\n- キャメルケースのサポート\r\n\r\n### 7. Path Intellisense\r\n\r\nファイルパスの入力を補完します。\r\n\r\n**主な機能：**\r\n- パスの自動補完\r\n- ファイル拡張子の提案\r\n- 相対パスと絶対パスのサポート\r\n\r\n### 8. Material Icon Theme\r\n\r\nファイルアイコンをマテリアルデザインに変更します。\r\n\r\n**主な機能：**\r\n- 豊富なアイコンセット\r\n- フォルダアイコンのカスタマイズ\r\n- ファイル種別の視認性向上\r\n\r\n### 9. Error Lens\r\n\r\nエラーや警告をインライン表示します。\r\n\r\n**設定例：**\r\n```json\r\n{\r\n  \"errorLens.enabledDiagnosticLevels\": [\r\n    \"error\",\r\n    \"warning\",\r\n    \"info\"\r\n  ],\r\n  \"errorLens.messageEnabled\": true\r\n}\r\n```\r\n\r\n**主な機能：**\r\n- エラーのインライン表示\r\n- 警告レベルの色分け\r\n- カスタマイズ可能な表示スタイル\r\n\r\n### 10. Docker\r\n\r\nDockerファイルの編集とコンテナの管理を支援します。\r\n\r\n**主な機能：**\r\n- Dockerfileのシンタックスハイライト\r\n- コンテナの管理\r\n- Docker Composeのサポート\r\n\r\n## 開発効率を上げるTips\r\n\r\n### 1. スニペットの活用\r\n\r\nよく使うコードブロックをスニペットとして登録できます：\r\n\r\n```json\r\n// .vscode/snippets.json\r\n{\r\n  \"React Function Component\": {\r\n    \"prefix\": \"rfc\",\r\n    \"body\": [\r\n      \"import React from 'react';\",\r\n      \"\",\r\n      \"interface ${1:ComponentName}Props {\",\r\n      \"  $2\",\r\n      \"}\",\r\n      \"\",\r\n      \"export const ${1:ComponentName}: React.FC\u003C${1:ComponentName}Props> = (props) => {\",\r\n      \"  return (\",\r\n      \"    \u003Cdiv>\",\r\n      \"      $0\",\r\n      \"    \u003C/div>\",\r\n      \"  );\",\r\n      \"};\",\r\n      \"\"\r\n    ],\r\n    \"description\": \"Creates a React Function Component with TypeScript\"\r\n  }\r\n}\r\n```\r\n\r\n### 2. タスクの自動化\r\n\r\n頻繁に実行するコマンドをタスクとして登録できます：\r\n\r\n```json\r\n// .vscode/tasks.json\r\n{\r\n  \"version\": \"2.0.0\",\r\n  \"tasks\": [\r\n    {\r\n      \"label\": \"Build Project\",\r\n      \"type\": \"npm\",\r\n      \"script\": \"build\",\r\n      \"group\": {\r\n        \"kind\": \"build\",\r\n        \"isDefault\": true\r\n      }\r\n    },\r\n    {\r\n      \"label\": \"Run Tests\",\r\n      \"type\": \"npm\",\r\n      \"script\": \"test\",\r\n      \"group\": {\r\n        \"kind\": \"test\",\r\n        \"isDefault\": true\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### 3. デバッグ設定\r\n\r\nデバッグ設定をカスタマイズして効率的なデバッグを実現できます：\r\n\r\n```json\r\n// .vscode/launch.json\r\n{\r\n  \"version\": \"0.2.0\",\r\n  \"configurations\": [\r\n    {\r\n      \"type\": \"node\",\r\n      \"request\": \"launch\",\r\n      \"name\": \"Debug Node.js\",\r\n      \"program\": \"${workspaceFolder}/src/index.js\",\r\n      \"skipFiles\": [\r\n        \"\u003Cnode_internals>/**\"\r\n      ]\r\n    },\r\n    {\r\n      \"type\": \"chrome\",\r\n      \"request\": \"launch\",\r\n      \"name\": \"Debug React App\",\r\n      \"url\": \"http://localhost:3000\",\r\n      \"webRoot\": \"${workspaceFolder}/src\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n## トラブルシューティング\r\n\r\n### 1. 拡張機能の競合\r\n\r\n複数の拡張機能が競合する場合は、以下の手順で解決します：\r\n\r\n1. 拡張機能を一時的に無効化\r\n2. 競合している拡張機能を特定\r\n3. 設定の調整または代替拡張機能の検討\r\n\r\n### 2. パフォーマンスの問題\r\n\r\nVSCodeが重くなった場合の対処法：\r\n\r\n1. 不要な拡張機能の無効化\r\n2. ワークスペースのファイル監視設定の調整\r\n3. エディタの軽量化設定\r\n\r\n```json\r\n{\r\n  \"files.watcherExclude\": {\r\n    \"**/.git/objects/**\": true,\r\n    \"**/.git/subtree-cache/**\": true,\r\n    \"**/node_modules/**\": true\r\n  },\r\n  \"editor.minimap.enabled\": false,\r\n  \"editor.renderWhitespace\": \"none\",\r\n  \"editor.renderControlCharacters\": false\r\n}\r\n```\r\n\r\n### 3. 設定の同期\r\n\r\n複数のマシンで設定を同期する方法：\r\n\r\n1. Settings Syncの有効化\r\n2. GitHubアカウントでのサインイン\r\n3. 同期する項目の選択\r\n\r\n## まとめ\r\n\r\nVSCodeの基本設定と拡張機能を適切に組み合わせることで、開発効率を大幅に向上させることができます。以下のポイントを押さえておきましょう：\r\n\r\n1. **基本設定の重要性**\r\n   - エディタの外観\r\n   - キーボードショートカット\r\n   - ワークスペース設定\r\n\r\n2. **必須の拡張機能**\r\n   - ESLint\r\n   - Prettier\r\n   - GitLens\r\n\r\n3. **開発効率化のTips**\r\n   - スニペットの活用\r\n   - タスクの自動化\r\n   - デバッグ設定\r\n\r\nこれらの設定と拡張機能を活用することで、より快適な開発環境を構築できます。\r\n\r\n## 次のステップ\r\n\r\nVSCodeの基本を理解したら、以下の記事も参考にしてください：\r\n\r\n- [【2025年版】プログラミングを始めるための環境構築ガイド](/tech-blog/blog/programming-environment-setup-2025/)\r\n- [【コメントの書き方でコードが劇的にわかりやすくなる！】](/tech-blog/blog/how-to-write-better-comments/)\r\n- [プログラミング初心者が最初に学ぶべき5つの概念](/tech-blog/blog/programming-concepts-for-beginners/)","src/content/blog/vscode-setup-guide.md","3f92f897e63ac5b1",{"html":1261,"metadata":1262},"\u003Ch1 id=\"初心者向けvscodeの基本設定と便利な拡張機能10選\">【初心者向け】VSCodeの基本設定と便利な拡張機能10選\u003C/h1>\n\u003Cp>Visual Studio Code（VSCode）は、現代のプログラミングで最も人気のあるコードエディタの1つです。この記事では、VSCodeの基本的な設定方法と、開発効率を大幅に向上させる便利な拡張機能を紹介します。\u003C/p>\n\u003Ch2 id=\"vscodeの基本設定\">VSCodeの基本設定\u003C/h2>\n\u003Ch3 id=\"1-エディタの外観設定\">1. エディタの外観設定\u003C/h3>\n\u003Cp>設定は \u003Ccode>settings.json\u003C/code> で管理できます。以下は基本的な設定例です：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // エディタの外観\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.fontSize\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 14\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.fontFamily\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">'Source Code Pro', Consolas, 'Courier New', monospace\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.lineHeight\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1.5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.minimap.enabled\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.renderWhitespace\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">boundary\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // カラーテーマ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">workbench.colorTheme\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">One Dark Pro\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">workbench.iconTheme\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">material-icon-theme\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // タブとインデント\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.tabSize\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.insertSpaces\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.detectIndentation\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 自動保存\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">files.autoSave\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">afterDelay\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">files.autoSaveDelay\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1000\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-キーボードショートカット\">2. キーボードショートカット\u003C/h3>\n\u003Cp>よく使うキーボードショートカットを覚えておくと効率が上がります：\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>ファイル操作\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>新規ファイル: \u003Ccode>Ctrl+N\u003C/code> (Windows) / \u003Ccode>Cmd+N\u003C/code> (Mac)\u003C/li>\n\u003Cli>ファイル保存: \u003Ccode>Ctrl+S\u003C/code> / \u003Ccode>Cmd+S\u003C/code>\u003C/li>\n\u003Cli>ファイル検索: \u003Ccode>Ctrl+P\u003C/code> / \u003Ccode>Cmd+P\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>編集操作\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>行の複製: \u003Ccode>Shift+Alt+↓\u003C/code> / \u003Ccode>Shift+Option+↓\u003C/code>\u003C/li>\n\u003Cli>行の削除: \u003Ccode>Ctrl+Shift+K\u003C/code> / \u003Ccode>Cmd+Shift+K\u003C/code>\u003C/li>\n\u003Cli>マルチカーソル: \u003Ccode>Alt+Click\u003C/code> / \u003Ccode>Option+Click\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>表示操作\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>サイドバー表示/非表示: \u003Ccode>Ctrl+B\u003C/code> / \u003Ccode>Cmd+B\u003C/code>\u003C/li>\n\u003Cli>統合ターミナル表示/非表示: \u003Ccode>Ctrl+` \u003C/code> / \u003Ccode>Cmd+` \u003C/code>\u003C/li>\n\u003Cli>コマンドパレット: \u003Ccode>Ctrl+Shift+P\u003C/code> / \u003Ccode>Cmd+Shift+P\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-ワークスペース設定\">3. ワークスペース設定\u003C/h3>\n\u003Cp>プロジェクトごとの設定は \u003Ccode>.vscode/settings.json\u003C/code> に保存できます：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // プロジェクト固有の設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.formatOnSave\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.defaultFormatter\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">esbenp.prettier-vscode\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">prettier.singleQuote\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">prettier.trailingComma\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">es5\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 言語固有の設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">[javascript]\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.formatOnSave\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.defaultFormatter\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">esbenp.prettier-vscode\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">[typescript]\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.formatOnSave\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.defaultFormatter\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">esbenp.prettier-vscode\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"おすすめの拡張機能10選\">おすすめの拡張機能10選\u003C/h2>\n\u003Ch3 id=\"1-eslint\">1. ESLint\u003C/h3>\n\u003Cp>JavaScript/TypeScriptのコード品質を維持するための必須拡張機能です。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// .eslintrc.json の設定例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">extends\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">eslint:recommended\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">plugin:@typescript-eslint/recommended\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">rules\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">no-console\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">warn\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">no-unused-vars\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">error\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>主な機能：\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>コードの問題をリアルタイムで検出\u003C/li>\n\u003Cli>自動修正機能\u003C/li>\n\u003Cli>カスタマイズ可能なルール\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-prettier\">2. Prettier\u003C/h3>\n\u003Cp>コードフォーマッターの定番です。チーム開発でコードスタイルを統一するのに最適です。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// .prettierrc の設定例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">singleQuote\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">trailingComma\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">es5\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">tabWidth\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">semi\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">printWidth\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 80\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>主な機能：\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>自動コードフォーマット\u003C/li>\n\u003Cli>多言語対応\u003C/li>\n\u003Cli>エディタ設定との統合\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-gitlens\">3. GitLens\u003C/h3>\n\u003Cp>Gitの機能を強化する拡張機能です。コードの変更履歴を視覚的に確認できます。\u003C/p>\n\u003Cp>\u003Cstrong>主な機能：\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>行ごとの最終変更者と日時の表示\u003C/li>\n\u003Cli>コミット履歴の可視化\u003C/li>\n\u003Cli>ブランチの比較機能\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"4-live-server\">4. Live Server\u003C/h3>\n\u003Cp>HTMLファイルをローカルサーバーで簡単に確認できます。\u003C/p>\n\u003Cp>\u003Cstrong>主な機能：\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>ライブリロード\u003C/li>\n\u003Cli>ローカルサーバーの起動\u003C/li>\n\u003Cli>カスタムポート設定\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"5-auto-rename-tag\">5. Auto Rename Tag\u003C/h3>\n\u003Cp>HTMLやXMLのタグを自動的にリネームします。\u003C/p>\n\u003Cp>\u003Cstrong>主な機能：\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>開始タグと終了タグの同時編集\u003C/li>\n\u003Cli>JSX/TSXのサポート\u003C/li>\n\u003Cli>高速な動作\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"6-code-spell-checker\">6. Code Spell Checker\u003C/h3>\n\u003Cp>コード内のスペルミスを検出します。\u003C/p>\n\u003Cp>\u003Cstrong>設定例：\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">cSpell.language\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">en,ja\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">cSpell.words\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">typeof\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">useState\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">nextjs\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  ]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>主な機能：\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>マルチ言語対応\u003C/li>\n\u003Cli>カスタム辞書の追加\u003C/li>\n\u003Cli>キャメルケースのサポート\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"7-path-intellisense\">7. Path Intellisense\u003C/h3>\n\u003Cp>ファイルパスの入力を補完します。\u003C/p>\n\u003Cp>\u003Cstrong>主な機能：\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>パスの自動補完\u003C/li>\n\u003Cli>ファイル拡張子の提案\u003C/li>\n\u003Cli>相対パスと絶対パスのサポート\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"8-material-icon-theme\">8. Material Icon Theme\u003C/h3>\n\u003Cp>ファイルアイコンをマテリアルデザインに変更します。\u003C/p>\n\u003Cp>\u003Cstrong>主な機能：\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>豊富なアイコンセット\u003C/li>\n\u003Cli>フォルダアイコンのカスタマイズ\u003C/li>\n\u003Cli>ファイル種別の視認性向上\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"9-error-lens\">9. Error Lens\u003C/h3>\n\u003Cp>エラーや警告をインライン表示します。\u003C/p>\n\u003Cp>\u003Cstrong>設定例：\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">errorLens.enabledDiagnosticLevels\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">error\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">warning\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">info\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  ],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">errorLens.messageEnabled\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>主な機能：\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>エラーのインライン表示\u003C/li>\n\u003Cli>警告レベルの色分け\u003C/li>\n\u003Cli>カスタマイズ可能な表示スタイル\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"10-docker\">10. Docker\u003C/h3>\n\u003Cp>Dockerファイルの編集とコンテナの管理を支援します。\u003C/p>\n\u003Cp>\u003Cstrong>主な機能：\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Dockerfileのシンタックスハイライト\u003C/li>\n\u003Cli>コンテナの管理\u003C/li>\n\u003Cli>Docker Composeのサポート\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"開発効率を上げるtips\">開発効率を上げるTips\u003C/h2>\n\u003Ch3 id=\"1-スニペットの活用\">1. スニペットの活用\u003C/h3>\n\u003Cp>よく使うコードブロックをスニペットとして登録できます：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// .vscode/snippets.json\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">React Function Component\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">prefix\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">rfc\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">body\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">import React from 'react';\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">interface ${1:ComponentName}Props {\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">  $2\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">}\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">export const ${1:ComponentName}: React.FC&#x3C;${1:ComponentName}Props> = (props) => {\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">  return (\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">    &#x3C;div>\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">      $0\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">    &#x3C;/div>\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">  );\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">};\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">      \"\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    ],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">description\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Creates a React Function Component with TypeScript\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-タスクの自動化\">2. タスクの自動化\u003C/h3>\n\u003Cp>頻繁に実行するコマンドをタスクとして登録できます：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// .vscode/tasks.json\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">version\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">2.0.0\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">tasks\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">label\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Build Project\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">type\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">npm\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">script\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">build\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">group\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">        \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">kind\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">build\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">        \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">isDefault\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">label\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Run Tests\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">type\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">npm\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">script\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">test\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">group\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">        \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">kind\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">test\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">        \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">isDefault\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  ]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-デバッグ設定\">3. デバッグ設定\u003C/h3>\n\u003Cp>デバッグ設定をカスタマイズして効率的なデバッグを実現できます：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// .vscode/launch.json\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">version\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">0.2.0\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">configurations\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">type\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">node\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">request\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">launch\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">name\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Debug Node.js\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">program\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">${workspaceFolder}/src/index.js\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">skipFiles\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">        \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">&#x3C;node_internals>/**\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">      ]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">type\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">chrome\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">request\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">launch\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">name\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Debug React App\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">url\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">http://localhost:3000\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">      \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">webRoot\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">${workspaceFolder}/src\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  ]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"トラブルシューティング\">トラブルシューティング\u003C/h2>\n\u003Ch3 id=\"1-拡張機能の競合\">1. 拡張機能の競合\u003C/h3>\n\u003Cp>複数の拡張機能が競合する場合は、以下の手順で解決します：\u003C/p>\n\u003Col>\n\u003Cli>拡張機能を一時的に無効化\u003C/li>\n\u003Cli>競合している拡張機能を特定\u003C/li>\n\u003Cli>設定の調整または代替拡張機能の検討\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"2-パフォーマンスの問題\">2. パフォーマンスの問題\u003C/h3>\n\u003Cp>VSCodeが重くなった場合の対処法：\u003C/p>\n\u003Col>\n\u003Cli>不要な拡張機能の無効化\u003C/li>\n\u003Cli>ワークスペースのファイル監視設定の調整\u003C/li>\n\u003Cli>エディタの軽量化設定\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">files.watcherExclude\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">**/.git/objects/**\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">**/.git/subtree-cache/**\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">**/node_modules/**\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.minimap.enabled\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.renderWhitespace\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">none\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.renderControlCharacters\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-設定の同期\">3. 設定の同期\u003C/h3>\n\u003Cp>複数のマシンで設定を同期する方法：\u003C/p>\n\u003Col>\n\u003Cli>Settings Syncの有効化\u003C/li>\n\u003Cli>GitHubアカウントでのサインイン\u003C/li>\n\u003Cli>同期する項目の選択\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>VSCodeの基本設定と拡張機能を適切に組み合わせることで、開発効率を大幅に向上させることができます。以下のポイントを押さえておきましょう：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>基本設定の重要性\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>エディタの外観\u003C/li>\n\u003Cli>キーボードショートカット\u003C/li>\n\u003Cli>ワークスペース設定\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>必須の拡張機能\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>ESLint\u003C/li>\n\u003Cli>Prettier\u003C/li>\n\u003Cli>GitLens\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>開発効率化のTips\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>スニペットの活用\u003C/li>\n\u003Cli>タスクの自動化\u003C/li>\n\u003Cli>デバッグ設定\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>これらの設定と拡張機能を活用することで、より快適な開発環境を構築できます。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>VSCodeの基本を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/programming-environment-setup-2025/\">【2025年版】プログラミングを始めるための環境構築ガイド\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/how-to-write-better-comments/\">【コメントの書き方でコードが劇的にわかりやすくなる！】\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":1263,"imagePaths":1335,"frontmatter":1336},[1264,1266,1269,1272,1275,1278,1280,1283,1286,1289,1292,1295,1298,1301,1304,1307,1310,1313,1316,1319,1322,1324,1327,1330,1333,1334],{"depth":26,"slug":1265,"text":1254},"初心者向けvscodeの基本設定と便利な拡張機能10選",{"depth":29,"slug":1267,"text":1268},"vscodeの基本設定","VSCodeの基本設定",{"depth":33,"slug":1270,"text":1271},"1-エディタの外観設定","1. エディタの外観設定",{"depth":33,"slug":1273,"text":1274},"2-キーボードショートカット","2. キーボードショートカット",{"depth":33,"slug":1276,"text":1277},"3-ワークスペース設定","3. ワークスペース設定",{"depth":29,"slug":1279,"text":1279},"おすすめの拡張機能10選",{"depth":33,"slug":1281,"text":1282},"1-eslint","1. ESLint",{"depth":33,"slug":1284,"text":1285},"2-prettier","2. Prettier",{"depth":33,"slug":1287,"text":1288},"3-gitlens","3. GitLens",{"depth":33,"slug":1290,"text":1291},"4-live-server","4. Live Server",{"depth":33,"slug":1293,"text":1294},"5-auto-rename-tag","5. Auto Rename Tag",{"depth":33,"slug":1296,"text":1297},"6-code-spell-checker","6. Code Spell Checker",{"depth":33,"slug":1299,"text":1300},"7-path-intellisense","7. Path Intellisense",{"depth":33,"slug":1302,"text":1303},"8-material-icon-theme","8. Material Icon Theme",{"depth":33,"slug":1305,"text":1306},"9-error-lens","9. Error Lens",{"depth":33,"slug":1308,"text":1309},"10-docker","10. Docker",{"depth":29,"slug":1311,"text":1312},"開発効率を上げるtips","開発効率を上げるTips",{"depth":33,"slug":1314,"text":1315},"1-スニペットの活用","1. スニペットの活用",{"depth":33,"slug":1317,"text":1318},"2-タスクの自動化","2. タスクの自動化",{"depth":33,"slug":1320,"text":1321},"3-デバッグ設定","3. デバッグ設定",{"depth":29,"slug":1323,"text":1323},"トラブルシューティング",{"depth":33,"slug":1325,"text":1326},"1-拡張機能の競合","1. 拡張機能の競合",{"depth":33,"slug":1328,"text":1329},"2-パフォーマンスの問題","2. パフォーマンスの問題",{"depth":33,"slug":1331,"text":1332},"3-設定の同期","3. 設定の同期",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":1254,"description":1255,"pubDate":1337,"heroImage":371},"Mar 20 2025","programming-environment-setup-2025",{"id":1338,"data":1340,"body":1344,"filePath":1345,"digest":1346,"rendered":1347},{"title":1341,"description":1342,"pubDate":1343,"heroImage":371},"【2025年版】プログラミングを始めるための環境構築ガイド（Windows, Mac対応）","2025年最新版！WindowsとMacでのプログラミング環境構築方法を、初心者にもわかりやすく解説します。",["Date","2025-03-18T15:00:00.000Z"],"# 【2025年版】プログラミングを始めるための環境構築ガイド（Windows, Mac対応）\r\n\r\nプログラミングを始めるにあたって、最初の壁となるのが環境構築です。この記事では、WindowsとMac両方のOSに対応した、プログラミング環境の構築方法を詳しく解説します。2025年の最新情報に基づいて、初心者の方でも簡単に環境を整えられるようにステップバイステップで説明していきます。\r\n\r\n## 目次\r\n\r\n1. [基本的なツールのインストール](#基本的なツールのインストール)\r\n2. [テキストエディタの設定](#テキストエディタの設定)\r\n3. [プログラミング言語のインストール](#プログラミング言語のインストール)\r\n4. [バージョン管理システムの設定](#バージョン管理システムの設定)\r\n5. [ターミナルの設定](#ターミナルの設定)\r\n6. [統合開発環境（IDE）のセットアップ](#統合開発環境のセットアップ)\r\n\r\n## 基本的なツールのインストール\r\n\r\n### Windowsの場合\r\n\r\n1. **Windows Terminal**のインストール\r\n   - Microsoft Storeを開く\r\n   - \"Windows Terminal\"を検索\r\n   - インストールボタンをクリック\r\n\r\n2. **WSL2（Windows Subsystem for Linux）**のインストール\r\n   ```powershell\r\n   # PowerShellを管理者として実行\r\n   wsl --install\r\n   ```\r\n\r\n3. **パッケージマネージャー（winget）**の確認\r\n   ```powershell\r\n   winget --version\r\n   ```\r\n   - 未インストールの場合はMicrosoft Storeからインストール\r\n\r\n### Macの場合\r\n\r\n1. **Homebrewのインストール**\r\n   ```bash\r\n   /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\r\n   ```\r\n\r\n2. **Command Line Tools for Xcode**のインストール\r\n   ```bash\r\n   xcode-select --install\r\n   ```\r\n\r\n## テキストエディタの設定\r\n\r\n### Visual Studio Codeのインストール\r\n\r\n#### Windows\r\n```powershell\r\nwinget install Microsoft.VisualStudioCode\r\n```\r\n\r\n#### Mac\r\n```bash\r\nbrew install --cask visual-studio-code\r\n```\r\n\r\n### 推奨拡張機能のインストール\r\n\r\n1. **基本的な拡張機能**\r\n   - ESLint\r\n   - Prettier\r\n   - GitLens\r\n   - Live Server\r\n   - Auto Close Tag\r\n   - Auto Rename Tag\r\n   - Path Intellisense\r\n\r\n2. **言語特有の拡張機能**\r\n   - Python\r\n   - JavaScript and TypeScript\r\n   - C/C++\r\n   - Java Extension Pack\r\n   - Go\r\n\r\n### VS Codeの基本設定\r\n\r\n```json\r\n{\r\n  \"editor.formatOnSave\": true,\r\n  \"editor.tabSize\": 2,\r\n  \"editor.wordWrap\": \"on\",\r\n  \"files.autoSave\": \"onFocusChange\",\r\n  \"workbench.colorTheme\": \"Default Dark Modern\",\r\n  \"terminal.integrated.defaultProfile.windows\": \"PowerShell\",\r\n  \"terminal.integrated.defaultProfile.osx\": \"zsh\"\r\n}\r\n```\r\n\r\n## プログラミング言語のインストール\r\n\r\n### Node.js\r\n\r\n#### Windows\r\n```powershell\r\nwinget install OpenJS.NodeJS.LTS\r\n```\r\n\r\n#### Mac\r\n```bash\r\nbrew install node@20\r\n```\r\n\r\n### Python\r\n\r\n#### Windows\r\n```powershell\r\nwinget install Python.Python.3.12\r\n```\r\n\r\n#### Mac\r\n```bash\r\nbrew install python@3.12\r\n```\r\n\r\n### Java\r\n\r\n#### Windows\r\n```powershell\r\nwinget install Microsoft.OpenJDK.17\r\n```\r\n\r\n#### Mac\r\n```bash\r\nbrew install openjdk@17\r\n```\r\n\r\n## バージョン管理システムの設定\r\n\r\n### Gitのインストール\r\n\r\n#### Windows\r\n```powershell\r\nwinget install Git.Git\r\n```\r\n\r\n#### Mac\r\n```bash\r\nbrew install git\r\n```\r\n\r\n### Gitの初期設定\r\n\r\n```bash\r\n# ユーザー名とメールアドレスの設定\r\ngit config --global user.name \"あなたの名前\"\r\ngit config --global user.email \"あなたのメールアドレス\"\r\n\r\n# デフォルトブランチ名の設定\r\ngit config --global init.defaultBranch main\r\n\r\n# 改行コードの設定\r\n## Windows\r\ngit config --global core.autocrlf true\r\n## Mac\r\ngit config --global core.autocrlf input\r\n```\r\n\r\n## ターミナルの設定\r\n\r\n### Windows Terminal（Windows）\r\n\r\n設定ファイル（`settings.json`）の推奨設定：\r\n\r\n```json\r\n{\r\n    \"defaultProfile\": \"{574e775e-4f2a-5b96-ac1e-a2962a402336}\",\r\n    \"profiles\": {\r\n        \"defaults\": {\r\n            \"font\": {\r\n                \"face\": \"Cascadia Code PL\",\r\n                \"size\": 11\r\n            },\r\n            \"opacity\": 95,\r\n            \"useAcrylic\": true\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### iTerm2（Mac）\r\n\r\n```bash\r\n# インストール\r\nbrew install --cask iterm2\r\n\r\n# Oh My Zshのインストール\r\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\n```\r\n\r\n`.zshrc`の推奨設定：\r\n\r\n```bash\r\n# テーマの設定\r\nZSH_THEME=\"agnoster\"\r\n\r\n# プラグインの設定\r\nplugins=(\r\n  git\r\n  docker\r\n  node\r\n  npm\r\n  python\r\n  vscode\r\n)\r\n\r\n# エイリアスの設定\r\nalias gs='git status'\r\nalias gc='git commit'\r\nalias gp='git push'\r\nalias ll='ls -la'\r\n```\r\n\r\n## 統合開発環境のセットアップ\r\n\r\n### JetBrains IDEs\r\n\r\n#### Windows\r\n```powershell\r\nwinget install JetBrains.Toolbox\r\n```\r\n\r\n#### Mac\r\n```bash\r\nbrew install --cask jetbrains-toolbox\r\n```\r\n\r\n推奨IDEs：\r\n- IntelliJ IDEA（Java）\r\n- PyCharm（Python）\r\n- WebStorm（JavaScript/TypeScript）\r\n- GoLand（Go）\r\n\r\n### Visual Studio（Windows）\r\n\r\n```powershell\r\nwinget install Microsoft.VisualStudio.2022.Community\r\n```\r\n\r\n### Xcode（Mac）\r\n\r\nApp Storeからインストール\r\n\r\n## 開発環境の動作確認\r\n\r\n### Node.jsの確認\r\n\r\n```bash\r\n# バージョン確認\r\nnode --version\r\nnpm --version\r\n\r\n# テストプロジェクトの作成\r\nmkdir test-project\r\ncd test-project\r\nnpm init -y\r\nnpm install express\r\n```\r\n\r\n### Pythonの確認\r\n\r\n```bash\r\n# バージョン確認\r\npython --version\r\npip --version\r\n\r\n# 仮想環境の作成とパッケージのインストール\r\npython -m venv venv\r\nsource venv/bin/activate  # Macの場合\r\n.\\venv\\Scripts\\activate   # Windowsの場合\r\npip install requests\r\n```\r\n\r\n### Javaの確認\r\n\r\n```bash\r\n# バージョン確認\r\njava --version\r\njavac --version\r\n\r\n# テストプログラムの作成と実行\r\necho 'public class Hello { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }' > Hello.java\r\njavac Hello.java\r\njava Hello\r\n```\r\n\r\n## トラブルシューティング\r\n\r\n### よくある問題と解決方法\r\n\r\n1. **パスが通っていない場合**\r\n\r\n#### Windows\r\n```powershell\r\n# システム環境変数の確認\r\necho $env:Path\r\n\r\n# パスの追加\r\n$env:Path += \";C:\\Program Files\\nodejs\"\r\n```\r\n\r\n#### Mac\r\n```bash\r\n# パスの確認\r\necho $PATH\r\n\r\n# パスの追加（.zshrcに記述）\r\nexport PATH=\"/usr/local/bin:$PATH\"\r\n```\r\n\r\n2. **権限の問題**\r\n\r\n#### Windows\r\n- PowerShellを管理者として実行\r\n- セキュリティポリシーの確認：\r\n  ```powershell\r\n  Get-ExecutionPolicy\r\n  Set-ExecutionPolicy RemoteSigned\r\n  ```\r\n\r\n#### Mac\r\n```bash\r\n# 権限の修正\r\nsudo chown -R $(whoami) /usr/local/lib/node_modules\r\nsudo chown -R $(whoami) /usr/local/bin\r\n```\r\n\r\n3. **SSL証明書の問題**\r\n\r\n```bash\r\n# Node.jsの場合\r\nnpm config set strict-ssl false\r\n\r\n# Gitの場合\r\ngit config --global http.sslVerify false\r\n```\r\n\r\n## セキュリティ設定\r\n\r\n### ファイアウォールの設定\r\n\r\n#### Windows\r\n- Windowsセキュリティを開く\r\n- ファイアウォールとネットワーク保護を選択\r\n- 開発用ポートの許可を設定\r\n\r\n#### Mac\r\n- システム環境設定 > セキュリティとプライバシー\r\n- ファイアウォールタブ\r\n- 開発用アプリケーションの通信を許可\r\n\r\n### アンチウイルスソフトの除外設定\r\n\r\n開発フォルダを除外リストに追加：\r\n\r\n#### Windows Defender\r\n```powershell\r\nAdd-MpPreference -ExclusionPath \"C:\\Dev\"\r\n```\r\n\r\n## 推奨ツール\r\n\r\n### 開発効率を上げるツール\r\n\r\n1. **Postman** - APIテスト用\r\n   ```bash\r\n   # Mac\r\n   brew install --cask postman\r\n   # Windows\r\n   winget install Postman.Postman\r\n   ```\r\n\r\n2. **Docker** - コンテナ化環境\r\n   ```bash\r\n   # Mac\r\n   brew install --cask docker\r\n   # Windows\r\n   winget install Docker.DockerDesktop\r\n   ```\r\n\r\n3. **DBeaver** - データベース管理\r\n   ```bash\r\n   # Mac\r\n   brew install --cask dbeaver-community\r\n   # Windows\r\n   winget install dbeaver.dbeaver\r\n   ```\r\n\r\n## まとめ\r\n\r\nこの記事では、2025年時点での最新のプログラミング環境構築方法について解説しました。主なポイントは：\r\n\r\n1. **基本ツールの準備**\r\n   - ターミナル\r\n   - パッケージマネージャー\r\n   - テキストエディタ\r\n\r\n2. **言語環境の構築**\r\n   - Node.js\r\n   - Python\r\n   - Java\r\n\r\n3. **開発支援ツール**\r\n   - Git\r\n   - VS Code拡張機能\r\n   - 統合開発環境\r\n\r\n4. **セキュリティとトラブルシューティング**\r\n   - 基本的なセキュリティ設定\r\n   - 一般的な問題の解決方法\r\n\r\n環境構築は一度しっかりと行えば、その後のプログラミング学習をスムーズに進めることができます。この記事を参考に、自分に適した開発環境を整えてください。\r\n\r\n## 次のステップ\r\n\r\n環境構築が完了したら、以下の記事も参考にしてください：\r\n\r\n- [プログラミング初心者が最初に学ぶべき5つの概念](/tech-blog/blog/programming-concepts-for-beginners/)\r\n- [【超初心者向け】Hello Worldを書いてみよう！（Python, JavaScript, Java）](/tech-blog/blog/hello-world-programming-guide/)\r\n- [【コメントの書き方でコードが劇的にわかりやすくなる！】](/tech-blog/blog/how-to-write-better-comments/)","src/content/blog/programming-environment-setup-2025.md","f2191d3556905cd6",{"html":1348,"metadata":1349},"\u003Ch1 id=\"2025年版プログラミングを始めるための環境構築ガイドwindows-mac対応\">【2025年版】プログラミングを始めるための環境構築ガイド（Windows, Mac対応）\u003C/h1>\n\u003Cp>プログラミングを始めるにあたって、最初の壁となるのが環境構築です。この記事では、WindowsとMac両方のOSに対応した、プログラミング環境の構築方法を詳しく解説します。2025年の最新情報に基づいて、初心者の方でも簡単に環境を整えられるようにステップバイステップで説明していきます。\u003C/p>\n\u003Ch2 id=\"目次\">目次\u003C/h2>\n\u003Col>\n\u003Cli>\u003Ca href=\"#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E3%83%84%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">基本的なツールのインストール\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF%E3%81%AE%E8%A8%AD%E5%AE%9A\">テキストエディタの設定\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9E%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">プログラミング言語のインストール\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%AE%A1%E7%90%86%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E8%A8%AD%E5%AE%9A\">バージョン管理システムの設定\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#%E3%82%BF%E3%83%BC%E3%83%9F%E3%83%8A%E3%83%AB%E3%81%AE%E8%A8%AD%E5%AE%9A\">ターミナルの設定\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#%E7%B5%B1%E5%90%88%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97\">統合開発環境（IDE）のセットアップ\u003C/a>\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"基本的なツールのインストール\">基本的なツールのインストール\u003C/h2>\n\u003Ch3 id=\"windowsの場合\">Windowsの場合\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>Windows Terminal\u003C/strong>のインストール\u003C/p>\n\u003Cul>\n\u003Cli>Microsoft Storeを開く\u003C/li>\n\u003Cli>“Windows Terminal”を検索\u003C/li>\n\u003Cli>インストールボタンをクリック\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>**WSL2（Windows Subsystem for Linux）**のインストール\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># PowerShellを管理者として実行\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">wsl \u003C/span>\u003Cspan style=\"color:#FF79C6\">--\u003C/span>\u003Cspan style=\"color:#F8F8F2\">install\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>**パッケージマネージャー（winget）**の確認\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">winget \u003C/span>\u003Cspan style=\"color:#FF79C6\">--\u003C/span>\u003Cspan style=\"color:#F8F8F2\">version\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cul>\n\u003Cli>未インストールの場合はMicrosoft Storeからインストール\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"macの場合\">Macの場合\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>Homebrewのインストール\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">/bin/bash\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -c\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">$(\u003C/span>\u003Cspan style=\"color:#50FA7B\">curl\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -fsSL\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Command Line Tools for Xcode\u003C/strong>のインストール\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">xcode-select\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --install\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"テキストエディタの設定\">テキストエディタの設定\u003C/h2>\n\u003Ch3 id=\"visual-studio-codeのインストール\">Visual Studio Codeのインストール\u003C/h3>\n\u003Ch4 id=\"windows\">Windows\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">winget install Microsoft.VisualStudioCode\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"mac\">Mac\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">brew\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --cask\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> visual-studio-code\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"推奨拡張機能のインストール\">推奨拡張機能のインストール\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>基本的な拡張機能\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>ESLint\u003C/li>\n\u003Cli>Prettier\u003C/li>\n\u003Cli>GitLens\u003C/li>\n\u003Cli>Live Server\u003C/li>\n\u003Cli>Auto Close Tag\u003C/li>\n\u003Cli>Auto Rename Tag\u003C/li>\n\u003Cli>Path Intellisense\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>言語特有の拡張機能\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Python\u003C/li>\n\u003Cli>JavaScript and TypeScript\u003C/li>\n\u003Cli>C/C++\u003C/li>\n\u003Cli>Java Extension Pack\u003C/li>\n\u003Cli>Go\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"vs-codeの基本設定\">VS Codeの基本設定\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.formatOnSave\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.tabSize\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">editor.wordWrap\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">on\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">files.autoSave\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">onFocusChange\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">workbench.colorTheme\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Default Dark Modern\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">terminal.integrated.defaultProfile.windows\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">PowerShell\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">  \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">terminal.integrated.defaultProfile.osx\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">zsh\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"プログラミング言語のインストール\">プログラミング言語のインストール\u003C/h2>\n\u003Ch3 id=\"nodejs\">Node.js\u003C/h3>\n\u003Ch4 id=\"windows-1\">Windows\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">winget install OpenJS.NodeJS.LTS\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"mac-1\">Mac\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">brew\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> node@20\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"python\">Python\u003C/h3>\n\u003Ch4 id=\"windows-2\">Windows\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">winget install Python.Python.\u003C/span>\u003Cspan style=\"color:#BD93F9\">3.12\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"mac-2\">Mac\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">brew\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> python@3.12\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"java\">Java\u003C/h3>\n\u003Ch4 id=\"windows-3\">Windows\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">winget install Microsoft.OpenJDK.\u003C/span>\u003Cspan style=\"color:#BD93F9\">17\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"mac-3\">Mac\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">brew\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> openjdk@17\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"バージョン管理システムの設定\">バージョン管理システムの設定\u003C/h2>\n\u003Ch3 id=\"gitのインストール\">Gitのインストール\u003C/h3>\n\u003Ch4 id=\"windows-4\">Windows\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">winget install Git.Git\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"mac-4\">Mac\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">brew\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> git\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"gitの初期設定\">Gitの初期設定\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># ユーザー名とメールアドレスの設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">git\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> config\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --global\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> user.name\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">あなたの名前\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">git\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> config\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --global\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> user.email\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">あなたのメールアドレス\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># デフォルトブランチ名の設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">git\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> config\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --global\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> init.defaultBranch\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> main\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># 改行コードの設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">## Windows\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">git\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> config\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --global\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> core.autocrlf\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">## Mac\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">git\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> config\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --global\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> core.autocrlf\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> input\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"ターミナルの設定\">ターミナルの設定\u003C/h2>\n\u003Ch3 id=\"windows-terminalwindows\">Windows Terminal（Windows）\u003C/h3>\n\u003Cp>設定ファイル（\u003Ccode>settings.json\u003C/code>）の推奨設定：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">defaultProfile\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">{574e775e-4f2a-5b96-ac1e-a2962a402336}\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">    \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">profiles\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">        \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">defaults\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">            \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">font\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">                \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">face\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Cascadia Code PL\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">                \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">size\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 11\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">            \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">opacity\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 95\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FE\">            \"\u003C/span>\u003Cspan style=\"color:#8BE9FD\">useAcrylic\u003C/span>\u003Cspan style=\"color:#8BE9FE\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"iterm2mac\">iTerm2（Mac）\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># インストール\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">brew\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --cask\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> iterm2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># Oh My Zshのインストール\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">sh\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -c\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">$(\u003C/span>\u003Cspan style=\"color:#50FA7B\">curl\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -fsSL\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Ccode>.zshrc\u003C/code>の推奨設定：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># テーマの設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">ZSH_THEME\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">agnoster\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># プラグインの設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9\">plugins\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F1FA8C\">  git\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F1FA8C\">  docker\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F1FA8C\">  node\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F1FA8C\">  npm\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F1FA8C\">  python\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F1FA8C\">  vscode\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># エイリアスの設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">alias\u003C/span>\u003Cspan style=\"color:#BD93F9\"> gs\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">git status\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">alias\u003C/span>\u003Cspan style=\"color:#BD93F9\"> gc\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">git commit\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">alias\u003C/span>\u003Cspan style=\"color:#BD93F9\"> gp\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">git push\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">alias\u003C/span>\u003Cspan style=\"color:#BD93F9\"> ll\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ls -la\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"統合開発環境のセットアップ\">統合開発環境のセットアップ\u003C/h2>\n\u003Ch3 id=\"jetbrains-ides\">JetBrains IDEs\u003C/h3>\n\u003Ch4 id=\"windows-5\">Windows\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">winget install JetBrains.Toolbox\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"mac-5\">Mac\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">brew\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --cask\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> jetbrains-toolbox\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>推奨IDEs：\u003C/p>\n\u003Cul>\n\u003Cli>IntelliJ IDEA（Java）\u003C/li>\n\u003Cli>PyCharm（Python）\u003C/li>\n\u003Cli>WebStorm（JavaScript/TypeScript）\u003C/li>\n\u003Cli>GoLand（Go）\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"visual-studiowindows\">Visual Studio（Windows）\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">winget install Microsoft.VisualStudio.\u003C/span>\u003Cspan style=\"color:#BD93F9\">2022.\u003C/span>\u003Cspan style=\"color:#F8F8F2\">Community\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"xcodemac\">Xcode（Mac）\u003C/h3>\n\u003Cp>App Storeからインストール\u003C/p>\n\u003Ch2 id=\"開発環境の動作確認\">開発環境の動作確認\u003C/h2>\n\u003Ch3 id=\"nodejsの確認\">Node.jsの確認\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># バージョン確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">node\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --version\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">npm\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --version\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># テストプロジェクトの作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">mkdir\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> test-project\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">cd\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> test-project\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">npm\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> init\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -y\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">npm\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> express\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"pythonの確認\">Pythonの確認\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># バージョン確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">python\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --version\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">pip\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --version\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># 仮想環境の作成とパッケージのインストール\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">python\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -m\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> venv\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> venv\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">source\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> venv/bin/activate\u003C/span>\u003Cspan style=\"color:#6272A4\">  # Macの場合\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">.\u003C/span>\u003Cspan style=\"color:#F8F8F2\">\\\u003C/span>\u003Cspan style=\"color:#F1FA8C\">venv\u003C/span>\u003Cspan style=\"color:#F8F8F2\">\\\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Scripts\u003C/span>\u003Cspan style=\"color:#F8F8F2\">\\\u003C/span>\u003Cspan style=\"color:#F1FA8C\">activate\u003C/span>\u003Cspan style=\"color:#6272A4\">   # Windowsの場合\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">pip\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> requests\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"javaの確認\">Javaの確認\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># バージョン確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">java\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --version\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">javac\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --version\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># テストプログラムの作成と実行\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">echo\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">public class Hello { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> >\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> Hello.java\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">javac\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> Hello.java\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">java\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> Hello\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"トラブルシューティング\">トラブルシューティング\u003C/h2>\n\u003Ch3 id=\"よくある問題と解決方法\">よくある問題と解決方法\u003C/h3>\n\u003Col>\n\u003Cli>\u003Cstrong>パスが通っていない場合\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Ch4 id=\"windows-6\">Windows\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># システム環境変数の確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">echo $\u003C/span>\u003Cspan style=\"color:#BD93F9\">env:\u003C/span>\u003Cspan style=\"color:#F8F8F2\">Path\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># パスの追加\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">$\u003C/span>\u003Cspan style=\"color:#BD93F9\">env:\u003C/span>\u003Cspan style=\"color:#F8F8F2\">Path \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">;C:\\Program Files\\nodejs\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"mac-6\">Mac\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># パスの確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">echo\u003C/span>\u003Cspan style=\"color:#BD93F9\"> $PATH\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># パスの追加（.zshrcに記述）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">export\u003C/span>\u003Cspan style=\"color:#BD93F9\"> PATH\u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/usr/local/bin:\u003C/span>\u003Cspan style=\"color:#BD93F9\">$PATH\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"2\">\n\u003Cli>\u003Cstrong>権限の問題\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Ch4 id=\"windows-7\">Windows\u003C/h4>\n\u003Cul>\n\u003Cli>PowerShellを管理者として実行\u003C/li>\n\u003Cli>セキュリティポリシーの確認：\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">Get-ExecutionPolicy\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">Set-ExecutionPolicy\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> RemoteSigned\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"mac-7\">Mac\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># 権限の修正\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">sudo\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> chown\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -R\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> $(\u003C/span>\u003Cspan style=\"color:#50FA7B\">whoami\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#F1FA8C\">/usr/local/lib/node_modules\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">sudo\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> chown\u003C/span>\u003Cspan style=\"color:#BD93F9\"> -R\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> $(\u003C/span>\u003Cspan style=\"color:#50FA7B\">whoami\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#F1FA8C\">/usr/local/bin\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col start=\"3\">\n\u003Cli>\u003Cstrong>SSL証明書の問題\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># Node.jsの場合\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">npm\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> config\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> set\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> strict-ssl\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># Gitの場合\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">git\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> config\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --global\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> http.sslVerify\u003C/span>\u003Cspan style=\"color:#BD93F9\"> false\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"セキュリティ設定\">セキュリティ設定\u003C/h2>\n\u003Ch3 id=\"ファイアウォールの設定\">ファイアウォールの設定\u003C/h3>\n\u003Ch4 id=\"windows-8\">Windows\u003C/h4>\n\u003Cul>\n\u003Cli>Windowsセキュリティを開く\u003C/li>\n\u003Cli>ファイアウォールとネットワーク保護を選択\u003C/li>\n\u003Cli>開発用ポートの許可を設定\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"mac-8\">Mac\u003C/h4>\n\u003Cul>\n\u003Cli>システム環境設定 > セキュリティとプライバシー\u003C/li>\n\u003Cli>ファイアウォールタブ\u003C/li>\n\u003Cli>開発用アプリケーションの通信を許可\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"アンチウイルスソフトの除外設定\">アンチウイルスソフトの除外設定\u003C/h3>\n\u003Cp>開発フォルダを除外リストに追加：\u003C/p>\n\u003Ch4 id=\"windows-defender\">Windows Defender\u003C/h4>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">Add-MpPreference\u003C/span>\u003Cspan style=\"color:#FF79C6\"> -\u003C/span>\u003Cspan style=\"color:#F8F8F2\">ExclusionPath \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">C:\\Dev\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"推奨ツール\">推奨ツール\u003C/h2>\n\u003Ch3 id=\"開発効率を上げるツール\">開発効率を上げるツール\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>Postman\u003C/strong> - APIテスト用\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># Mac\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">brew\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --cask\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> postman\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># Windows\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">winget\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> Postman.Postman\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Docker\u003C/strong> - コンテナ化環境\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># Mac\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">brew\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --cask\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> docker\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># Windows\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">winget\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> Docker.DockerDesktop\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>DBeaver\u003C/strong> - データベース管理\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># Mac\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">brew\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#BD93F9\"> --cask\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> dbeaver-community\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># Windows\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">winget\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> install\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> dbeaver.dbeaver\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>この記事では、2025年時点での最新のプログラミング環境構築方法について解説しました。主なポイントは：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>基本ツールの準備\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>ターミナル\u003C/li>\n\u003Cli>パッケージマネージャー\u003C/li>\n\u003Cli>テキストエディタ\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>言語環境の構築\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Node.js\u003C/li>\n\u003Cli>Python\u003C/li>\n\u003Cli>Java\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>開発支援ツール\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Git\u003C/li>\n\u003Cli>VS Code拡張機能\u003C/li>\n\u003Cli>統合開発環境\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>セキュリティとトラブルシューティング\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>基本的なセキュリティ設定\u003C/li>\n\u003Cli>一般的な問題の解決方法\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>環境構築は一度しっかりと行えば、その後のプログラミング学習をスムーズに進めることができます。この記事を参考に、自分に適した開発環境を整えてください。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>環境構築が完了したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/hello-world-programming-guide/\">【超初心者向け】Hello Worldを書いてみよう！（Python, JavaScript, Java）\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/how-to-write-better-comments/\">【コメントの書き方でコードが劇的にわかりやすくなる！】\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":1350,"imagePaths":1474,"frontmatter":1475},[1351,1353,1355,1357,1360,1363,1365,1368,1371,1374,1376,1379,1381,1384,1386,1388,1389,1391,1393,1394,1396,1398,1400,1403,1405,1407,1410,1412,1415,1418,1420,1423,1425,1427,1430,1433,1435,1438,1441,1444,1445,1447,1449,1451,1453,1455,1457,1459,1461,1463,1465,1468,1470,1472,1473],{"depth":26,"slug":1352,"text":1341},"2025年版プログラミングを始めるための環境構築ガイドwindows-mac対応",{"depth":29,"slug":1354,"text":1354},"目次",{"depth":29,"slug":1356,"text":1356},"基本的なツールのインストール",{"depth":33,"slug":1358,"text":1359},"windowsの場合","Windowsの場合",{"depth":33,"slug":1361,"text":1362},"macの場合","Macの場合",{"depth":29,"slug":1364,"text":1364},"テキストエディタの設定",{"depth":33,"slug":1366,"text":1367},"visual-studio-codeのインストール","Visual Studio Codeのインストール",{"depth":67,"slug":1369,"text":1370},"windows","Windows",{"depth":67,"slug":1372,"text":1373},"mac","Mac",{"depth":33,"slug":1375,"text":1375},"推奨拡張機能のインストール",{"depth":33,"slug":1377,"text":1378},"vs-codeの基本設定","VS Codeの基本設定",{"depth":29,"slug":1380,"text":1380},"プログラミング言語のインストール",{"depth":33,"slug":1382,"text":1383},"nodejs","Node.js",{"depth":67,"slug":1385,"text":1370},"windows-1",{"depth":67,"slug":1387,"text":1373},"mac-1",{"depth":33,"slug":1160,"text":1161},{"depth":67,"slug":1390,"text":1370},"windows-2",{"depth":67,"slug":1392,"text":1373},"mac-2",{"depth":33,"slug":1166,"text":1167},{"depth":67,"slug":1395,"text":1370},"windows-3",{"depth":67,"slug":1397,"text":1373},"mac-3",{"depth":29,"slug":1399,"text":1399},"バージョン管理システムの設定",{"depth":33,"slug":1401,"text":1402},"gitのインストール","Gitのインストール",{"depth":67,"slug":1404,"text":1370},"windows-4",{"depth":67,"slug":1406,"text":1373},"mac-4",{"depth":33,"slug":1408,"text":1409},"gitの初期設定","Gitの初期設定",{"depth":29,"slug":1411,"text":1411},"ターミナルの設定",{"depth":33,"slug":1413,"text":1414},"windows-terminalwindows","Windows Terminal（Windows）",{"depth":33,"slug":1416,"text":1417},"iterm2mac","iTerm2（Mac）",{"depth":29,"slug":1419,"text":1419},"統合開発環境のセットアップ",{"depth":33,"slug":1421,"text":1422},"jetbrains-ides","JetBrains IDEs",{"depth":67,"slug":1424,"text":1370},"windows-5",{"depth":67,"slug":1426,"text":1373},"mac-5",{"depth":33,"slug":1428,"text":1429},"visual-studiowindows","Visual Studio（Windows）",{"depth":33,"slug":1431,"text":1432},"xcodemac","Xcode（Mac）",{"depth":29,"slug":1434,"text":1434},"開発環境の動作確認",{"depth":33,"slug":1436,"text":1437},"nodejsの確認","Node.jsの確認",{"depth":33,"slug":1439,"text":1440},"pythonの確認","Pythonの確認",{"depth":33,"slug":1442,"text":1443},"javaの確認","Javaの確認",{"depth":29,"slug":1323,"text":1323},{"depth":33,"slug":1446,"text":1446},"よくある問題と解決方法",{"depth":67,"slug":1448,"text":1370},"windows-6",{"depth":67,"slug":1450,"text":1373},"mac-6",{"depth":67,"slug":1452,"text":1370},"windows-7",{"depth":67,"slug":1454,"text":1373},"mac-7",{"depth":29,"slug":1456,"text":1456},"セキュリティ設定",{"depth":33,"slug":1458,"text":1458},"ファイアウォールの設定",{"depth":67,"slug":1460,"text":1370},"windows-8",{"depth":67,"slug":1462,"text":1373},"mac-8",{"depth":33,"slug":1464,"text":1464},"アンチウイルスソフトの除外設定",{"depth":67,"slug":1466,"text":1467},"windows-defender","Windows Defender",{"depth":29,"slug":1469,"text":1469},"推奨ツール",{"depth":33,"slug":1471,"text":1471},"開発効率を上げるツール",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":1341,"description":1342,"pubDate":1476,"heroImage":371},"Mar 19 2025","function-basics-guide",{"id":1477,"data":1479,"body":1483,"filePath":1484,"digest":1485,"rendered":1486},{"title":1480,"description":1481,"pubDate":1482,"heroImage":514},"【基礎から学ぶ】関数の作り方と使い方を徹底解説","プログラミングの基本要素である関数について、作り方から実践的な使い方まで初心者にもわかりやすく解説します。",["Date","2025-03-09T15:00:00.000Z"],"# 【基礎から学ぶ】関数の作り方と使い方を徹底解説\r\n\r\nプログラミングにおいて、関数は最も重要な基本要素の1つです。コードの再利用性を高め、プログラムを整理するために不可欠な存在です。この記事では、関数の基本的な概念から実践的な使い方まで、初心者にもわかりやすく解説します。\r\n\r\n## 関数とは？\r\n\r\n関数は、特定の処理をまとめた「部品」のようなものです。一度作った関数は、必要なときに何度でも使うことができます。\r\n\r\n### 関数を使うメリット\r\n\r\n1. **コードの再利用**\r\n   - 同じ処理を何度も書く必要がない\r\n   - 変更が必要な場合も1箇所を修正するだけでよい\r\n\r\n2. **プログラムの整理**\r\n   - 処理をわかりやすい単位に分割できる\r\n   - コードの見通しが良くなる\r\n\r\n3. **保守性の向上**\r\n   - バグの修正が容易になる\r\n   - 機能の追加や変更がしやすくなる\r\n\r\n## 関数の基本構造\r\n\r\nJavaScriptを例に、関数の基本的な構造を見ていきましょう。\r\n\r\n### 関数の宣言\r\n\r\n```javascript\r\n// 基本的な関数の形\r\nfunction greet(name) {\r\n  return \"こんにちは、\" + name + \"さん！\";\r\n}\r\n\r\n// 関数の使用\r\nlet message = greet(\"田中\");\r\nconsole.log(message);  // \"こんにちは、田中さん！\"\r\n```\r\n\r\n関数の構成要素：\r\n- `function`: 関数を定義するキーワード\r\n- `greet`: 関数名\r\n- `(name)`: パラメータ（引数）\r\n- `return`: 戻り値を指定するキーワード\r\n\r\n## 関数の種類\r\n\r\nJavaScriptには、関数を定義する複数の方法があります。\r\n\r\n### 1. 関数宣言\r\n\r\n```javascript\r\n// 関数宣言\r\nfunction add(a, b) {\r\n  return a + b;\r\n}\r\n\r\nconsole.log(add(5, 3));  // 8\r\n```\r\n\r\n### 2. 関数式\r\n\r\n```javascript\r\n// 関数式\r\nconst multiply = function(a, b) {\r\n  return a * b;\r\n};\r\n\r\nconsole.log(multiply(4, 2));  // 8\r\n```\r\n\r\n### 3. アロー関数式\r\n\r\n```javascript\r\n// アロー関数式（ES6以降）\r\nconst divide = (a, b) => {\r\n  return a / b;\r\n};\r\n\r\n// 1行で書ける場合は更にシンプルに\r\nconst subtract = (a, b) => a - b;\r\n\r\nconsole.log(divide(10, 2));    // 5\r\nconsole.log(subtract(10, 3));  // 7\r\n```\r\n\r\n## パラメータと戻り値\r\n\r\n### パラメータの使い方\r\n\r\n```javascript\r\n// 基本的なパラメータ\r\nfunction greet(firstName, lastName) {\r\n  return `こんにちは、${lastName}${firstName}さん！`;\r\n}\r\n\r\n// デフォルト値の設定\r\nfunction greetWithTitle(name, title = \"さん\") {\r\n  return `こんにちは、${name}${title}！`;\r\n}\r\n\r\n// 可変長引数\r\nfunction sum(...numbers) {\r\n  return numbers.reduce((total, num) => total + num, 0);\r\n}\r\n\r\nconsole.log(greet(\"太郎\", \"山田\"));        // \"こんにちは、山田太郎さん！\"\r\nconsole.log(greetWithTitle(\"田中\"));       // \"こんにちは、田中さん！\"\r\nconsole.log(greetWithTitle(\"山本\", \"先生\")); // \"こんにちは、山本先生！\"\r\nconsole.log(sum(1, 2, 3, 4, 5));          // 15\r\n```\r\n\r\n### 戻り値の使い方\r\n\r\n```javascript\r\n// 単一の値を返す\r\nfunction square(n) {\r\n  return n * n;\r\n}\r\n\r\n// 複数の値を返す（オブジェクトとして）\r\nfunction getPersonInfo(name, age) {\r\n  return {\r\n    name: name,\r\n    age: age,\r\n    isAdult: age >= 20\r\n  };\r\n}\r\n\r\n// 配列を返す\r\nfunction splitName(fullName) {\r\n  return fullName.split(\" \");\r\n}\r\n\r\nconsole.log(square(5));                    // 25\r\nconsole.log(getPersonInfo(\"山田太郎\", 25));  // { name: \"山田太郎\", age: 25, isAdult: true }\r\nconsole.log(splitName(\"山田 太郎\"));        // [\"山田\", \"太郎\"]\r\n```\r\n\r\n## スコープと変数の有効範囲\r\n\r\n関数内で宣言された変数は、その関数の外からアクセスできません。\r\n\r\n```javascript\r\nfunction calculateTotal() {\r\n  let subtotal = 1000;  // この変数は関数の中でのみ有効\r\n  let tax = subtotal * 0.1;\r\n  return subtotal + tax;\r\n}\r\n\r\nconsole.log(calculateTotal());  // 1100\r\n// console.log(subtotal);      // エラー：subtotalは定義されていない\r\n```\r\n\r\n### グローバル変数とローカル変数\r\n\r\n```javascript\r\nlet globalVar = \"グローバル変数\";  // グローバルスコープ\r\n\r\nfunction showScope() {\r\n  let localVar = \"ローカル変数\";   // 関数スコープ\r\n  console.log(globalVar);        // グローバル変数にアクセス可能\r\n  console.log(localVar);         // ローカル変数にアクセス可能\r\n}\r\n\r\nshowScope();\r\nconsole.log(globalVar);          // グローバル変数にアクセス可能\r\n// console.log(localVar);        // エラー：ローカル変数にはアクセス不可\r\n```\r\n\r\n## 実践的な関数の例\r\n\r\n### 1. 配列の操作\r\n\r\n```javascript\r\n// 配列の要素を2倍にする関数\r\nfunction doubleArray(arr) {\r\n  return arr.map(num => num * 2);\r\n}\r\n\r\n// 配列の合計を計算する関数\r\nfunction calculateSum(arr) {\r\n  return arr.reduce((sum, num) => sum + num, 0);\r\n}\r\n\r\n// 特定の条件で配列をフィルタリングする関数\r\nfunction filterEvenNumbers(arr) {\r\n  return arr.filter(num => num % 2 === 0);\r\n}\r\n\r\nconst numbers = [1, 2, 3, 4, 5];\r\nconsole.log(doubleArray(numbers));       // [2, 4, 6, 8, 10]\r\nconsole.log(calculateSum(numbers));      // 15\r\nconsole.log(filterEvenNumbers(numbers)); // [2, 4]\r\n```\r\n\r\n### 2. オブジェクトの操作\r\n\r\n```javascript\r\n// ユーザーオブジェクトを作成する関数\r\nfunction createUser(name, age, email) {\r\n  return {\r\n    name,\r\n    age,\r\n    email,\r\n    createdAt: new Date(),\r\n    isAdult: age >= 20\r\n  };\r\n}\r\n\r\n// ユーザー情報をフォーマットする関数\r\nfunction formatUserInfo(user) {\r\n  return `${user.name}（${user.age}歳）- ${user.email}`;\r\n}\r\n\r\nconst user = createUser(\"山田太郎\", 25, \"yamada@example.com\");\r\nconsole.log(user);\r\nconsole.log(formatUserInfo(user));\r\n```\r\n\r\n### 3. 非同期処理\r\n\r\n```javascript\r\n// Promise を使用した非同期関数\r\nasync function fetchUserData(userId) {\r\n  try {\r\n    const response = await fetch(`https://api.example.com/users/${userId}`);\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"エラーが発生しました:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// タイマー関数\r\nfunction delay(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n// 使用例\r\nasync function main() {\r\n  console.log(\"処理開始\");\r\n  await delay(1000);\r\n  console.log(\"1秒経過\");\r\n  await delay(1000);\r\n  console.log(\"2秒経過\");\r\n}\r\n```\r\n\r\n## 関数の設計のベストプラクティス\r\n\r\n### 1. 単一責任の原則\r\n\r\n関数は1つのことだけを行うようにしましょう。\r\n\r\n```javascript\r\n// 悪い例：複数の責任を持つ関数\r\nfunction processUserData(user) {\r\n  validateUser(user);\r\n  saveToDatabase(user);\r\n  sendEmail(user);\r\n}\r\n\r\n// 良い例：責任を分割した関数\r\nfunction validateUser(user) {\r\n  // ユーザーデータの検証のみを行う\r\n}\r\n\r\nfunction saveUser(user) {\r\n  // データベースへの保存のみを行う\r\n}\r\n\r\nfunction notifyUser(user) {\r\n  // メール送信のみを行う\r\n}\r\n```\r\n\r\n### 2. 適切な命名\r\n\r\n関数名は、その機能を明確に表すものにしましょう。\r\n\r\n```javascript\r\n// 悪い例\r\nfunction process(data) {\r\n  // 何を処理するのかわからない\r\n}\r\n\r\n// 良い例\r\nfunction calculateTotalPrice(items) {\r\n  return items.reduce((total, item) => total + item.price, 0);\r\n}\r\n```\r\n\r\n### 3. エラーハンドリング\r\n\r\n関数は適切にエラーを処理する必要があります。\r\n\r\n```javascript\r\nfunction divideNumbers(a, b) {\r\n  // パラメータの検証\r\n  if (typeof a !== 'number' || typeof b !== 'number') {\r\n    throw new Error('引数は数値である必要があります');\r\n  }\r\n\r\n  // ゼロ除算の防止\r\n  if (b === 0) {\r\n    throw new Error('0で除算することはできません');\r\n  }\r\n\r\n  return a / b;\r\n}\r\n\r\n// 使用例\r\ntry {\r\n  console.log(divideNumbers(10, 2));  // 5\r\n  console.log(divideNumbers(10, 0));  // エラーが発生\r\n} catch (error) {\r\n  console.error('エラーが発生しました:', error.message);\r\n}\r\n```\r\n\r\n## デバッグとテスト\r\n\r\n### コンソールログを使ったデバッグ\r\n\r\n```javascript\r\nfunction calculateDiscount(price, quantity) {\r\n  console.log('入力値:', { price, quantity });\r\n\r\n  let discount = 0;\r\n  if (quantity >= 10) {\r\n    discount = 0.1;\r\n  } else if (quantity >= 5) {\r\n    discount = 0.05;\r\n  }\r\n  console.log('適用される割引率:', discount);\r\n\r\n  const total = price * quantity * (1 - discount);\r\n  console.log('計算結果:', total);\r\n\r\n  return total;\r\n}\r\n```\r\n\r\n### 単体テストの例\r\n\r\n```javascript\r\n// テスト関数\r\nfunction testCalculateDiscount() {\r\n  // テストケース1: 通常価格\r\n  console.assert(\r\n    calculateDiscount(100, 1) === 100,\r\n    '単品購入のテストが失敗しました'\r\n  );\r\n\r\n  // テストケース2: 5個以上で5%割引\r\n  console.assert(\r\n    calculateDiscount(100, 5) === 475,\r\n    '5個購入の割引テストが失敗しました'\r\n  );\r\n\r\n  // テストケース3: 10個以上で10%割引\r\n  console.assert(\r\n    calculateDiscount(100, 10) === 900,\r\n    '10個購入の割引テストが失敗しました'\r\n  );\r\n\r\n  console.log('すべてのテストが成功しました！');\r\n}\r\n```\r\n\r\n## まとめ\r\n\r\n関数は、プログラミングの基本的かつ重要な要素です。以下のポイントを押さえておきましょう：\r\n\r\n1. **基本構造を理解する**\r\n   - 関数の宣言方法\r\n   - パラメータと戻り値の使い方\r\n   - スコープの概念\r\n\r\n2. **適切な設計を心がける**\r\n   - 単一責任の原則\r\n   - 明確な命名\r\n   - エラーハンドリング\r\n\r\n3. **実践的な使い方を学ぶ**\r\n   - 配列やオブジェクトの操作\r\n   - 非同期処理\r\n   - デバッグとテスト\r\n\r\n関数の基本を理解し、適切に使用することで、より保守性が高く、再利用可能なコードを書くことができます。\r\n\r\n## 次のステップ\r\n\r\n関数の基本を理解したら、以下の記事も参考にしてください：\r\n\r\n- [変数・データ型・関数とは？初心者向けに超わかりやすく解説](/blog/programming-basics-for-beginners/)\r\n- [プログラミング初心者が最初に学ぶべき5つの概念](/blog/programming-concepts-for-beginners/)\r\n- [【図解】アルゴリズムとは？初心者が知るべき基本概念](/blog/algorithm-basics-explained/)","src/content/blog/function-basics-guide.md","32215e99db68c042",{"html":1487,"metadata":1488},"\u003Ch1 id=\"基礎から学ぶ関数の作り方と使い方を徹底解説\">【基礎から学ぶ】関数の作り方と使い方を徹底解説\u003C/h1>\n\u003Cp>プログラミングにおいて、関数は最も重要な基本要素の1つです。コードの再利用性を高め、プログラムを整理するために不可欠な存在です。この記事では、関数の基本的な概念から実践的な使い方まで、初心者にもわかりやすく解説します。\u003C/p>\n\u003Ch2 id=\"関数とは\">関数とは？\u003C/h2>\n\u003Cp>関数は、特定の処理をまとめた「部品」のようなものです。一度作った関数は、必要なときに何度でも使うことができます。\u003C/p>\n\u003Ch3 id=\"関数を使うメリット\">関数を使うメリット\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>コードの再利用\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>同じ処理を何度も書く必要がない\u003C/li>\n\u003Cli>変更が必要な場合も1箇所を修正するだけでよい\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>プログラムの整理\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>処理をわかりやすい単位に分割できる\u003C/li>\n\u003Cli>コードの見通しが良くなる\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>保守性の向上\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>バグの修正が容易になる\u003C/li>\n\u003Cli>機能の追加や変更がしやすくなる\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"関数の基本構造\">関数の基本構造\u003C/h2>\n\u003Cp>JavaScriptを例に、関数の基本的な構造を見ていきましょう。\u003C/p>\n\u003Ch3 id=\"関数の宣言\">関数の宣言\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 基本的な関数の形\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">こんにちは、\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\"> +\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">さん！\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 関数の使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(message);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"こんにちは、田中さん！\"\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>関数の構成要素：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>function\u003C/code>: 関数を定義するキーワード\u003C/li>\n\u003Cli>\u003Ccode>greet\u003C/code>: 関数名\u003C/li>\n\u003Cli>\u003Ccode>(name)\u003C/code>: パラメータ（引数）\u003C/li>\n\u003Cli>\u003Ccode>return\u003C/code>: 戻り値を指定するキーワード\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"関数の種類\">関数の種類\u003C/h2>\n\u003Cp>JavaScriptには、関数を定義する複数の方法があります。\u003C/p>\n\u003Ch3 id=\"1-関数宣言\">1. 関数宣言\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 関数宣言\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> add\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">add\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 8\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-関数式\">2. 関数式\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 関数式\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#50FA7B\"> multiply\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">multiply\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 8\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-アロー関数式\">3. アロー関数式\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// アロー関数式（ES6以降）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#50FA7B\"> divide\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 1行で書ける場合は更にシンプルに\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#50FA7B\"> subtract\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">divide\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));    \u003C/span>\u003Cspan style=\"color:#6272A4\">// 5\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">subtract\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 7\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"パラメータと戻り値\">パラメータと戻り値\u003C/h2>\n\u003Ch3 id=\"パラメータの使い方\">パラメータの使い方\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 基本的なパラメータ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">firstName\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">lastName\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `こんにちは、\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">lastName\u003C/span>\u003Cspan style=\"color:#FF79C6\">}${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">firstName\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">さん！`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// デフォルト値の設定\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greetWithTitle\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">title\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">さん\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `こんにちは、\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">title\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">！`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 可変長引数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> sum\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FF79C6\">...\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">numbers\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers.\u003C/span>\u003Cspan style=\"color:#50FA7B\">reduce\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">total\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">num\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));        \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"こんにちは、山田太郎さん！\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">greetWithTitle\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));       \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"こんにちは、田中さん！\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">greetWithTitle\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山本\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">先生\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)); \u003C/span>\u003Cspan style=\"color:#6272A4\">// \"こんにちは、山本先生！\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">sum\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));          \u003C/span>\u003Cspan style=\"color:#6272A4\">// 15\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"戻り値の使い方\">戻り値の使い方\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 単一の値を返す\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> square\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">n\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> n \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> n;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 複数の値を返す（オブジェクトとして）\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> getPersonInfo\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">age\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    name\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    age\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    isAdult\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 配列を返す\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> splitName\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">fullName\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> fullName.\u003C/span>\u003Cspan style=\"color:#50FA7B\">split\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">square\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));                    \u003C/span>\u003Cspan style=\"color:#6272A4\">// 25\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">getPersonInfo\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// { name: \"山田太郎\", age: 25, isAdult: true }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">splitName\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田 太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));        \u003C/span>\u003Cspan style=\"color:#6272A4\">// [\"山田\", \"太郎\"]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"スコープと変数の有効範囲\">スコープと変数の有効範囲\u003C/h2>\n\u003Cp>関数内で宣言された変数は、その関数の外からアクセスできません。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> subtotal \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// この変数は関数の中でのみ有効\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> tax \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> subtotal \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> subtotal \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> tax;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">());  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 1100\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// console.log(subtotal);      // エラー：subtotalは定義されていない\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"グローバル変数とローカル変数\">グローバル変数とローカル変数\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> globalVar \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">グローバル変数\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// グローバルスコープ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> showScope\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> localVar \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ローカル変数\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;   \u003C/span>\u003Cspan style=\"color:#6272A4\">// 関数スコープ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(globalVar);        \u003C/span>\u003Cspan style=\"color:#6272A4\">// グローバル変数にアクセス可能\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(localVar);         \u003C/span>\u003Cspan style=\"color:#6272A4\">// ローカル変数にアクセス可能\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">showScope\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(globalVar);          \u003C/span>\u003Cspan style=\"color:#6272A4\">// グローバル変数にアクセス可能\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// console.log(localVar);        // エラー：ローカル変数にはアクセス不可\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"実践的な関数の例\">実践的な関数の例\u003C/h2>\n\u003Ch3 id=\"1-配列の操作\">1. 配列の操作\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 配列の要素を2倍にする関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> doubleArray\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">arr\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> arr.\u003C/span>\u003Cspan style=\"color:#50FA7B\">map\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">num\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 配列の合計を計算する関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateSum\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">arr\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> arr.\u003C/span>\u003Cspan style=\"color:#50FA7B\">reduce\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">sum\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">num\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 特定の条件で配列をフィルタリングする関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> filterEvenNumbers\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">arr\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> arr.\u003C/span>\u003Cspan style=\"color:#50FA7B\">filter\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">num\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num \u003C/span>\u003Cspan style=\"color:#FF79C6\">%\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">4\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">doubleArray\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(numbers));       \u003C/span>\u003Cspan style=\"color:#6272A4\">// [2, 4, 6, 8, 10]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">calculateSum\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(numbers));      \u003C/span>\u003Cspan style=\"color:#6272A4\">// 15\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">filterEvenNumbers\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(numbers)); \u003C/span>\u003Cspan style=\"color:#6272A4\">// [2, 4]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-オブジェクトの操作\">2. オブジェクトの操作\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ユーザーオブジェクトを作成する関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> createUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">age\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">email\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    name,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    age,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    email,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    createdAt\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Date\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    isAdult\u003C/span>\u003Cspan style=\"color:#FF79C6\">:\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 20\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// ユーザー情報をフォーマットする関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> formatUserInfo\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">user\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">user.name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">（\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">user.age\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">歳）- \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">user.email\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> user \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> createUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">yamada@example.com\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">formatUserInfo\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user));\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-非同期処理\">3. 非同期処理\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// Promise を使用した非同期関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetchUserData\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">userId\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  try\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> fetch\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`https://api.example.com/users/\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">userId\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> data \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#FF79C6\"> await\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> response.\u003C/span>\u003Cspan style=\"color:#50FA7B\">json\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> data;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">エラーが発生しました:\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, error);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> null\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// タイマー関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> delay\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">ms\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> Promise\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">resolve\u003C/span>\u003Cspan style=\"color:#FF79C6\"> =>\u003C/span>\u003Cspan style=\"color:#50FA7B\"> setTimeout\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(resolve, ms));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 使用例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">async\u003C/span>\u003Cspan style=\"color:#FF79C6\"> function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> main\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">処理開始\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> delay\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">1000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">1秒経過\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  await\u003C/span>\u003Cspan style=\"color:#50FA7B\"> delay\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">1000\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">2秒経過\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"関数の設計のベストプラクティス\">関数の設計のベストプラクティス\u003C/h2>\n\u003Ch3 id=\"1-単一責任の原則\">1. 単一責任の原則\u003C/h3>\n\u003Cp>関数は1つのことだけを行うようにしましょう。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例：複数の責任を持つ関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> processUserData\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">user\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  validateUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  saveToDatabase\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">  sendEmail\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(user);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例：責任を分割した関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> validateUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">user\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ユーザーデータの検証のみを行う\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> saveUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">user\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // データベースへの保存のみを行う\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> notifyUser\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">user\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // メール送信のみを行う\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-適切な命名\">2. 適切な命名\u003C/h3>\n\u003Cp>関数名は、その機能を明確に表すものにしましょう。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> process\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">data\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // 何を処理するのかわからない\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotalPrice\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">items\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> items.\u003C/span>\u003Cspan style=\"color:#50FA7B\">reduce\u003C/span>\u003Cspan style=\"color:#F8F8F2\">((\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">total\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">item\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">=>\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> item.price, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-エラーハンドリング\">3. エラーハンドリング\u003C/h3>\n\u003Cp>関数は適切にエラーを処理する必要があります。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> divideNumbers\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // パラメータの検証\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">typeof\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">number\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#FF79C6\"> ||\u003C/span>\u003Cspan style=\"color:#FF79C6\"> typeof\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b \u003C/span>\u003Cspan style=\"color:#FF79C6\">!==\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">number\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    throw\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">引数は数値である必要があります\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // ゼロ除算の防止\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (b \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    throw\u003C/span>\u003Cspan style=\"color:#FF79C6;font-weight:bold\"> new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">0で除算することはできません\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 使用例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">try\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">divideNumbers\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 5\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#50FA7B\">divideNumbers\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">));  \u003C/span>\u003Cspan style=\"color:#6272A4\">// エラーが発生\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">catch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (error) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">エラーが発生しました:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, error.message);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"デバッグとテスト\">デバッグとテスト\u003C/h2>\n\u003Ch3 id=\"コンソールログを使ったデバッグ\">コンソールログを使ったデバッグ\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateDiscount\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">price\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">quantity\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">入力値:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, { price, quantity });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (quantity \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  } \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (quantity \u003C/span>\u003Cspan style=\"color:#FF79C6\">>=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    discount \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0.05\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">適用される割引率:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, discount);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  const\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> price \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> quantity \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#FF79C6\"> -\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> discount);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">計算結果:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, total);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">  return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"単体テストの例\">単体テストの例\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// テスト関数\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> testCalculateDiscount\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // テストケース1: 通常価格\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">assert\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    calculateDiscount\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">単品購入のテストが失敗しました\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  );\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // テストケース2: 5個以上で5%割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">assert\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    calculateDiscount\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 475\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">5個購入の割引テストが失敗しました\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  );\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">  // テストケース3: 10個以上で10%割引\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">assert\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    calculateDiscount\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">100\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 900\u003C/span>\u003Cspan style=\"color:#F8F8F2\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E9F284\">    '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">10個購入の割引テストが失敗しました\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  );\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">  console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">すべてのテストが成功しました！\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>関数は、プログラミングの基本的かつ重要な要素です。以下のポイントを押さえておきましょう：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>基本構造を理解する\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>関数の宣言方法\u003C/li>\n\u003Cli>パラメータと戻り値の使い方\u003C/li>\n\u003Cli>スコープの概念\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>適切な設計を心がける\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>単一責任の原則\u003C/li>\n\u003Cli>明確な命名\u003C/li>\n\u003Cli>エラーハンドリング\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>実践的な使い方を学ぶ\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>配列やオブジェクトの操作\u003C/li>\n\u003Cli>非同期処理\u003C/li>\n\u003Cli>デバッグとテスト\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>関数の基本を理解し、適切に使用することで、より保守性が高く、再利用可能なコードを書くことができます。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>関数の基本を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/blog/programming-basics-for-beginners/\">変数・データ型・関数とは？初心者向けに超わかりやすく解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/blog/algorithm-basics-explained/\">【図解】アルゴリズムとは？初心者が知るべき基本概念\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":1489,"imagePaths":1545,"frontmatter":1546},[1490,1492,1493,1495,1496,1498,1499,1502,1505,1508,1510,1512,1514,1516,1518,1520,1523,1526,1529,1531,1534,1537,1538,1540,1541,1543,1544],{"depth":26,"slug":1491,"text":1480},"基礎から学ぶ関数の作り方と使い方を徹底解説",{"depth":29,"slug":635,"text":636},{"depth":33,"slug":1494,"text":1494},"関数を使うメリット",{"depth":29,"slug":638,"text":638},{"depth":33,"slug":1497,"text":1497},"関数の宣言",{"depth":29,"slug":640,"text":640},{"depth":33,"slug":1500,"text":1501},"1-関数宣言","1. 関数宣言",{"depth":33,"slug":1503,"text":1504},"2-関数式","2. 関数式",{"depth":33,"slug":1506,"text":1507},"3-アロー関数式","3. アロー関数式",{"depth":29,"slug":1509,"text":1509},"パラメータと戻り値",{"depth":33,"slug":1511,"text":1511},"パラメータの使い方",{"depth":33,"slug":1513,"text":1513},"戻り値の使い方",{"depth":29,"slug":1515,"text":1515},"スコープと変数の有効範囲",{"depth":33,"slug":1517,"text":1517},"グローバル変数とローカル変数",{"depth":29,"slug":1519,"text":1519},"実践的な関数の例",{"depth":33,"slug":1521,"text":1522},"1-配列の操作","1. 配列の操作",{"depth":33,"slug":1524,"text":1525},"2-オブジェクトの操作","2. オブジェクトの操作",{"depth":33,"slug":1527,"text":1528},"3-非同期処理","3. 非同期処理",{"depth":29,"slug":1530,"text":1530},"関数の設計のベストプラクティス",{"depth":33,"slug":1532,"text":1533},"1-単一責任の原則","1. 単一責任の原則",{"depth":33,"slug":1535,"text":1536},"2-適切な命名","2. 適切な命名",{"depth":33,"slug":922,"text":923},{"depth":29,"slug":1539,"text":1539},"デバッグとテスト",{"depth":33,"slug":589,"text":589},{"depth":33,"slug":1542,"text":1542},"単体テストの例",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":1480,"description":1481,"pubDate":1547,"heroImage":514},"Mar 10 2025","programming-basics",{"id":1548,"data":1550,"body":1554,"filePath":1555,"digest":1556,"rendered":1557},{"title":1551,"description":1552,"pubDate":1553,"heroImage":155},"【プログラミングとは？初心者が知っておくべき基礎知識】","プログラミングの基本概念から学習方法まで、初心者が知っておくべき基礎知識をわかりやすく解説します。",["Date","2025-02-26T15:00:00.000Z"],"# 【プログラミングとは？初心者が知っておくべき基礎知識】\r\n\r\nプログラミングを始めようと考えている方に向けて、プログラミングの基本的な概念から学習方法まで、初心者が知っておくべき基礎知識をわかりやすく解説します。\r\n\r\n## プログラミングとは？\r\n\r\nプログラミングとは、コンピュータに対して「何をするべきか」を指示する手順を書くことです。私たちが日常的に使用しているスマートフォンのアプリや、ウェブサイト、ゲームなど、すべてはプログラミングによって作られています。\r\n\r\n### プログラミングの基本的な流れ\r\n\r\n1. **問題の理解**\r\n   - 何を作りたいのか\r\n   - どのような機能が必要か\r\n   - 誰が使うのか\r\n\r\n2. **設計**\r\n   - 機能の詳細を決める\r\n   - データの構造を考える\r\n   - 画面のレイアウトを設計する\r\n\r\n3. **コーディング**\r\n   - プログラミング言語を使って実装\r\n   - テストと修正\r\n   - 完成と公開\r\n\r\n## プログラミング言語とは？\r\n\r\nプログラミング言語は、コンピュータに指示を出すための「言語」です。主な言語には以下のようなものがあります：\r\n\r\n### 1. Python\r\n- 初心者に優しい\r\n- 読みやすい文法\r\n- 機械学習やデータ分析に強い\r\n\r\n```python\r\n# Pythonの例：簡単な挨拶プログラム\r\ndef greet(name):\r\n    return f\"こんにちは、{name}さん！\"\r\n\r\nprint(greet(\"太郎\"))  # 出力: こんにちは、太郎さん！\r\n```\r\n\r\n### 2. JavaScript\r\n- Webブラウザで動作\r\n- フロントエンド開発の標準\r\n- 多様な用途に対応\r\n\r\n```javascript\r\n// JavaScriptの例：ボタンクリックの処理\r\nfunction handleClick() {\r\n    alert('ボタンがクリックされました！');\r\n}\r\n\r\ndocument.getElementById('myButton').addEventListener('click', handleClick);\r\n```\r\n\r\n### 3. Java\r\n- 企業システムでよく使用\r\n- 安定性が高い\r\n- オブジェクト指向の代表格\r\n\r\n```java\r\n// Javaの例：簡単な計算クラス\r\npublic class Calculator {\r\n    public int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n}\r\n```\r\n\r\n## プログラミングの基本概念\r\n\r\n### 1. 変数とデータ型\r\n\r\n変数は、データを一時的に保存する「箱」のようなものです。\r\n\r\n```javascript\r\n// 数値型\r\nlet age = 25;\r\n\r\n// 文字列型\r\nlet name = \"田中太郎\";\r\n\r\n// 真偽値型\r\nlet isStudent = true;\r\n\r\n// 配列\r\nlet fruits = [\"りんご\", \"バナナ\", \"オレンジ\"];\r\n```\r\n\r\n### 2. 条件分岐\r\n\r\n条件に応じて処理を変えることができます。\r\n\r\n```javascript\r\nlet time = 14;\r\n\r\nif (time \u003C 12) {\r\n    console.log(\"おはようございます\");\r\n} else if (time \u003C 18) {\r\n    console.log(\"こんにちは\");\r\n} else {\r\n    console.log(\"こんばんは\");\r\n}\r\n```\r\n\r\n### 3. 繰り返し処理\r\n\r\n同じ処理を複数回実行する場合に使用します。\r\n\r\n```javascript\r\n// for文の例\r\nfor (let i = 1; i \u003C= 5; i++) {\r\n    console.log(`${i}回目の処理`);\r\n}\r\n\r\n// while文の例\r\nlet count = 0;\r\nwhile (count \u003C 3) {\r\n    console.log(`カウント: ${count}`);\r\n    count++;\r\n}\r\n```\r\n\r\n### 4. 関数\r\n\r\n特定の処理をまとめて、名前をつけて再利用できるようにします。\r\n\r\n```javascript\r\nfunction calculateArea(width, height) {\r\n    return width * height;\r\n}\r\n\r\nlet area = calculateArea(5, 3);  // 15\r\n```\r\n\r\n## プログラミングを学ぶ方法\r\n\r\n### 1. オンライン学習プラットフォーム\r\n\r\n- **Progate**\r\n  - 初心者向け\r\n  - インタラクティブな学習\r\n  - 日本語対応\r\n\r\n- **freeCodeCamp**\r\n  - 無料で学習可能\r\n  - 実践的なプロジェクト\r\n  - 大規模なコミュニティ\r\n\r\n- **Udemy**\r\n  - 幅広いコース\r\n  - 動画形式の学習\r\n  - 実践的な内容\r\n\r\n### 2. プログラミングスクール\r\n\r\n- **対面式スクール**\r\n  - 直接質問できる\r\n  - 仲間と学べる\r\n  - 就職支援あり\r\n\r\n- **オンラインスクール**\r\n  - 場所を選ばない\r\n  - 自分のペースで学習\r\n  - リモートでのサポート\r\n\r\n### 3. 独学での学習\r\n\r\n- **技術書を読む**\r\n  - 体系的な知識を得られる\r\n  - 自分のペースで進められる\r\n  - 参考資料として活用\r\n\r\n- **プロジェクトベースの学習**\r\n  - 実際に作りながら学ぶ\r\n  - 具体的な目標がある\r\n  - 実践的なスキルが身につく\r\n\r\n## プログラミング学習のコツ\r\n\r\n### 1. 小さく始める\r\n\r\n- 簡単なプログラムから始める\r\n- 基礎をしっかり理解する\r\n- 徐々に難しいことに挑戦\r\n\r\n### 2. 継続的な学習\r\n\r\n- 毎日少しずつでも学習する\r\n- 定期的に復習する\r\n- 学習記録をつける\r\n\r\n### 3. 実践を重視\r\n\r\n- サンプルコードを書き写す\r\n- 自分でカスタマイズしてみる\r\n- オリジナルのプロジェクトを作る\r\n\r\n### 4. コミュニティへの参加\r\n\r\n- 技術イベントへの参加\r\n- オンラインフォーラムの活用\r\n- 他の学習者との交流\r\n\r\n## よくある質問と回答\r\n\r\n### Q1: プログラミングには数学の知識が必要？\r\n\r\nA: 基本的なプログラミングには高度な数学は必要ありません。ただし、以下の分野では数学的知識が役立ちます：\r\n\r\n- 機械学習・AI開発\r\n- 3Dグラフィックス\r\n- アルゴリズムの最適化\r\n\r\n### Q2: どの言語から始めるべき？\r\n\r\nA: 目的に応じて選択することをおすすめします：\r\n\r\n- Web開発 → HTML/CSS/JavaScript\r\n- アプリ開発 → Python, Swift\r\n- システム開発 → Java, C#\r\n\r\n### Q3: プログラミングの学習にはどのくらい時間がかかる？\r\n\r\nA: 人によって異なりますが、基本的な目安は：\r\n\r\n- 基礎的な理解：1-2ヶ月\r\n- 簡単なアプリ作成：3-6ヶ月\r\n- 実務レベル：6ヶ月-1年\r\n\r\n## プログラミングを始める前の準備\r\n\r\n### 1. 開発環境の準備\r\n\r\n- **テキストエディタ**\r\n  - Visual Studio Code\r\n  - Sublime Text\r\n  - Atom\r\n\r\n- **統合開発環境（IDE）**\r\n  - IntelliJ IDEA\r\n  - Eclipse\r\n  - PyCharm\r\n\r\n### 2. バージョン管理の理解\r\n\r\n- **Git**の基本操作\r\n  - コミット\r\n  - プッシュ\r\n  - プル\r\n\r\n### 3. 基本的なツールの使用\r\n\r\n- **コマンドライン**\r\n  - 基本的なコマンド\r\n  - ファイル操作\r\n  - プログラムの実行\r\n\r\n## プログラミング学習のロードマップ\r\n\r\n### 1. 基礎段階（1-2ヶ月）\r\n\r\n- プログラミングの基本概念\r\n- 開発環境のセットアップ\r\n- 基本的な文法の理解\r\n\r\n### 2. 応用段階（2-4ヶ月）\r\n\r\n- フレームワークの学習\r\n- データベースの基礎\r\n- 簡単なプロジェクト作成\r\n\r\n### 3. 実践段階（4-6ヶ月）\r\n\r\n- 本格的なプロジェクト開発\r\n- チーム開発の経験\r\n- コードレビューの実践\r\n\r\n## まとめ\r\n\r\nプログラミングは、以下のポイントを押さえることで効果的に学習できます：\r\n\r\n1. **基礎を大切に**\r\n   - 基本概念の理解\r\n   - 実践的な経験\r\n   - 継続的な学習\r\n\r\n2. **目的を持って学ぶ**\r\n   - 具体的な目標設定\r\n   - 適切な言語選択\r\n   - 実践的なプロジェクト\r\n\r\n3. **コミュニティを活用**\r\n   - 質問と回答\r\n   - 知識の共有\r\n   - モチベーションの維持\r\n\r\nプログラミングは最初は難しく感じるかもしれませんが、一歩ずつ着実に進めることで、必ず上達していきます。この記事で紹介した基礎知識を参考に、プログラミング学習を始めてみましょう。\r\n\r\n## 次のステップ\r\n\r\nプログラミングの基礎を理解したら、以下の記事も参考にしてください：\r\n\r\n- [【2025年版】プログラミングを始めるための環境構築ガイド](/tech-blog/blog/programming-environment-setup-2025/)\r\n- [【初心者向け】VSCodeの基本設定と便利な拡張機能10選](/tech-blog/blog/vscode-setup-guide/)\r\n- [プログラミング初心者が最初に学ぶべき5つの概念](/tech-blog/blog/programming-concepts-for-beginners/)","src/content/blog/programming-basics.md","7d493ea451662661",{"html":1558,"metadata":1559},"\u003Ch1 id=\"プログラミングとは初心者が知っておくべき基礎知識\">【プログラミングとは？初心者が知っておくべき基礎知識】\u003C/h1>\n\u003Cp>プログラミングを始めようと考えている方に向けて、プログラミングの基本的な概念から学習方法まで、初心者が知っておくべき基礎知識をわかりやすく解説します。\u003C/p>\n\u003Ch2 id=\"プログラミングとは\">プログラミングとは？\u003C/h2>\n\u003Cp>プログラミングとは、コンピュータに対して「何をするべきか」を指示する手順を書くことです。私たちが日常的に使用しているスマートフォンのアプリや、ウェブサイト、ゲームなど、すべてはプログラミングによって作られています。\u003C/p>\n\u003Ch3 id=\"プログラミングの基本的な流れ\">プログラミングの基本的な流れ\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>問題の理解\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>何を作りたいのか\u003C/li>\n\u003Cli>どのような機能が必要か\u003C/li>\n\u003Cli>誰が使うのか\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>設計\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>機能の詳細を決める\u003C/li>\n\u003Cli>データの構造を考える\u003C/li>\n\u003Cli>画面のレイアウトを設計する\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>コーディング\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>プログラミング言語を使って実装\u003C/li>\n\u003Cli>テストと修正\u003C/li>\n\u003Cli>完成と公開\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"プログラミング言語とは\">プログラミング言語とは？\u003C/h2>\n\u003Cp>プログラミング言語は、コンピュータに指示を出すための「言語」です。主な言語には以下のようなものがあります：\u003C/p>\n\u003Ch3 id=\"1-python\">1. Python\u003C/h3>\n\u003Cul>\n\u003Cli>初心者に優しい\u003C/li>\n\u003Cli>読みやすい文法\u003C/li>\n\u003Cli>機械学習やデータ分析に強い\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># Pythonの例：簡単な挨拶プログラム\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">def\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">):\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#FF79C6\"> f\u003C/span>\u003Cspan style=\"color:#F1FA8C\">\"こんにちは、\u003C/span>\u003Cspan style=\"color:#BD93F9\">{\u003C/span>\u003Cspan style=\"color:#F8F8F2\">name\u003C/span>\u003Cspan style=\"color:#BD93F9\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">さん！\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(greet(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">))  \u003C/span>\u003Cspan style=\"color:#6272A4\"># 出力: こんにちは、太郎さん！\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-javascript\">2. JavaScript\u003C/h3>\n\u003Cul>\n\u003Cli>Webブラウザで動作\u003C/li>\n\u003Cli>フロントエンド開発の標準\u003C/li>\n\u003Cli>多様な用途に対応\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// JavaScriptの例：ボタンクリックの処理\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> handleClick\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#50FA7B\">    alert\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ボタンがクリックされました！\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">document.\u003C/span>\u003Cspan style=\"color:#50FA7B\">getElementById\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">myButton\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">).\u003C/span>\u003Cspan style=\"color:#50FA7B\">addEventListener\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">click\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, handleClick);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-java\">3. Java\u003C/h3>\n\u003Cul>\n\u003Cli>企業システムでよく使用\u003C/li>\n\u003Cli>安定性が高い\u003C/li>\n\u003Cli>オブジェクト指向の代表格\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"java\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// Javaの例：簡単な計算クラス\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">public\u003C/span>\u003Cspan style=\"color:#FF79C6\"> class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> Calculator\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    public\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\"> int\u003C/span>\u003Cspan style=\"color:#50FA7B\"> add\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">int\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#8BE9FD;font-style:italic\">int\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\"> b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"プログラミングの基本概念\">プログラミングの基本概念\u003C/h2>\n\u003Ch3 id=\"1-変数とデータ型\">1. 変数とデータ型\u003C/h3>\n\u003Cp>変数は、データを一時的に保存する「箱」のようなものです。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 数値型\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 文字列型\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中太郎\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 真偽値型\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> isStudent \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> true\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 配列\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> fruits \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">りんご\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">バナナ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">オレンジ\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-条件分岐\">2. 条件分岐\u003C/h3>\n\u003Cp>条件に応じて処理を変えることができます。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> time \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 14\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (time \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 12\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">おはようございます\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#FF79C6\"> if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (time \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 18\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">こんにちは\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">} \u003C/span>\u003Cspan style=\"color:#FF79C6\">else\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">こんばんは\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-繰り返し処理\">3. 繰り返し処理\u003C/h3>\n\u003Cp>同じ処理を複数回実行する場合に使用します。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// for文の例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 1\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">i\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">回目の処理`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// while文の例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> count \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">while\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (count \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`カウント: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">count\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    count\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"4-関数\">4. 関数\u003C/h3>\n\u003Cp>特定の処理をまとめて、名前をつけて再利用できるようにします。\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateArea\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">width\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">height\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> width \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> height;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> area \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateArea\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#BD93F9\">5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">3\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 15\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"プログラミングを学ぶ方法\">プログラミングを学ぶ方法\u003C/h2>\n\u003Ch3 id=\"1-オンライン学習プラットフォーム\">1. オンライン学習プラットフォーム\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>Progate\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>初心者向け\u003C/li>\n\u003Cli>インタラクティブな学習\u003C/li>\n\u003Cli>日本語対応\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>freeCodeCamp\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>無料で学習可能\u003C/li>\n\u003Cli>実践的なプロジェクト\u003C/li>\n\u003Cli>大規模なコミュニティ\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Udemy\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>幅広いコース\u003C/li>\n\u003Cli>動画形式の学習\u003C/li>\n\u003Cli>実践的な内容\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-プログラミングスクール\">2. プログラミングスクール\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>対面式スクール\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>直接質問できる\u003C/li>\n\u003Cli>仲間と学べる\u003C/li>\n\u003Cli>就職支援あり\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>オンラインスクール\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>場所を選ばない\u003C/li>\n\u003Cli>自分のペースで学習\u003C/li>\n\u003Cli>リモートでのサポート\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-独学での学習\">3. 独学での学習\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>技術書を読む\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>体系的な知識を得られる\u003C/li>\n\u003Cli>自分のペースで進められる\u003C/li>\n\u003Cli>参考資料として活用\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>プロジェクトベースの学習\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>実際に作りながら学ぶ\u003C/li>\n\u003Cli>具体的な目標がある\u003C/li>\n\u003Cli>実践的なスキルが身につく\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"プログラミング学習のコツ\">プログラミング学習のコツ\u003C/h2>\n\u003Ch3 id=\"1-小さく始める\">1. 小さく始める\u003C/h3>\n\u003Cul>\n\u003Cli>簡単なプログラムから始める\u003C/li>\n\u003Cli>基礎をしっかり理解する\u003C/li>\n\u003Cli>徐々に難しいことに挑戦\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-継続的な学習\">2. 継続的な学習\u003C/h3>\n\u003Cul>\n\u003Cli>毎日少しずつでも学習する\u003C/li>\n\u003Cli>定期的に復習する\u003C/li>\n\u003Cli>学習記録をつける\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-実践を重視\">3. 実践を重視\u003C/h3>\n\u003Cul>\n\u003Cli>サンプルコードを書き写す\u003C/li>\n\u003Cli>自分でカスタマイズしてみる\u003C/li>\n\u003Cli>オリジナルのプロジェクトを作る\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"4-コミュニティへの参加\">4. コミュニティへの参加\u003C/h3>\n\u003Cul>\n\u003Cli>技術イベントへの参加\u003C/li>\n\u003Cli>オンラインフォーラムの活用\u003C/li>\n\u003Cli>他の学習者との交流\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"よくある質問と回答\">よくある質問と回答\u003C/h2>\n\u003Ch3 id=\"q1-プログラミングには数学の知識が必要\">Q1: プログラミングには数学の知識が必要？\u003C/h3>\n\u003Cp>A: 基本的なプログラミングには高度な数学は必要ありません。ただし、以下の分野では数学的知識が役立ちます：\u003C/p>\n\u003Cul>\n\u003Cli>機械学習・AI開発\u003C/li>\n\u003Cli>3Dグラフィックス\u003C/li>\n\u003Cli>アルゴリズムの最適化\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"q2-どの言語から始めるべき\">Q2: どの言語から始めるべき？\u003C/h3>\n\u003Cp>A: 目的に応じて選択することをおすすめします：\u003C/p>\n\u003Cul>\n\u003Cli>Web開発 → HTML/CSS/JavaScript\u003C/li>\n\u003Cli>アプリ開発 → Python, Swift\u003C/li>\n\u003Cli>システム開発 → Java, C#\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"q3-プログラミングの学習にはどのくらい時間がかかる\">Q3: プログラミングの学習にはどのくらい時間がかかる？\u003C/h3>\n\u003Cp>A: 人によって異なりますが、基本的な目安は：\u003C/p>\n\u003Cul>\n\u003Cli>基礎的な理解：1-2ヶ月\u003C/li>\n\u003Cli>簡単なアプリ作成：3-6ヶ月\u003C/li>\n\u003Cli>実務レベル：6ヶ月-1年\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"プログラミングを始める前の準備\">プログラミングを始める前の準備\u003C/h2>\n\u003Ch3 id=\"1-開発環境の準備\">1. 開発環境の準備\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>テキストエディタ\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Visual Studio Code\u003C/li>\n\u003Cli>Sublime Text\u003C/li>\n\u003Cli>Atom\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>統合開発環境（IDE）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>IntelliJ IDEA\u003C/li>\n\u003Cli>Eclipse\u003C/li>\n\u003Cli>PyCharm\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-バージョン管理の理解\">2. バージョン管理の理解\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Git\u003C/strong>の基本操作\n\u003Cul>\n\u003Cli>コミット\u003C/li>\n\u003Cli>プッシュ\u003C/li>\n\u003Cli>プル\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-基本的なツールの使用\">3. 基本的なツールの使用\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>コマンドライン\u003C/strong>\n\u003Cul>\n\u003Cli>基本的なコマンド\u003C/li>\n\u003Cli>ファイル操作\u003C/li>\n\u003Cli>プログラムの実行\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"プログラミング学習のロードマップ\">プログラミング学習のロードマップ\u003C/h2>\n\u003Ch3 id=\"1-基礎段階1-2ヶ月\">1. 基礎段階（1-2ヶ月）\u003C/h3>\n\u003Cul>\n\u003Cli>プログラミングの基本概念\u003C/li>\n\u003Cli>開発環境のセットアップ\u003C/li>\n\u003Cli>基本的な文法の理解\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-応用段階2-4ヶ月\">2. 応用段階（2-4ヶ月）\u003C/h3>\n\u003Cul>\n\u003Cli>フレームワークの学習\u003C/li>\n\u003Cli>データベースの基礎\u003C/li>\n\u003Cli>簡単なプロジェクト作成\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-実践段階4-6ヶ月\">3. 実践段階（4-6ヶ月）\u003C/h3>\n\u003Cul>\n\u003Cli>本格的なプロジェクト開発\u003C/li>\n\u003Cli>チーム開発の経験\u003C/li>\n\u003Cli>コードレビューの実践\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>プログラミングは、以下のポイントを押さえることで効果的に学習できます：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>基礎を大切に\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>基本概念の理解\u003C/li>\n\u003Cli>実践的な経験\u003C/li>\n\u003Cli>継続的な学習\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>目的を持って学ぶ\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>具体的な目標設定\u003C/li>\n\u003Cli>適切な言語選択\u003C/li>\n\u003Cli>実践的なプロジェクト\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>コミュニティを活用\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>質問と回答\u003C/li>\n\u003Cli>知識の共有\u003C/li>\n\u003Cli>モチベーションの維持\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>プログラミングは最初は難しく感じるかもしれませんが、一歩ずつ着実に進めることで、必ず上達していきます。この記事で紹介した基礎知識を参考に、プログラミング学習を始めてみましょう。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>プログラミングの基礎を理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/programming-environment-setup-2025/\">【2025年版】プログラミングを始めるための環境構築ガイド\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/vscode-setup-guide/\">【初心者向け】VSCodeの基本設定と便利な拡張機能10選\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/programming-concepts-for-beginners/\">プログラミング初心者が最初に学ぶべき5つの概念\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":1560,"imagePaths":1654,"frontmatter":1655},[1561,1563,1566,1568,1571,1574,1577,1580,1582,1585,1588,1591,1594,1596,1599,1602,1605,1607,1610,1613,1616,1619,1621,1624,1627,1630,1632,1635,1638,1641,1643,1646,1649,1652,1653],{"depth":26,"slug":1562,"text":1551},"プログラミングとは初心者が知っておくべき基礎知識",{"depth":29,"slug":1564,"text":1565},"プログラミングとは","プログラミングとは？",{"depth":33,"slug":1567,"text":1567},"プログラミングの基本的な流れ",{"depth":29,"slug":1569,"text":1570},"プログラミング言語とは","プログラミング言語とは？",{"depth":33,"slug":1572,"text":1573},"1-python","1. Python",{"depth":33,"slug":1575,"text":1576},"2-javascript","2. JavaScript",{"depth":33,"slug":1578,"text":1579},"3-java","3. Java",{"depth":29,"slug":1581,"text":1581},"プログラミングの基本概念",{"depth":33,"slug":1583,"text":1584},"1-変数とデータ型","1. 変数とデータ型",{"depth":33,"slug":1586,"text":1587},"2-条件分岐","2. 条件分岐",{"depth":33,"slug":1589,"text":1590},"3-繰り返し処理","3. 繰り返し処理",{"depth":33,"slug":1592,"text":1593},"4-関数","4. 関数",{"depth":29,"slug":1595,"text":1595},"プログラミングを学ぶ方法",{"depth":33,"slug":1597,"text":1598},"1-オンライン学習プラットフォーム","1. オンライン学習プラットフォーム",{"depth":33,"slug":1600,"text":1601},"2-プログラミングスクール","2. プログラミングスクール",{"depth":33,"slug":1603,"text":1604},"3-独学での学習","3. 独学での学習",{"depth":29,"slug":1606,"text":1606},"プログラミング学習のコツ",{"depth":33,"slug":1608,"text":1609},"1-小さく始める","1. 小さく始める",{"depth":33,"slug":1611,"text":1612},"2-継続的な学習","2. 継続的な学習",{"depth":33,"slug":1614,"text":1615},"3-実践を重視","3. 実践を重視",{"depth":33,"slug":1617,"text":1618},"4-コミュニティへの参加","4. コミュニティへの参加",{"depth":29,"slug":1620,"text":1620},"よくある質問と回答",{"depth":33,"slug":1622,"text":1623},"q1-プログラミングには数学の知識が必要","Q1: プログラミングには数学の知識が必要？",{"depth":33,"slug":1625,"text":1626},"q2-どの言語から始めるべき","Q2: どの言語から始めるべき？",{"depth":33,"slug":1628,"text":1629},"q3-プログラミングの学習にはどのくらい時間がかかる","Q3: プログラミングの学習にはどのくらい時間がかかる？",{"depth":29,"slug":1631,"text":1631},"プログラミングを始める前の準備",{"depth":33,"slug":1633,"text":1634},"1-開発環境の準備","1. 開発環境の準備",{"depth":33,"slug":1636,"text":1637},"2-バージョン管理の理解","2. バージョン管理の理解",{"depth":33,"slug":1639,"text":1640},"3-基本的なツールの使用","3. 基本的なツールの使用",{"depth":29,"slug":1642,"text":1642},"プログラミング学習のロードマップ",{"depth":33,"slug":1644,"text":1645},"1-基礎段階1-2ヶ月","1. 基礎段階（1-2ヶ月）",{"depth":33,"slug":1647,"text":1648},"2-応用段階2-4ヶ月","2. 応用段階（2-4ヶ月）",{"depth":33,"slug":1650,"text":1651},"3-実践段階4-6ヶ月","3. 実践段階（4-6ヶ月）",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":1551,"description":1552,"pubDate":1656,"heroImage":155},"Feb 27 2025","how-programs-work",{"id":1657,"data":1659,"body":1663,"filePath":1664,"digest":1665,"rendered":1666},{"title":1660,"description":1661,"pubDate":1662,"heroImage":514},"【超入門】プログラムが動く仕組みを簡単解説！","コンピュータプログラムが動く仕組みを、初心者にもわかりやすく図解とたとえ話を交えて解説します。",["Date","2025-02-27T15:00:00.000Z"],"# 【超入門】プログラムが動く仕組みを簡単解説！\r\n\r\nプログラムがどのように動くのか、その仕組みを理解することは、プログラミングを学ぶ上で重要な第一歩です。この記事では、コンピュータプログラムの動作の仕組みを、できるだけわかりやすく解説します。\r\n\r\n## プログラムとは？\r\n\r\nプログラムは、コンピュータに対する「指示書」のようなものです。料理のレシピと同じように、「何を」「どのような順序で」実行するかを細かく指定します。\r\n\r\n### プログラムの3つの要素\r\n\r\n1. **入力（Input）**\r\n   - ユーザーからのデータ\r\n   - ファイルからの読み込み\r\n   - センサーからの情報\r\n\r\n2. **処理（Process）**\r\n   - データの計算\r\n   - 条件による分岐\r\n   - 繰り返し処理\r\n\r\n3. **出力（Output）**\r\n   - 画面への表示\r\n   - ファイルへの保存\r\n   - 他のシステムへの送信\r\n\r\n## プログラムが動く仕組み\r\n\r\n### 1. ソースコードからプログラムへ\r\n\r\nプログラムが実行されるまでの流れを、簡単な例で見てみましょう：\r\n\r\n```python\r\n# 簡単な計算プログラム\r\nnumber = 10\r\nresult = number * 2\r\nprint(result)  # 20が表示される\r\n```\r\n\r\nこのプログラムが動く仕組みは以下の通りです：\r\n\r\n1. **作成**: プログラマーがソースコードを書く\r\n2. **変換**: ソースコードがコンピュータが理解できる形に変換される\r\n3. **実行**: コンピュータがプログラムを実行する\r\n\r\n### 2. メモリとプログラムの関係\r\n\r\nプログラムは、メモリ（コンピュータの一時的な記憶領域）を使って動作します：\r\n\r\n```javascript\r\n// メモリの使用例\r\nlet name = \"田中\";  // メモリに\"田中\"を保存\r\nlet age = 25;      // メモリに25を保存\r\n\r\n// メモリの内容を使用\r\nconsole.log(`${name}さんは${age}歳です`);\r\n```\r\n\r\nメモリの使われ方をたとえると：\r\n- メモリは「付箋紙」のようなもの\r\n- 変数は「付箋紙に書かれた内容」\r\n- プログラムは「付箋紙の内容を読み書きする人」\r\n\r\n### 3. CPUとの関係\r\n\r\nCPUは、プログラムの指示を1つずつ実行する「作業者」のような存在です：\r\n\r\n1. **命令の読み込み**\r\n   - プログラムから次の命令を取得\r\n\r\n2. **命令の解釈**\r\n   - 何をすべきかを理解\r\n\r\n3. **命令の実行**\r\n   - 実際の処理を行う\r\n\r\n4. **結果の保存**\r\n   - 処理結果をメモリに保存\r\n\r\n## プログラムの実行過程\r\n\r\n### 1. コンパイル型言語の場合\r\n\r\nC++やJavaなどのコンパイル型言語の実行過程：\r\n\r\n```mermaid\r\ngraph LR\r\n    A[ソースコード] --> B[コンパイラ] --> C[実行可能ファイル] --> D[プログラム実行]\r\n```\r\n\r\n1. **ソースコード作成**\r\n   ```cpp\r\n   // C++の例\r\n   #include \u003Ciostream>\r\n   \r\n   int main() {\r\n       std::cout \u003C\u003C \"Hello, World!\" \u003C\u003C std::endl;\r\n       return 0;\r\n   }\r\n   ```\r\n\r\n2. **コンパイル**\r\n   - ソースコードを機械語に変換\r\n   - エラーチェック\r\n   - 最適化\r\n\r\n3. **実行**\r\n   - 変換された機械語を実行\r\n   - 高速な実行が可能\r\n\r\n### 2. インタープリタ型言語の場合\r\n\r\nPythonやJavaScriptなどのインタープリタ型言語の実行過程：\r\n\r\n```mermaid\r\ngraph LR\r\n    A[ソースコード] --> B[インタープリタ] --> C[プログラム実行]\r\n```\r\n\r\n1. **ソースコード作成**\r\n   ```python\r\n   # Pythonの例\r\n   print(\"Hello, World!\")\r\n   ```\r\n\r\n2. **インタープリタによる実行**\r\n   - コードを1行ずつ解釈\r\n   - 直接実行\r\n   - 柔軟な実行が可能\r\n\r\n## プログラムの実行例\r\n\r\n実際のプログラムがどのように動くのか、簡単な例で見てみましょう：\r\n\r\n### 1. 計算プログラム\r\n\r\n```javascript\r\n// 簡単な計算機プログラム\r\nfunction calculate(a, b, operation) {\r\n    let result;\r\n    \r\n    // 操作に応じて計算\r\n    switch (operation) {\r\n        case '+':\r\n            result = a + b;\r\n            break;\r\n        case '-':\r\n            result = a - b;\r\n            break;\r\n        case '*':\r\n            result = a * b;\r\n            break;\r\n        case '/':\r\n            result = a / b;\r\n            break;\r\n    }\r\n    \r\n    return result;\r\n}\r\n\r\n// プログラムの実行\r\nlet num1 = 10;\r\nlet num2 = 5;\r\nlet answer = calculate(num1, num2, '+');\r\nconsole.log(answer);  // 15が表示される\r\n```\r\n\r\nこのプログラムの実行過程：\r\n\r\n1. **変数の準備**\r\n   - `num1`に10を格納\r\n   - `num2`に5を格納\r\n\r\n2. **関数の呼び出し**\r\n   - `calculate`関数に値を渡す\r\n\r\n3. **計算の実行**\r\n   - 加算操作を実行\r\n\r\n4. **結果の表示**\r\n   - 計算結果を画面に表示\r\n\r\n### 2. データ処理プログラム\r\n\r\n```javascript\r\n// 学生データを処理するプログラム\r\nclass Student {\r\n    constructor(name, score) {\r\n        this.name = name;\r\n        this.score = score;\r\n    }\r\n}\r\n\r\n// 学生データの配列\r\nlet students = [\r\n    new Student(\"田中\", 85),\r\n    new Student(\"鈴木\", 92),\r\n    new Student(\"佐藤\", 78)\r\n];\r\n\r\n// 平均点を計算\r\nlet total = 0;\r\nfor (let student of students) {\r\n    total += student.score;\r\n}\r\n\r\nlet average = total / students.length;\r\nconsole.log(`クラスの平均点: ${average}`);\r\n```\r\n\r\nこのプログラムの実行過程：\r\n\r\n1. **データの準備**\r\n   - 学生オブジェクトの作成\r\n   - 配列への格納\r\n\r\n2. **ループ処理**\r\n   - 各学生のスコアを加算\r\n\r\n3. **計算処理**\r\n   - 平均値の計算\r\n\r\n4. **結果の出力**\r\n   - 平均点の表示\r\n\r\n## メモリの使われ方\r\n\r\nプログラムがメモリをどのように使用するか、具体例で見てみましょう：\r\n\r\n### 1. 変数のメモリ割り当て\r\n\r\n```javascript\r\nlet name = \"山田\";  // 文字列用のメモリ領域\r\nlet age = 30;      // 数値用のメモリ領域\r\nlet items = [];    // 配列用のメモリ領域\r\n\r\n// メモリ使用の変化\r\nitems.push(\"本\");   // 配列のメモリ領域が拡大\r\nitems.push(\"ペン\"); // さらに拡大\r\n```\r\n\r\n### 2. 関数呼び出し時のメモリ\r\n\r\n```javascript\r\nfunction greet(name) {\r\n    let message = `こんにちは、${name}さん！`;\r\n    return message;\r\n}\r\n\r\n// 関数呼び出し時\r\nlet result = greet(\"山田\");\r\n// 1. nameパラメータ用のメモリ確保\r\n// 2. message変数用のメモリ確保\r\n// 3. 関数終了後、一時的なメモリを解放\r\n```\r\n\r\n## プログラムの最適化\r\n\r\nプログラムをより効率的に動作させるための工夫：\r\n\r\n### 1. メモリの効率的な使用\r\n\r\n```javascript\r\n// 悪い例：不必要なメモリ使用\r\nfunction processData(data) {\r\n    let tempArray = [...data];  // 配列のコピーを作成\r\n    tempArray.sort();\r\n    return tempArray;\r\n}\r\n\r\n// 良い例：必要最小限のメモリ使用\r\nfunction processData(data) {\r\n    return [...data].sort();  // 直接結果を返す\r\n}\r\n```\r\n\r\n### 2. 処理の効率化\r\n\r\n```javascript\r\n// 悪い例：重複した計算\r\nfunction calculateTotal(numbers) {\r\n    let sum = 0;\r\n    for (let i = 0; i \u003C numbers.length; i++) {\r\n        sum += numbers[i] * numbers[i];  // 毎回二乗を計算\r\n    }\r\n    return sum;\r\n}\r\n\r\n// 良い例：計算結果の再利用\r\nfunction calculateTotal(numbers) {\r\n    let sum = 0;\r\n    for (let i = 0; i \u003C numbers.length; i++) {\r\n        let square = numbers[i] * numbers[i];  // 結果を一時変数に保存\r\n        sum += square;\r\n    }\r\n    return sum;\r\n}\r\n```\r\n\r\n## デバッグの基本\r\n\r\nプログラムの問題を見つけて修正する方法：\r\n\r\n### 1. コンソールログの使用\r\n\r\n```javascript\r\nfunction divide(a, b) {\r\n    console.log('入力値:', a, b);  // 入力値の確認\r\n    \r\n    if (b === 0) {\r\n        console.error('0での除算はできません');  // エラーメッセージ\r\n        return null;\r\n    }\r\n    \r\n    let result = a / b;\r\n    console.log('計算結果:', result);  // 結果の確認\r\n    \r\n    return result;\r\n}\r\n```\r\n\r\n### 2. デバッガーの使用\r\n\r\n```javascript\r\nfunction calculateComplex(data) {\r\n    debugger;  // ここでプログラムが一時停止\r\n    \r\n    let result = 0;\r\n    for (let i = 0; i \u003C data.length; i++) {\r\n        result += data[i].value * 2;\r\n    }\r\n    \r\n    return result;\r\n}\r\n```\r\n\r\n## まとめ\r\n\r\nプログラムの動作の仕組みを理解するポイント：\r\n\r\n1. **基本構造**\r\n   - 入力→処理→出力の流れ\r\n   - メモリの使用方法\r\n   - CPUとの関係\r\n\r\n2. **実行プロセス**\r\n   - コンパイル型言語の特徴\r\n   - インタープリタ型言語の特徴\r\n   - メモリ管理の重要性\r\n\r\n3. **最適化とデバッグ**\r\n   - 効率的なコードの書き方\r\n   - 問題解決の手法\r\n   - ツールの活用\r\n\r\nプログラムの動作を理解することで、より効率的なコードが書けるようになります。この基礎知識を活かして、プログラミングの学習を進めていきましょう。\r\n\r\n## 次のステップ\r\n\r\nプログラムの動作の仕組みを理解したら、以下の記事も参考にしてください：\r\n\r\n- [変数・データ型・関数とは？初心者向けに超わかりやすく解説](/tech-blog/blog/programming-basics-for-beginners/)\r\n- [【初心者向け】プログラミングのエラーの種類と対処法](/tech-blog/blog/programming-error-handling-guide/)\r\n- [【図解】アルゴリズムとは？初心者が知るべき基本概念](/tech-blog/blog/algorithm-basics-explained/)","src/content/blog/how-programs-work.md","656fa0e32301e7d9",{"html":1667,"metadata":1668},"\u003Ch1 id=\"超入門プログラムが動く仕組みを簡単解説\">【超入門】プログラムが動く仕組みを簡単解説！\u003C/h1>\n\u003Cp>プログラムがどのように動くのか、その仕組みを理解することは、プログラミングを学ぶ上で重要な第一歩です。この記事では、コンピュータプログラムの動作の仕組みを、できるだけわかりやすく解説します。\u003C/p>\n\u003Ch2 id=\"プログラムとは\">プログラムとは？\u003C/h2>\n\u003Cp>プログラムは、コンピュータに対する「指示書」のようなものです。料理のレシピと同じように、「何を」「どのような順序で」実行するかを細かく指定します。\u003C/p>\n\u003Ch3 id=\"プログラムの3つの要素\">プログラムの3つの要素\u003C/h3>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>入力（Input）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>ユーザーからのデータ\u003C/li>\n\u003Cli>ファイルからの読み込み\u003C/li>\n\u003Cli>センサーからの情報\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>処理（Process）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>データの計算\u003C/li>\n\u003Cli>条件による分岐\u003C/li>\n\u003Cli>繰り返し処理\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>出力（Output）\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>画面への表示\u003C/li>\n\u003Cli>ファイルへの保存\u003C/li>\n\u003Cli>他のシステムへの送信\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"プログラムが動く仕組み\">プログラムが動く仕組み\u003C/h2>\n\u003Ch3 id=\"1-ソースコードからプログラムへ\">1. ソースコードからプログラムへ\u003C/h3>\n\u003Cp>プログラムが実行されるまでの流れを、簡単な例で見てみましょう：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># 簡単な計算プログラム\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">number \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> number \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(result)  \u003C/span>\u003Cspan style=\"color:#6272A4\"># 20が表示される\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>このプログラムが動く仕組みは以下の通りです：\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>作成\u003C/strong>: プログラマーがソースコードを書く\u003C/li>\n\u003Cli>\u003Cstrong>変換\u003C/strong>: ソースコードがコンピュータが理解できる形に変換される\u003C/li>\n\u003Cli>\u003Cstrong>実行\u003C/strong>: コンピュータがプログラムを実行する\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"2-メモリとプログラムの関係\">2. メモリとプログラムの関係\u003C/h3>\n\u003Cp>プログラムは、メモリ（コンピュータの一時的な記憶領域）を使って動作します：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// メモリの使用例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// メモリに\"田中\"を保存\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 25\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;      \u003C/span>\u003Cspan style=\"color:#6272A4\">// メモリに25を保存\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// メモリの内容を使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">さんは\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">age\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">歳です`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>メモリの使われ方をたとえると：\u003C/p>\n\u003Cul>\n\u003Cli>メモリは「付箋紙」のようなもの\u003C/li>\n\u003Cli>変数は「付箋紙に書かれた内容」\u003C/li>\n\u003Cli>プログラムは「付箋紙の内容を読み書きする人」\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-cpuとの関係\">3. CPUとの関係\u003C/h3>\n\u003Cp>CPUは、プログラムの指示を1つずつ実行する「作業者」のような存在です：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>命令の読み込み\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>プログラムから次の命令を取得\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>命令の解釈\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>何をすべきかを理解\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>命令の実行\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>実際の処理を行う\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>結果の保存\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>処理結果をメモリに保存\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"プログラムの実行過程\">プログラムの実行過程\u003C/h2>\n\u003Ch3 id=\"1-コンパイル型言語の場合\">1. コンパイル型言語の場合\u003C/h3>\n\u003Cp>C++やJavaなどのコンパイル型言語の実行過程：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"mermaid\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">graph LR\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    A[ソースコード] --> B[コンパイラ] --> C[実行可能ファイル] --> D[プログラム実行]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>ソースコード作成\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"cpp\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// C++の例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">#include\u003C/span>\u003Cspan style=\"color:#E9F284\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#F1FA8C\">iostream\u003C/span>\u003Cspan style=\"color:#E9F284\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">int\u003C/span>\u003Cspan style=\"color:#50FA7B\"> main\u003C/span>\u003Cspan style=\"color:#F8F8F2\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    std\u003C/span>\u003Cspan style=\"color:#FF79C6\">::\u003C/span>\u003Cspan style=\"color:#F8F8F2\">cout \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;&#x3C;\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#FF79C6\"> &#x3C;&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> std\u003C/span>\u003Cspan style=\"color:#FF79C6\">::\u003C/span>\u003Cspan style=\"color:#F8F8F2\">endl;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>コンパイル\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>ソースコードを機械語に変換\u003C/li>\n\u003Cli>エラーチェック\u003C/li>\n\u003Cli>最適化\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>実行\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>変換された機械語を実行\u003C/li>\n\u003Cli>高速な実行が可能\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"2-インタープリタ型言語の場合\">2. インタープリタ型言語の場合\u003C/h3>\n\u003Cp>PythonやJavaScriptなどのインタープリタ型言語の実行過程：\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"mermaid\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">graph LR\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    A[ソースコード] --> B[インタープリタ] --> C[プログラム実行]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>ソースコード作成\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"python\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\"># Pythonの例\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#8BE9FD\">print\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">Hello, World!\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>インタープリタによる実行\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>コードを1行ずつ解釈\u003C/li>\n\u003Cli>直接実行\u003C/li>\n\u003Cli>柔軟な実行が可能\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"プログラムの実行例\">プログラムの実行例\u003C/h2>\n\u003Cp>実際のプログラムがどのように動くのか、簡単な例で見てみましょう：\u003C/p>\n\u003Ch3 id=\"1-計算プログラム\">1. 計算プログラム\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 簡単な計算機プログラム\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculate\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">operation\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">    // 操作に応じて計算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    switch\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (operation) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        case\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">+\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">+\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        case\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">-\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">-\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        case\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">*\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        case\u003C/span>\u003Cspan style=\"color:#E9F284\"> '\u003C/span>\u003Cspan style=\"color:#F1FA8C\">/\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">            result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">            break\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// プログラムの実行\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num1 \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 10\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> num2 \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 5\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> answer \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculate\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(num1, num2, \u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">+\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(answer);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 15が表示される\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>このプログラムの実行過程：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>変数の準備\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>num1\u003C/code>に10を格納\u003C/li>\n\u003Cli>\u003Ccode>num2\u003C/code>に5を格納\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>関数の呼び出し\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ccode>calculate\u003C/code>関数に値を渡す\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>計算の実行\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>加算操作を実行\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>結果の表示\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>計算結果を画面に表示\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"2-データ処理プログラム\">2. データ処理プログラム\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 学生データを処理するプログラム\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">class\u003C/span>\u003Cspan style=\"color:#8BE9FD\"> Student\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    constructor\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">score\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.name \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#BD93F9;font-style:italic\">        this\u003C/span>\u003Cspan style=\"color:#F8F8F2\">.score \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> score;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 学生データの配列\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> students \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6;font-weight:bold\">    new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Student\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">田中\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">85\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6;font-weight:bold\">    new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Student\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">鈴木\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">92\u003C/span>\u003Cspan style=\"color:#F8F8F2\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6;font-weight:bold\">    new\u003C/span>\u003Cspan style=\"color:#50FA7B\"> Student\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">佐藤\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#BD93F9\">78\u003C/span>\u003Cspan style=\"color:#F8F8F2\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 平均点を計算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> student \u003C/span>\u003Cspan style=\"color:#FF79C6\">of\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> students) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    total \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> student.score;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> average \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> total \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> students.length;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`クラスの平均点: \u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">average\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>このプログラムの実行過程：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>データの準備\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>学生オブジェクトの作成\u003C/li>\n\u003Cli>配列への格納\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>ループ処理\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>各学生のスコアを加算\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>計算処理\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>平均値の計算\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>結果の出力\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>平均点の表示\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"メモリの使われ方\">メモリの使われ方\u003C/h2>\n\u003Cp>プログラムがメモリをどのように使用するか、具体例で見てみましょう：\u003C/p>\n\u003Ch3 id=\"1-変数のメモリ割り当て\">1. 変数のメモリ割り当て\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> name \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#E9F284\"> \"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 文字列用のメモリ領域\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> age \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 30\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;      \u003C/span>\u003Cspan style=\"color:#6272A4\">// 数値用のメモリ領域\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> items \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [];    \u003C/span>\u003Cspan style=\"color:#6272A4\">// 配列用のメモリ領域\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// メモリ使用の変化\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">items.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">本\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);   \u003C/span>\u003Cspan style=\"color:#6272A4\">// 配列のメモリ領域が拡大\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">items.\u003C/span>\u003Cspan style=\"color:#50FA7B\">push\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">ペン\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">); \u003C/span>\u003Cspan style=\"color:#6272A4\">// さらに拡大\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-関数呼び出し時のメモリ\">2. 関数呼び出し時のメモリ\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">name\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F1FA8C\"> `こんにちは、\u003C/span>\u003Cspan style=\"color:#FF79C6\">${\u003C/span>\u003Cspan style=\"color:#F8F8F2\">name\u003C/span>\u003Cspan style=\"color:#FF79C6\">}\u003C/span>\u003Cspan style=\"color:#F1FA8C\">さん！`\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> message;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 関数呼び出し時\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#50FA7B\"> greet\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F1FA8C\">山田\u003C/span>\u003Cspan style=\"color:#E9F284\">\"\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 1. nameパラメータ用のメモリ確保\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 2. message変数用のメモリ確保\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 3. 関数終了後、一時的なメモリを解放\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"プログラムの最適化\">プログラムの最適化\u003C/h2>\n\u003Cp>プログラムをより効率的に動作させるための工夫：\u003C/p>\n\u003Ch3 id=\"1-メモリの効率的な使用\">1. メモリの効率的な使用\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例：不必要なメモリ使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> processData\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">data\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> tempArray \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#FF79C6\">...\u003C/span>\u003Cspan style=\"color:#F8F8F2\">data];  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 配列のコピーを作成\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    tempArray.\u003C/span>\u003Cspan style=\"color:#50FA7B\">sort\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> tempArray;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例：必要最小限のメモリ使用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> processData\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">data\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> [\u003C/span>\u003Cspan style=\"color:#FF79C6\">...\u003C/span>\u003Cspan style=\"color:#F8F8F2\">data].\u003C/span>\u003Cspan style=\"color:#50FA7B\">sort\u003C/span>\u003Cspan style=\"color:#F8F8F2\">();  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 直接結果を返す\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-処理の効率化\">2. 処理の効率化\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 悪い例：重複した計算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">numbers\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers[i] \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers[i];  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 毎回二乗を計算\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6272A4\">// 良い例：計算結果の再利用\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateTotal\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">numbers\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> square \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers[i] \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> numbers[i];  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 結果を一時変数に保存\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        sum \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> square;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> sum;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"デバッグの基本\">デバッグの基本\u003C/h2>\n\u003Cp>プログラムの問題を見つけて修正する方法：\u003C/p>\n\u003Ch3 id=\"1-コンソールログの使用\">1. コンソールログの使用\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> divide\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">a\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, \u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">b\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">入力値:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, a, b);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 入力値の確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    if\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (b \u003C/span>\u003Cspan style=\"color:#FF79C6\">===\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">error\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">0での除算はできません\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// エラーメッセージ\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">        return\u003C/span>\u003Cspan style=\"color:#BD93F9\"> null\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> a \u003C/span>\u003Cspan style=\"color:#FF79C6\">/\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> b;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    console.\u003C/span>\u003Cspan style=\"color:#50FA7B\">log\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F1FA8C\">計算結果:\u003C/span>\u003Cspan style=\"color:#E9F284\">'\u003C/span>\u003Cspan style=\"color:#F8F8F2\">, result);  \u003C/span>\u003Cspan style=\"color:#6272A4\">// 結果の確認\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-デバッガーの使用\">2. デバッガーの使用\u003C/h3>\n\u003Cpre class=\"astro-code dracula\" style=\"background-color:#282A36;color:#F8F8F2; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">function\u003C/span>\u003Cspan style=\"color:#50FA7B\"> calculateComplex\u003C/span>\u003Cspan style=\"color:#F8F8F2\">(\u003C/span>\u003Cspan style=\"color:#FFB86C;font-style:italic\">data\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    debugger\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;  \u003C/span>\u003Cspan style=\"color:#6272A4\">// ここでプログラムが一時停止\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    for\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> (\u003C/span>\u003Cspan style=\"color:#FF79C6\">let\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> i \u003C/span>\u003Cspan style=\"color:#FF79C6\">=\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 0\u003C/span>\u003Cspan style=\"color:#F8F8F2\">; i \u003C/span>\u003Cspan style=\"color:#FF79C6\">&#x3C;\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> data.length; i\u003C/span>\u003Cspan style=\"color:#FF79C6\">++\u003C/span>\u003Cspan style=\"color:#F8F8F2\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">        result \u003C/span>\u003Cspan style=\"color:#FF79C6\">+=\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> data[i].value \u003C/span>\u003Cspan style=\"color:#FF79C6\">*\u003C/span>\u003Cspan style=\"color:#BD93F9\"> 2\u003C/span>\u003Cspan style=\"color:#F8F8F2\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FF79C6\">    return\u003C/span>\u003Cspan style=\"color:#F8F8F2\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F8F8F2\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"まとめ\">まとめ\u003C/h2>\n\u003Cp>プログラムの動作の仕組みを理解するポイント：\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>基本構造\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>入力→処理→出力の流れ\u003C/li>\n\u003Cli>メモリの使用方法\u003C/li>\n\u003Cli>CPUとの関係\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>実行プロセス\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>コンパイル型言語の特徴\u003C/li>\n\u003Cli>インタープリタ型言語の特徴\u003C/li>\n\u003Cli>メモリ管理の重要性\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>最適化とデバッグ\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>効率的なコードの書き方\u003C/li>\n\u003Cli>問題解決の手法\u003C/li>\n\u003Cli>ツールの活用\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>プログラムの動作を理解することで、より効率的なコードが書けるようになります。この基礎知識を活かして、プログラミングの学習を進めていきましょう。\u003C/p>\n\u003Ch2 id=\"次のステップ\">次のステップ\u003C/h2>\n\u003Cp>プログラムの動作の仕組みを理解したら、以下の記事も参考にしてください：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/programming-basics-for-beginners/\">変数・データ型・関数とは？初心者向けに超わかりやすく解説\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/programming-error-handling-guide/\">【初心者向け】プログラミングのエラーの種類と対処法\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/tech-blog/blog/algorithm-basics-explained/\">【図解】アルゴリズムとは？初心者が知るべき基本概念\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":1669,"imagePaths":1730,"frontmatter":1731},[1670,1672,1675,1677,1679,1682,1685,1688,1690,1693,1696,1698,1701,1704,1706,1709,1712,1714,1717,1720,1722,1725,1728,1729],{"depth":26,"slug":1671,"text":1660},"超入門プログラムが動く仕組みを簡単解説",{"depth":29,"slug":1673,"text":1674},"プログラムとは","プログラムとは？",{"depth":33,"slug":1676,"text":1676},"プログラムの3つの要素",{"depth":29,"slug":1678,"text":1678},"プログラムが動く仕組み",{"depth":33,"slug":1680,"text":1681},"1-ソースコードからプログラムへ","1. ソースコードからプログラムへ",{"depth":33,"slug":1683,"text":1684},"2-メモリとプログラムの関係","2. メモリとプログラムの関係",{"depth":33,"slug":1686,"text":1687},"3-cpuとの関係","3. CPUとの関係",{"depth":29,"slug":1689,"text":1689},"プログラムの実行過程",{"depth":33,"slug":1691,"text":1692},"1-コンパイル型言語の場合","1. コンパイル型言語の場合",{"depth":33,"slug":1694,"text":1695},"2-インタープリタ型言語の場合","2. インタープリタ型言語の場合",{"depth":29,"slug":1697,"text":1697},"プログラムの実行例",{"depth":33,"slug":1699,"text":1700},"1-計算プログラム","1. 計算プログラム",{"depth":33,"slug":1702,"text":1703},"2-データ処理プログラム","2. データ処理プログラム",{"depth":29,"slug":1705,"text":1705},"メモリの使われ方",{"depth":33,"slug":1707,"text":1708},"1-変数のメモリ割り当て","1. 変数のメモリ割り当て",{"depth":33,"slug":1710,"text":1711},"2-関数呼び出し時のメモリ","2. 関数呼び出し時のメモリ",{"depth":29,"slug":1713,"text":1713},"プログラムの最適化",{"depth":33,"slug":1715,"text":1716},"1-メモリの効率的な使用","1. メモリの効率的な使用",{"depth":33,"slug":1718,"text":1719},"2-処理の効率化","2. 処理の効率化",{"depth":29,"slug":1721,"text":1721},"デバッグの基本",{"depth":33,"slug":1723,"text":1724},"1-コンソールログの使用","1. コンソールログの使用",{"depth":33,"slug":1726,"text":1727},"2-デバッガーの使用","2. デバッガーの使用",{"depth":29,"slug":145,"text":145},{"depth":29,"slug":233,"text":233},[],{"title":1660,"description":1661,"pubDate":1732,"heroImage":514},"Feb 28 2025"]